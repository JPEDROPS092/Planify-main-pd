/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/api/auth/access-profiles/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description ViewSet para gerenciamento de perfis de acesso. */
    get: operations["api_auth_access_profiles_list"];
    put?: never;
    /** @description ViewSet para gerenciamento de perfis de acesso. */
    post: operations["api_auth_access_profiles_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/auth/access-profiles/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description ViewSet para gerenciamento de perfis de acesso. */
    get: operations["api_auth_access_profiles_retrieve"];
    /** @description ViewSet para gerenciamento de perfis de acesso. */
    put: operations["api_auth_access_profiles_update"];
    post?: never;
    /** @description ViewSet para gerenciamento de perfis de acesso. */
    delete: operations["api_auth_access_profiles_destroy"];
    options?: never;
    head?: never;
    /** @description ViewSet para gerenciamento de perfis de acesso. */
    patch: operations["api_auth_access_profiles_partial_update"];
    trace?: never;
  };
  "/api/auth/permissions/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description ViewSet para gerenciamento de permissões. */
    get: operations["api_auth_permissions_list"];
    put?: never;
    /** @description ViewSet para gerenciamento de permissões. */
    post: operations["api_auth_permissions_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/auth/permissions/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description ViewSet para gerenciamento de permissões. */
    get: operations["api_auth_permissions_retrieve"];
    /** @description ViewSet para gerenciamento de permissões. */
    put: operations["api_auth_permissions_update"];
    post?: never;
    /** @description ViewSet para gerenciamento de permissões. */
    delete: operations["api_auth_permissions_destroy"];
    options?: never;
    head?: never;
    /** @description ViewSet para gerenciamento de permissões. */
    patch: operations["api_auth_permissions_partial_update"];
    trace?: never;
  };
  "/api/auth/profiles/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["api_auth_profiles_list"];
    put?: never;
    post: operations["api_auth_profiles_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/auth/profiles/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["api_auth_profiles_retrieve"];
    put: operations["api_auth_profiles_update"];
    post?: never;
    delete: operations["api_auth_profiles_destroy"];
    options?: never;
    head?: never;
    patch: operations["api_auth_profiles_partial_update"];
    trace?: never;
  };
  "/api/auth/token/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Takes a set of user credentials and returns an access and refresh JSON web
     *     token pair to prove the authentication of those credentials. */
    post: operations["api_auth_token_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/auth/token/refresh/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Takes a refresh type JSON web token and returns an access type JSON web
     *     token if the refresh token is valid. */
    post: operations["api_auth_token_refresh_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/auth/users/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description ViewSet para gerenciamento de usuários. */
    get: operations["api_auth_users_list"];
    put?: never;
    /** @description ViewSet para gerenciamento de usuários. */
    post: operations["api_auth_users_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/auth/users/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description ViewSet para gerenciamento de usuários. */
    get: operations["api_auth_users_retrieve"];
    /** @description ViewSet para gerenciamento de usuários. */
    put: operations["api_auth_users_update"];
    post?: never;
    /** @description ViewSet para gerenciamento de usuários. */
    delete: operations["api_auth_users_destroy"];
    options?: never;
    head?: never;
    /** @description ViewSet para gerenciamento de usuários. */
    patch: operations["api_auth_users_partial_update"];
    trace?: never;
  };
  "/api/auth/users/{id}/activate/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Ativa um usuário. */
    post: operations["api_auth_users_activate_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/auth/users/{id}/deactivate/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Desativa um usuário. */
    post: operations["api_auth_users_deactivate_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/auth/users/{id}/reset_password/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Redefine a senha do usuário para uma senha temporária e envia por e-mail. */
    post: operations["api_auth_users_reset_password_create_2"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/auth/users/{id}/unlock/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Desbloqueia um usuário após tentativas de login malsucedidas. */
    post: operations["api_auth_users_unlock_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/auth/users/activation/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: operations["api_auth_users_activation_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/auth/users/change_password/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Altera a senha do usuário autenticado. */
    post: operations["api_auth_users_change_password_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/auth/users/me/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Retorna as informações do usuário autenticado. */
    get: operations["api_auth_users_me_retrieve"];
    put: operations["api_auth_users_me_update"];
    post?: never;
    delete: operations["api_auth_users_me_destroy"];
    options?: never;
    head?: never;
    patch: operations["api_auth_users_me_partial_update"];
    trace?: never;
  };
  "/api/auth/users/permissions/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Retorna as permissões do usuário autenticado. */
    get: operations["api_auth_users_permissions_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/auth/users/resend_activation/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: operations["api_auth_users_resend_activation_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/auth/users/reset_password/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: operations["api_auth_users_reset_password_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/auth/users/reset_password_confirm/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: operations["api_auth_users_reset_password_confirm_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/auth/users/reset_username/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: operations["api_auth_users_reset_username_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/auth/users/reset_username_confirm/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: operations["api_auth_users_reset_username_confirm_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/auth/users/set_password/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: operations["api_auth_users_set_password_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/auth/users/set_username/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: operations["api_auth_users_set_username_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/communications/configuracoes/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description ViewSet para gerenciamento de configurações de notificações.
     *
     *     Permite criar, listar, atualizar e excluir configurações de notificações do usuário.
     *     Cada usuário pode ter suas próprias configurações para diferentes tipos de notificações.
     *
     *     Endpoints:
     *     - GET /configuracoes-notificacao/ - Lista configurações do usuário
     *     - POST /configuracoes-notificacao/ - Cria uma nova configuração
     *     - GET /configuracoes-notificacao/{id}/ - Obtém detalhes de uma configuração
     *     - PUT/PATCH /configuracoes-notificacao/{id}/ - Atualiza uma configuração
     *     - DELETE /configuracoes-notificacao/{id}/ - Remove uma configuração */
    get: operations["api_communications_configuracoes_list"];
    put?: never;
    /** @description ViewSet para gerenciamento de configurações de notificações.
     *
     *     Permite criar, listar, atualizar e excluir configurações de notificações do usuário.
     *     Cada usuário pode ter suas próprias configurações para diferentes tipos de notificações.
     *
     *     Endpoints:
     *     - GET /configuracoes-notificacao/ - Lista configurações do usuário
     *     - POST /configuracoes-notificacao/ - Cria uma nova configuração
     *     - GET /configuracoes-notificacao/{id}/ - Obtém detalhes de uma configuração
     *     - PUT/PATCH /configuracoes-notificacao/{id}/ - Atualiza uma configuração
     *     - DELETE /configuracoes-notificacao/{id}/ - Remove uma configuração */
    post: operations["api_communications_configuracoes_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/communications/configuracoes/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description ViewSet para gerenciamento de configurações de notificações.
     *
     *     Permite criar, listar, atualizar e excluir configurações de notificações do usuário.
     *     Cada usuário pode ter suas próprias configurações para diferentes tipos de notificações.
     *
     *     Endpoints:
     *     - GET /configuracoes-notificacao/ - Lista configurações do usuário
     *     - POST /configuracoes-notificacao/ - Cria uma nova configuração
     *     - GET /configuracoes-notificacao/{id}/ - Obtém detalhes de uma configuração
     *     - PUT/PATCH /configuracoes-notificacao/{id}/ - Atualiza uma configuração
     *     - DELETE /configuracoes-notificacao/{id}/ - Remove uma configuração */
    get: operations["api_communications_configuracoes_retrieve"];
    /** @description ViewSet para gerenciamento de configurações de notificações.
     *
     *     Permite criar, listar, atualizar e excluir configurações de notificações do usuário.
     *     Cada usuário pode ter suas próprias configurações para diferentes tipos de notificações.
     *
     *     Endpoints:
     *     - GET /configuracoes-notificacao/ - Lista configurações do usuário
     *     - POST /configuracoes-notificacao/ - Cria uma nova configuração
     *     - GET /configuracoes-notificacao/{id}/ - Obtém detalhes de uma configuração
     *     - PUT/PATCH /configuracoes-notificacao/{id}/ - Atualiza uma configuração
     *     - DELETE /configuracoes-notificacao/{id}/ - Remove uma configuração */
    put: operations["api_communications_configuracoes_update"];
    post?: never;
    /** @description ViewSet para gerenciamento de configurações de notificações.
     *
     *     Permite criar, listar, atualizar e excluir configurações de notificações do usuário.
     *     Cada usuário pode ter suas próprias configurações para diferentes tipos de notificações.
     *
     *     Endpoints:
     *     - GET /configuracoes-notificacao/ - Lista configurações do usuário
     *     - POST /configuracoes-notificacao/ - Cria uma nova configuração
     *     - GET /configuracoes-notificacao/{id}/ - Obtém detalhes de uma configuração
     *     - PUT/PATCH /configuracoes-notificacao/{id}/ - Atualiza uma configuração
     *     - DELETE /configuracoes-notificacao/{id}/ - Remove uma configuração */
    delete: operations["api_communications_configuracoes_destroy"];
    options?: never;
    head?: never;
    /** @description ViewSet para gerenciamento de configurações de notificações.
     *
     *     Permite criar, listar, atualizar e excluir configurações de notificações do usuário.
     *     Cada usuário pode ter suas próprias configurações para diferentes tipos de notificações.
     *
     *     Endpoints:
     *     - GET /configuracoes-notificacao/ - Lista configurações do usuário
     *     - POST /configuracoes-notificacao/ - Cria uma nova configuração
     *     - GET /configuracoes-notificacao/{id}/ - Obtém detalhes de uma configuração
     *     - PUT/PATCH /configuracoes-notificacao/{id}/ - Atualiza uma configuração
     *     - DELETE /configuracoes-notificacao/{id}/ - Remove uma configuração */
    patch: operations["api_communications_configuracoes_partial_update"];
    trace?: never;
  };
  "/api/communications/configuracoes/minha_configuracao/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Retorna a configuração do usuário atual ou cria uma padrão se não existir. */
    get: operations["api_communications_configuracoes_minha_configuracao_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/communications/mensagens/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description ViewSet para gerenciamento de mensagens de chat.
     *
     *     Permite criar, listar, atualizar e excluir mensagens de chat em projetos.
     *     Inclui funcionalidades para marcar mensagens como lidas e filtrar mensagens não lidas.
     *
     *     Endpoints:
     *     - GET /chat-mensagens/ - Lista todas as mensagens (com filtros)
     *     - POST /chat-mensagens/ - Cria uma nova mensagem
     *     - GET /chat-mensagens/{id}/ - Obtém detalhes de uma mensagem
     *     - PUT/PATCH /chat-mensagens/{id}/ - Atualiza uma mensagem
     *     - DELETE /chat-mensagens/{id}/ - Remove uma mensagem
     *     - POST /chat-mensagens/{id}/marcar_como_lida/ - Marca uma mensagem como lida
     *     - GET /chat-mensagens/mensagens_nao_lidas/ - Lista mensagens não lidas */
    get: operations["api_communications_mensagens_list"];
    put?: never;
    /** @description ViewSet para gerenciamento de mensagens de chat.
     *
     *     Permite criar, listar, atualizar e excluir mensagens de chat em projetos.
     *     Inclui funcionalidades para marcar mensagens como lidas e filtrar mensagens não lidas.
     *
     *     Endpoints:
     *     - GET /chat-mensagens/ - Lista todas as mensagens (com filtros)
     *     - POST /chat-mensagens/ - Cria uma nova mensagem
     *     - GET /chat-mensagens/{id}/ - Obtém detalhes de uma mensagem
     *     - PUT/PATCH /chat-mensagens/{id}/ - Atualiza uma mensagem
     *     - DELETE /chat-mensagens/{id}/ - Remove uma mensagem
     *     - POST /chat-mensagens/{id}/marcar_como_lida/ - Marca uma mensagem como lida
     *     - GET /chat-mensagens/mensagens_nao_lidas/ - Lista mensagens não lidas */
    post: operations["api_communications_mensagens_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/communications/mensagens/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description ViewSet para gerenciamento de mensagens de chat.
     *
     *     Permite criar, listar, atualizar e excluir mensagens de chat em projetos.
     *     Inclui funcionalidades para marcar mensagens como lidas e filtrar mensagens não lidas.
     *
     *     Endpoints:
     *     - GET /chat-mensagens/ - Lista todas as mensagens (com filtros)
     *     - POST /chat-mensagens/ - Cria uma nova mensagem
     *     - GET /chat-mensagens/{id}/ - Obtém detalhes de uma mensagem
     *     - PUT/PATCH /chat-mensagens/{id}/ - Atualiza uma mensagem
     *     - DELETE /chat-mensagens/{id}/ - Remove uma mensagem
     *     - POST /chat-mensagens/{id}/marcar_como_lida/ - Marca uma mensagem como lida
     *     - GET /chat-mensagens/mensagens_nao_lidas/ - Lista mensagens não lidas */
    get: operations["api_communications_mensagens_retrieve"];
    /** @description ViewSet para gerenciamento de mensagens de chat.
     *
     *     Permite criar, listar, atualizar e excluir mensagens de chat em projetos.
     *     Inclui funcionalidades para marcar mensagens como lidas e filtrar mensagens não lidas.
     *
     *     Endpoints:
     *     - GET /chat-mensagens/ - Lista todas as mensagens (com filtros)
     *     - POST /chat-mensagens/ - Cria uma nova mensagem
     *     - GET /chat-mensagens/{id}/ - Obtém detalhes de uma mensagem
     *     - PUT/PATCH /chat-mensagens/{id}/ - Atualiza uma mensagem
     *     - DELETE /chat-mensagens/{id}/ - Remove uma mensagem
     *     - POST /chat-mensagens/{id}/marcar_como_lida/ - Marca uma mensagem como lida
     *     - GET /chat-mensagens/mensagens_nao_lidas/ - Lista mensagens não lidas */
    put: operations["api_communications_mensagens_update"];
    post?: never;
    /** @description ViewSet para gerenciamento de mensagens de chat.
     *
     *     Permite criar, listar, atualizar e excluir mensagens de chat em projetos.
     *     Inclui funcionalidades para marcar mensagens como lidas e filtrar mensagens não lidas.
     *
     *     Endpoints:
     *     - GET /chat-mensagens/ - Lista todas as mensagens (com filtros)
     *     - POST /chat-mensagens/ - Cria uma nova mensagem
     *     - GET /chat-mensagens/{id}/ - Obtém detalhes de uma mensagem
     *     - PUT/PATCH /chat-mensagens/{id}/ - Atualiza uma mensagem
     *     - DELETE /chat-mensagens/{id}/ - Remove uma mensagem
     *     - POST /chat-mensagens/{id}/marcar_como_lida/ - Marca uma mensagem como lida
     *     - GET /chat-mensagens/mensagens_nao_lidas/ - Lista mensagens não lidas */
    delete: operations["api_communications_mensagens_destroy"];
    options?: never;
    head?: never;
    /** @description ViewSet para gerenciamento de mensagens de chat.
     *
     *     Permite criar, listar, atualizar e excluir mensagens de chat em projetos.
     *     Inclui funcionalidades para marcar mensagens como lidas e filtrar mensagens não lidas.
     *
     *     Endpoints:
     *     - GET /chat-mensagens/ - Lista todas as mensagens (com filtros)
     *     - POST /chat-mensagens/ - Cria uma nova mensagem
     *     - GET /chat-mensagens/{id}/ - Obtém detalhes de uma mensagem
     *     - PUT/PATCH /chat-mensagens/{id}/ - Atualiza uma mensagem
     *     - DELETE /chat-mensagens/{id}/ - Remove uma mensagem
     *     - POST /chat-mensagens/{id}/marcar_como_lida/ - Marca uma mensagem como lida
     *     - GET /chat-mensagens/mensagens_nao_lidas/ - Lista mensagens não lidas */
    patch: operations["api_communications_mensagens_partial_update"];
    trace?: never;
  };
  "/api/communications/mensagens/{id}/marcar_como_lida/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Marca uma mensagem como lida pelo usuário atual.
     *
     *     Args:
     *         request: Objeto de requisição
     *         pk: ID da mensagem a ser marcada como lida
     *
     *     Returns:
     *         Response: Detalhes do registro de leitura ou mensagem de status */
    post: operations["api_communications_mensagens_marcar_como_lida_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/communications/mensagens/mensagens_nao_lidas/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Retorna as mensagens não lidas pelo usuário atual.
     *
     *     Suporta filtro por projeto através do parâmetro 'projeto' na query string.
     *     Exclui mensagens enviadas pelo próprio usuário, pois estas não precisam ser lidas.
     *
     *     Args:
     *         request: Objeto de requisição
     *
     *     Returns:
     *         Response: Lista de mensagens não lidas */
    get: operations["api_communications_mensagens_mensagens_nao_lidas_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/communications/notificacoes/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description ViewSet para gerenciamento de notificações.
     *
     *     Permite criar, listar, atualizar e excluir notificações do sistema.
     *     Inclui funcionalidades para marcar notificações como lidas e filtrar notificações não lidas.
     *
     *     Endpoints:
     *     - GET /notificacoes/ - Lista notificações do usuário
     *     - GET /notificacoes/{id}/ - Obtém detalhes de uma notificação
     *     - POST /notificacoes/{id}/marcar_como_lida/ - Marca uma notificação como lida
     *     - POST /notificacoes/marcar_todas_como_lidas/ - Marca todas as notificações como lidas
     *     - GET /notificacoes/nao_lidas/ - Lista notificações não lidas */
    get: operations["api_communications_notificacoes_list"];
    put?: never;
    /** @description ViewSet para gerenciamento de notificações.
     *
     *     Permite criar, listar, atualizar e excluir notificações do sistema.
     *     Inclui funcionalidades para marcar notificações como lidas e filtrar notificações não lidas.
     *
     *     Endpoints:
     *     - GET /notificacoes/ - Lista notificações do usuário
     *     - GET /notificacoes/{id}/ - Obtém detalhes de uma notificação
     *     - POST /notificacoes/{id}/marcar_como_lida/ - Marca uma notificação como lida
     *     - POST /notificacoes/marcar_todas_como_lidas/ - Marca todas as notificações como lidas
     *     - GET /notificacoes/nao_lidas/ - Lista notificações não lidas */
    post: operations["api_communications_notificacoes_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/communications/notificacoes/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description ViewSet para gerenciamento de notificações.
     *
     *     Permite criar, listar, atualizar e excluir notificações do sistema.
     *     Inclui funcionalidades para marcar notificações como lidas e filtrar notificações não lidas.
     *
     *     Endpoints:
     *     - GET /notificacoes/ - Lista notificações do usuário
     *     - GET /notificacoes/{id}/ - Obtém detalhes de uma notificação
     *     - POST /notificacoes/{id}/marcar_como_lida/ - Marca uma notificação como lida
     *     - POST /notificacoes/marcar_todas_como_lidas/ - Marca todas as notificações como lidas
     *     - GET /notificacoes/nao_lidas/ - Lista notificações não lidas */
    get: operations["api_communications_notificacoes_retrieve"];
    /** @description ViewSet para gerenciamento de notificações.
     *
     *     Permite criar, listar, atualizar e excluir notificações do sistema.
     *     Inclui funcionalidades para marcar notificações como lidas e filtrar notificações não lidas.
     *
     *     Endpoints:
     *     - GET /notificacoes/ - Lista notificações do usuário
     *     - GET /notificacoes/{id}/ - Obtém detalhes de uma notificação
     *     - POST /notificacoes/{id}/marcar_como_lida/ - Marca uma notificação como lida
     *     - POST /notificacoes/marcar_todas_como_lidas/ - Marca todas as notificações como lidas
     *     - GET /notificacoes/nao_lidas/ - Lista notificações não lidas */
    put: operations["api_communications_notificacoes_update"];
    post?: never;
    /** @description ViewSet para gerenciamento de notificações.
     *
     *     Permite criar, listar, atualizar e excluir notificações do sistema.
     *     Inclui funcionalidades para marcar notificações como lidas e filtrar notificações não lidas.
     *
     *     Endpoints:
     *     - GET /notificacoes/ - Lista notificações do usuário
     *     - GET /notificacoes/{id}/ - Obtém detalhes de uma notificação
     *     - POST /notificacoes/{id}/marcar_como_lida/ - Marca uma notificação como lida
     *     - POST /notificacoes/marcar_todas_como_lidas/ - Marca todas as notificações como lidas
     *     - GET /notificacoes/nao_lidas/ - Lista notificações não lidas */
    delete: operations["api_communications_notificacoes_destroy"];
    options?: never;
    head?: never;
    /** @description ViewSet para gerenciamento de notificações.
     *
     *     Permite criar, listar, atualizar e excluir notificações do sistema.
     *     Inclui funcionalidades para marcar notificações como lidas e filtrar notificações não lidas.
     *
     *     Endpoints:
     *     - GET /notificacoes/ - Lista notificações do usuário
     *     - GET /notificacoes/{id}/ - Obtém detalhes de uma notificação
     *     - POST /notificacoes/{id}/marcar_como_lida/ - Marca uma notificação como lida
     *     - POST /notificacoes/marcar_todas_como_lidas/ - Marca todas as notificações como lidas
     *     - GET /notificacoes/nao_lidas/ - Lista notificações não lidas */
    patch: operations["api_communications_notificacoes_partial_update"];
    trace?: never;
  };
  "/api/communications/notificacoes/{id}/marcar_como_lida/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Marca uma notificação como lida.
     *
     *     Define o campo 'lida' como True e registra a data/hora em 'lida_em'.
     *
     *     Args:
     *         request: Objeto de requisição
     *         pk: ID da notificação a ser marcada como lida
     *
     *     Returns:
     *         Response: Detalhes da notificação atualizada ou mensagem de status */
    post: operations["api_communications_notificacoes_marcar_como_lida_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/communications/notificacoes/marcar_todas_como_lidas/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Marca todas as notificações não lidas do usuário como lidas.
     *
     *     Atualiza em massa todas as notificações não lidas do usuário atual,
     *     definindo 'lida' como True e 'lida_em' como a data/hora atual.
     *
     *     Args:
     *         request: Objeto de requisição
     *
     *     Returns:
     *         Response: Mensagem de confirmação com o número de notificações atualizadas */
    post: operations["api_communications_notificacoes_marcar_todas_como_lidas_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/communications/notificacoes/nao_lidas/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Retorna apenas as notificações não lidas do usuário.
     *
     *     Suporta filtros adicionais por tipo e prioridade através de parâmetros na query string.
     *
     *     Args:
     *         request: Objeto de requisição
     *
     *     Returns:
     *         Response: Lista de notificações não lidas filtradas */
    get: operations["api_communications_notificacoes_nao_lidas_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/costs/alertas/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description ViewSet para gerenciamento de alertas de orçamento. */
    get: operations["api_costs_alertas_list"];
    put?: never;
    /** @description ViewSet para gerenciamento de alertas de orçamento. */
    post: operations["api_costs_alertas_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/costs/alertas/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description ViewSet para gerenciamento de alertas de orçamento. */
    get: operations["api_costs_alertas_retrieve"];
    /** @description ViewSet para gerenciamento de alertas de orçamento. */
    put: operations["api_costs_alertas_update"];
    post?: never;
    /** @description ViewSet para gerenciamento de alertas de orçamento. */
    delete: operations["api_costs_alertas_destroy"];
    options?: never;
    head?: never;
    /** @description ViewSet para gerenciamento de alertas de orçamento. */
    patch: operations["api_costs_alertas_partial_update"];
    trace?: never;
  };
  "/api/costs/alertas/{id}/ignorar/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Marca um alerta como ignorado.
     *     Opcionalmente, pode incluir uma justificativa para ignorar o alerta. */
    post: operations["api_costs_alertas_ignorar_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/costs/alertas/{id}/resolver/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Marca um alerta como resolvido.
     *     Opcionalmente, pode incluir uma observação sobre a resolução. */
    post: operations["api_costs_alertas_resolver_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/costs/alertas/pendentes/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Retorna apenas os alertas pendentes (status ATIVO).
     *     Permite filtrar por projeto, tarefa e tipo. */
    get: operations["api_costs_alertas_pendentes_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/costs/categorias/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description ViewSet para gerenciamento de categorias de custos. */
    get: operations["api_costs_categorias_list"];
    put?: never;
    /** @description ViewSet para gerenciamento de categorias de custos. */
    post: operations["api_costs_categorias_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/costs/categorias/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description ViewSet para gerenciamento de categorias de custos. */
    get: operations["api_costs_categorias_retrieve"];
    /** @description ViewSet para gerenciamento de categorias de custos. */
    put: operations["api_costs_categorias_update"];
    post?: never;
    /** @description ViewSet para gerenciamento de categorias de custos. */
    delete: operations["api_costs_categorias_destroy"];
    options?: never;
    head?: never;
    /** @description ViewSet para gerenciamento de categorias de custos. */
    patch: operations["api_costs_categorias_partial_update"];
    trace?: never;
  };
  "/api/costs/custos/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description ViewSet para gerenciamento de custos.
     *     Permite criar, listar, atualizar e excluir custos. */
    get: operations["api_costs_custos_list"];
    put?: never;
    /** @description ViewSet para gerenciamento de custos.
     *     Permite criar, listar, atualizar e excluir custos. */
    post: operations["api_costs_custos_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/costs/custos/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description ViewSet para gerenciamento de custos.
     *     Permite criar, listar, atualizar e excluir custos. */
    get: operations["api_costs_custos_retrieve"];
    /** @description ViewSet para gerenciamento de custos.
     *     Permite criar, listar, atualizar e excluir custos. */
    put: operations["api_costs_custos_update"];
    post?: never;
    /** @description ViewSet para gerenciamento de custos.
     *     Permite criar, listar, atualizar e excluir custos. */
    delete: operations["api_costs_custos_destroy"];
    options?: never;
    head?: never;
    /** @description ViewSet para gerenciamento de custos.
     *     Permite criar, listar, atualizar e excluir custos. */
    patch: operations["api_costs_custos_partial_update"];
    trace?: never;
  };
  "/api/costs/custos/dashboard/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Endpoint para dashboard financeiro: retorna dados resumidos de custos.
     *     Inclui total gasto, gasto mensal, top categorias e alertas recentes. */
    get: operations["api_costs_custos_dashboard_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/costs/custos/relatorio_mensal/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Gera um relatório de gastos mensais para análise de tendências.
     *     Agrupa os custos por mês e retorna série temporal. */
    get: operations["api_costs_custos_relatorio_mensal_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/costs/custos/relatorio_por_categoria/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Gera um relatório de gastos por categoria.
     *     Utiliza anotações para calcular percentuais diretamente no banco de dados. */
    get: operations["api_costs_custos_relatorio_por_categoria_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/costs/custos/relatorio_por_projeto/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Gera um relatório de gastos por projeto. */
    get: operations["api_costs_custos_relatorio_por_projeto_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/costs/orcamentos-projeto/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description ViewSet para gerenciamento de orçamentos de projetos.
     *     Inclui anotações para calcular campos derivados diretamente no banco de dados. */
    get: operations["api_costs_orcamentos_projeto_list"];
    put?: never;
    /** @description ViewSet para gerenciamento de orçamentos de projetos.
     *     Inclui anotações para calcular campos derivados diretamente no banco de dados. */
    post: operations["api_costs_orcamentos_projeto_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/costs/orcamentos-projeto/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description ViewSet para gerenciamento de orçamentos de projetos.
     *     Inclui anotações para calcular campos derivados diretamente no banco de dados. */
    get: operations["api_costs_orcamentos_projeto_retrieve"];
    /** @description ViewSet para gerenciamento de orçamentos de projetos.
     *     Inclui anotações para calcular campos derivados diretamente no banco de dados. */
    put: operations["api_costs_orcamentos_projeto_update"];
    post?: never;
    /** @description ViewSet para gerenciamento de orçamentos de projetos.
     *     Inclui anotações para calcular campos derivados diretamente no banco de dados. */
    delete: operations["api_costs_orcamentos_projeto_destroy"];
    options?: never;
    head?: never;
    /** @description ViewSet para gerenciamento de orçamentos de projetos.
     *     Inclui anotações para calcular campos derivados diretamente no banco de dados. */
    patch: operations["api_costs_orcamentos_projeto_partial_update"];
    trace?: never;
  };
  "/api/costs/orcamentos-projeto/{id}/ajustar_orcamento/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Permite ajustar o orçamento de um projeto com justificativa.
     *     Mantém histórico da alteração no campo de observações. */
    post: operations["api_costs_orcamentos_projeto_ajustar_orcamento_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/costs/orcamentos-projeto/projetos_sem_orcamento/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Retorna a lista de projetos que ainda não possuem orçamento definido. */
    get: operations["api_costs_orcamentos_projeto_projetos_sem_orcamento_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/costs/orcamentos-tarefa/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description ViewSet para gerenciamento de orçamentos de tarefas.
     *     Inclui anotações para calcular campos derivados diretamente no banco de dados. */
    get: operations["api_costs_orcamentos_tarefa_list"];
    put?: never;
    /** @description ViewSet para gerenciamento de orçamentos de tarefas.
     *     Inclui anotações para calcular campos derivados diretamente no banco de dados. */
    post: operations["api_costs_orcamentos_tarefa_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/costs/orcamentos-tarefa/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description ViewSet para gerenciamento de orçamentos de tarefas.
     *     Inclui anotações para calcular campos derivados diretamente no banco de dados. */
    get: operations["api_costs_orcamentos_tarefa_retrieve"];
    /** @description ViewSet para gerenciamento de orçamentos de tarefas.
     *     Inclui anotações para calcular campos derivados diretamente no banco de dados. */
    put: operations["api_costs_orcamentos_tarefa_update"];
    post?: never;
    /** @description ViewSet para gerenciamento de orçamentos de tarefas.
     *     Inclui anotações para calcular campos derivados diretamente no banco de dados. */
    delete: operations["api_costs_orcamentos_tarefa_destroy"];
    options?: never;
    head?: never;
    /** @description ViewSet para gerenciamento de orçamentos de tarefas.
     *     Inclui anotações para calcular campos derivados diretamente no banco de dados. */
    patch: operations["api_costs_orcamentos_tarefa_partial_update"];
    trace?: never;
  };
  "/api/costs/orcamentos-tarefa/{id}/ajustar_orcamento/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Permite ajustar o orçamento de uma tarefa com justificativa.
     *     Mantém histórico da alteração no campo de observações. */
    post: operations["api_costs_orcamentos_tarefa_ajustar_orcamento_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/costs/orcamentos-tarefa/tarefas_sem_orcamento/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Retorna a lista de tarefas que ainda não possuem orçamento definido. */
    get: operations["api_costs_orcamentos_tarefa_tarefas_sem_orcamento_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/dashboard/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Visão Geral do Dashboard
     * @description Retorna uma visão geral do sistema, incluindo o número total de projetos, tarefas e a distribuição de tarefas por status. Requer autenticação.
     */
    get: operations["visao_geral_dashboard_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/documents/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Listar documentos
     * @description Retorna a lista de todos os documentos com filtros opcionais.
     */
    get: operations["api_documents_list"];
    put?: never;
    /**
     * Criar documento
     * @description Cria um novo documento no sistema.
     */
    post: operations["api_documents_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/documents/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Obter documento
     * @description Retorna os detalhes de um documento específico.
     */
    get: operations["api_documents_retrieve"];
    /**
     * Atualizar documento
     * @description Atualiza todos os campos de um documento existente.
     */
    put: operations["api_documents_update"];
    post?: never;
    /**
     * Excluir documento
     * @description Remove um documento do sistema.
     */
    delete: operations["api_documents_destroy"];
    options?: never;
    head?: never;
    /**
     * Atualizar documento parcialmente
     * @description Atualiza parcialmente um documento existente.
     */
    patch: operations["api_documents_partial_update"];
    trace?: never;
  };
  "/api/documents/{id}/adicionar_comentario/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /**
     * Adicionar comentário ao documento
     * @description Adiciona um novo comentário a um documento específico.
     */
    post: operations["api_documents_adicionar_comentario_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/documents/{id}/associar_tarefa/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /**
     * Associar documento a uma tarefa
     * @description Associa ou desassocia um documento a uma tarefa específica. Forneça 'tarefa_id' para associar, ou 'tarefa_id: 0' (ou nulo) para desassociar.
     */
    post: operations["api_documents_associar_tarefa_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/documents/{id}/historico/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Histórico do documento
     * @description Retorna o histórico de versões do documento.
     */
    get: operations["api_documents_historico_retrieve_2"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/documents/comentarios/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Listar comentários de documentos
     * @description Retorna a lista de todos os comentários associados a documentos.
     */
    get: operations["api_documents_comentarios_list"];
    put?: never;
    /**
     * Criar um novo comentário
     * @description Cria um novo comentário para um documento. O autor é automaticamente definido como o usuário autenticado.
     */
    post: operations["api_documents_comentarios_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/documents/comentarios/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Detalhes de um comentário
     * @description Retorna os detalhes de um comentário específico.
     */
    get: operations["api_documents_comentarios_retrieve"];
    /**
     * Atualizar um comentário
     * @description Atualiza um comentário existente. Somente o autor do comentário ou um administrador pode atualizá-lo.
     */
    put: operations["api_documents_comentarios_update"];
    post?: never;
    /**
     * Excluir um comentário
     * @description Remove um comentário do sistema. Somente o autor ou um administrador pode excluí-lo.
     */
    delete: operations["api_documents_comentarios_destroy"];
    options?: never;
    head?: never;
    /**
     * Atualizar parcialmente um comentário
     * @description Atualiza parcialmente um comentário existente. Somente o autor ou um administrador pode atualizá-lo.
     */
    patch: operations["api_documents_comentarios_partial_update"];
    trace?: never;
  };
  "/api/documents/historico/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Listar histórico de alterações de documentos
     * @description Retorna a lista de todas as alterações registradas para os documentos.
     */
    get: operations["api_documents_historico_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/documents/historico/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Detalhes de um registro de histórico
     * @description Retorna os detalhes de um registro específico do histórico de alterações de um documento.
     */
    get: operations["api_documents_historico_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/health/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Verificação de Saúde Simples
     * @description Endpoint simples para verificar se a API está operacional. Retorna 'ok' se estiver tudo certo.
     */
    get: operations["verificacao_saude_simples"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/health/detailed/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Verificação de Saúde Detalhada
     * @description Endpoint para verificar o estado da API, incluindo versão e ambiente. Não requer autenticação.
     */
    get: operations["verificacao_saude_detalhada"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/projects/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Listar projetos
     * @description Retorna uma lista paginada de projetos.
     */
    get: operations["api_projects_list"];
    put?: never;
    /**
     * Criar novo projeto
     * @description Cria um novo projeto.
     */
    post: operations["api_projects_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/projects/{id_projeto}/metrics/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Métricas Detalhadas do Projeto
     * @description Fornece métricas detalhadas para um projeto específico, como distribuição de tarefas por status, progresso, riscos ativos, custos e dias restantes. Acessível publicamente para fins de demonstração ou integração externa.
     */
    get: operations["metricas_projeto_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/projects/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Obter detalhes do projeto
     * @description Retorna informações detalhadas de um projeto específico.
     */
    get: operations["api_projects_retrieve"];
    /**
     * Atualizar projeto
     * @description Atualiza todos os campos de um projeto existente.
     */
    put: operations["api_projects_update"];
    post?: never;
    /**
     * Excluir projeto
     * @description Remove um projeto existente.
     */
    delete: operations["api_projects_destroy"];
    options?: never;
    head?: never;
    /**
     * Atualizar projeto parcialmente
     * @description Atualiza parcialmente um projeto existente.
     */
    patch: operations["api_projects_partial_update"];
    trace?: never;
  };
  "/api/projects/{id}/adicionar_membro/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /**
     * Adicionar membro ao projeto
     * @description Adiciona um novo membro ao projeto com o papel especificado.
     */
    post: operations["api_projects_adicionar_membro_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/projects/{id}/archive/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Arquiva ou desarquiva um projeto. */
    post: operations["api_projects_archive_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/projects/{id}/criar_sprint/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Criar nova sprint no projeto */
    post: operations["api_projects_criar_sprint_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/projects/{id}/criar_tarefa/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Criar nova tarefa no projeto */
    post: operations["api_projects_criar_tarefa_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/projects/{id}/criar_tarefas_multiplas/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Criar múltiplas tarefas no projeto */
    post: operations["api_projects_criar_tarefas_multiplas_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/projects/{id}/dashboard/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Dashboard do projeto */
    get: operations["api_projects_dashboard_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/projects/{id}/exportar/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Exportar dados do projeto */
    get: operations["api_projects_exportar_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/projects/{id}/gantt/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Visualização Gantt do projeto */
    get: operations["api_projects_gantt_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/projects/{id}/historico_status/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Histórico de status do projeto */
    get: operations["api_projects_historico_status_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/projects/{id}/kanban/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Visualização Kanban do projeto */
    get: operations["api_projects_kanban_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/projects/{id}/listar_membros/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Listar membros do projeto
     * @description Retorna todos os membros associados ao projeto.
     */
    get: operations["api_projects_listar_membros_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/projects/{id}/membros/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Lista os membros do projeto. */
    get: operations["api_projects_membros_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/projects/{id}/metrics/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Métricas Detalhadas do Projeto
     * @description Retorna métricas detalhadas sobre o projeto, incluindo progresso, custos, prazos e qualidade.
     */
    get: operations["api_projects_metrics_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/projects/{id}/remover_membro/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    /**
     * Remover membro do projeto
     * @description Remove um membro do projeto pelo ID.
     */
    delete: operations["api_projects_remover_membro_destroy"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/projects/{id}/sprints/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Listar sprints do projeto */
    get: operations["api_projects_sprints_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/projects/my_projects/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Retorna os projetos dos quais o usuário é membro. */
    get: operations["api_projects_my_projects_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/risks/historico/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description ViewSet para visualização do histórico de riscos.
     *     Somente leitura. */
    get: operations["api_risks_historico_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/risks/historico/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description ViewSet para visualização do histórico de riscos.
     *     Somente leitura. */
    get: operations["api_risks_historico_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/risks/riscos/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description ViewSet para gerenciamento de riscos.
     *     Permite criar, listar, atualizar e excluir riscos. */
    get: operations["api_risks_riscos_list"];
    put?: never;
    /** @description ViewSet para gerenciamento de riscos.
     *     Permite criar, listar, atualizar e excluir riscos. */
    post: operations["api_risks_riscos_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/risks/riscos/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description ViewSet para gerenciamento de riscos.
     *     Permite criar, listar, atualizar e excluir riscos. */
    get: operations["api_risks_riscos_retrieve"];
    /** @description ViewSet para gerenciamento de riscos.
     *     Permite criar, listar, atualizar e excluir riscos. */
    put: operations["api_risks_riscos_update"];
    post?: never;
    /** @description ViewSet para gerenciamento de riscos.
     *     Permite criar, listar, atualizar e excluir riscos. */
    delete: operations["api_risks_riscos_destroy"];
    options?: never;
    head?: never;
    /** @description ViewSet para gerenciamento de riscos.
     *     Permite criar, listar, atualizar e excluir riscos. */
    patch: operations["api_risks_riscos_partial_update"];
    trace?: never;
  };
  "/api/risks/riscos/{id}/atualizar_status/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Atualiza o status de um risco. */
    post: operations["api_risks_riscos_atualizar_status_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/risks/riscos/{id}/historico/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Retorna o histórico de alterações do risco. */
    get: operations["api_risks_riscos_historico_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/risks/riscos/excluir_varios/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    /** @description Exclui múltiplos riscos de uma vez. */
    delete: operations["api_risks_riscos_excluir_varios_destroy"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/tasks/atribuicoes/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Listar atribuições de tarefas
     * @description Retorna uma lista de atribuições de tarefas a usuários.
     */
    get: operations["api_tasks_atribuicoes_list"];
    put?: never;
    /**
     * Criar atribuição de tarefa
     * @description Atribui uma tarefa a um usuário.
     */
    post: operations["api_tasks_atribuicoes_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/tasks/atribuicoes/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Obter detalhes de atribuição
     * @description Retorna informações detalhadas de uma atribuição específica.
     */
    get: operations["api_tasks_atribuicoes_retrieve"];
    /** @description ViewSet para gerenciamento de atribuições de tarefas a usuários.
     *
     *     Permite criar, listar, visualizar e remover atribuições de tarefas a usuários.
     *     O usuário que faz a atribuição é automaticamente registrado. */
    put: operations["api_tasks_atribuicoes_update"];
    post?: never;
    /**
     * Remover atribuição
     * @description Remove a atribuição de uma tarefa a um usuário.
     */
    delete: operations["api_tasks_atribuicoes_destroy"];
    options?: never;
    head?: never;
    /** @description ViewSet para gerenciamento de atribuições de tarefas a usuários.
     *
     *     Permite criar, listar, visualizar e remover atribuições de tarefas a usuários.
     *     O usuário que faz a atribuição é automaticamente registrado. */
    patch: operations["api_tasks_atribuicoes_partial_update"];
    trace?: never;
  };
  "/api/tasks/comentarios/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Listar comentários de tarefas
     * @description Retorna uma lista de comentários de tarefas.
     */
    get: operations["api_tasks_comentarios_list"];
    put?: never;
    /**
     * Criar comentário
     * @description Adiciona um novo comentário a uma tarefa.
     */
    post: operations["api_tasks_comentarios_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/tasks/comentarios/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Obter detalhes de comentário
     * @description Retorna informações detalhadas de um comentário específico.
     */
    get: operations["api_tasks_comentarios_retrieve"];
    /**
     * Atualizar comentário
     * @description Atualiza o texto de um comentário existente.
     */
    put: operations["api_tasks_comentarios_update"];
    post?: never;
    /**
     * Excluir comentário
     * @description Remove permanentemente um comentário.
     */
    delete: operations["api_tasks_comentarios_destroy"];
    options?: never;
    head?: never;
    /**
     * Atualizar comentário parcialmente
     * @description Atualiza parcialmente o texto de um comentário existente.
     */
    patch: operations["api_tasks_comentarios_partial_update"];
    trace?: never;
  };
  "/api/tasks/tarefas/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Listar tarefas
     * @description Retorna uma lista paginada de tarefas com opções de filtragem e ordenação.
     */
    get: operations["api_tasks_tarefas_list"];
    put?: never;
    /**
     * Criar tarefa
     * @description Cria uma nova tarefa com os dados fornecidos.
     */
    post: operations["api_tasks_tarefas_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/tasks/tarefas/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Obter detalhes da tarefa
     * @description Retorna informações detalhadas de uma tarefa específica.
     */
    get: operations["api_tasks_tarefas_retrieve"];
    /**
     * Atualizar tarefa
     * @description Atualiza todos os campos de uma tarefa existente.
     */
    put: operations["api_tasks_tarefas_update"];
    post?: never;
    /**
     * Excluir tarefa
     * @description Remove permanentemente uma tarefa.
     */
    delete: operations["api_tasks_tarefas_destroy"];
    options?: never;
    head?: never;
    /**
     * Atualizar tarefa parcialmente
     * @description Atualiza parcialmente os campos de uma tarefa existente.
     */
    patch: operations["api_tasks_tarefas_partial_update"];
    trace?: never;
  };
  "/api/tasks/tarefas/{id}/adicionar_comentario/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /**
     * Adicionar comentário à tarefa
     * @description Adiciona um novo comentário à tarefa.
     */
    post: operations["api_tasks_tarefas_adicionar_comentario_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/tasks/tarefas/{id}/associar_sprint/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /**
     * Associar tarefa a uma sprint
     * @description Associa a tarefa a uma sprint ou remove a associação existente.
     */
    post: operations["api_tasks_tarefas_associar_sprint_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/tasks/tarefas/{id}/atribuir_responsavel/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /**
     * Atribuir responsável à tarefa
     * @description Atribui um usuário como responsável pela tarefa.
     */
    post: operations["api_tasks_tarefas_atribuir_responsavel_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/tasks/tarefas/{id}/atualizar_status/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /**
     * Atualizar status da tarefa
     * @description Atualiza o status de uma tarefa e registra a alteração no histórico.
     */
    post: operations["api_tasks_tarefas_atualizar_status_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/tasks/tarefas/{id}/historico_status/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Obter histórico de status da tarefa
     * @description Retorna o histórico de alterações de status da tarefa.
     */
    get: operations["api_tasks_tarefas_historico_status_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/tasks/tarefas/{id}/remover_responsavel/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /**
     * Remover responsável da tarefa
     * @description Remove um usuário como responsável pela tarefa.
     */
    post: operations["api_tasks_tarefas_remover_responsavel_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/teams/equipes/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description ViewSet para gerenciamento de equipes.
     *     Permite criar, listar, atualizar e excluir equipes. */
    get: operations["api_teams_equipes_list"];
    put?: never;
    /** @description ViewSet para gerenciamento de equipes.
     *     Permite criar, listar, atualizar e excluir equipes. */
    post: operations["api_teams_equipes_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/teams/equipes/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description ViewSet para gerenciamento de equipes.
     *     Permite criar, listar, atualizar e excluir equipes. */
    get: operations["api_teams_equipes_retrieve"];
    /** @description ViewSet para gerenciamento de equipes.
     *     Permite criar, listar, atualizar e excluir equipes. */
    put: operations["api_teams_equipes_update"];
    post?: never;
    /** @description ViewSet para gerenciamento de equipes.
     *     Permite criar, listar, atualizar e excluir equipes. */
    delete: operations["api_teams_equipes_destroy"];
    options?: never;
    head?: never;
    /** @description ViewSet para gerenciamento de equipes.
     *     Permite criar, listar, atualizar e excluir equipes. */
    patch: operations["api_teams_equipes_partial_update"];
    trace?: never;
  };
  "/api/teams/equipes/{id}/adicionar_membro/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Adiciona um membro à equipe. */
    post: operations["api_teams_equipes_adicionar_membro_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/teams/equipes/{id}/atualizar_papel_membro/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Atualiza o papel de um membro da equipe. */
    post: operations["api_teams_equipes_atualizar_papel_membro_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/teams/equipes/{id}/membros/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Retorna a lista de membros da equipe. */
    get: operations["api_teams_equipes_membros_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/teams/equipes/{id}/remover_membro/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Remove um membro da equipe. */
    post: operations["api_teams_equipes_remover_membro_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/teams/equipes/usuarios_disponiveis/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Retorna a lista de usuários disponíveis para adicionar a uma equipe. */
    get: operations["api_teams_equipes_usuarios_disponiveis_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/teams/membros/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description ViewSet para gerenciamento de membros de equipe. */
    get: operations["api_teams_membros_list"];
    put?: never;
    /** @description ViewSet para gerenciamento de membros de equipe. */
    post: operations["api_teams_membros_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/teams/membros/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description ViewSet para gerenciamento de membros de equipe. */
    get: operations["api_teams_membros_retrieve"];
    /** @description ViewSet para gerenciamento de membros de equipe. */
    put: operations["api_teams_membros_update"];
    post?: never;
    /** @description ViewSet para gerenciamento de membros de equipe. */
    delete: operations["api_teams_membros_destroy"];
    options?: never;
    head?: never;
    /** @description ViewSet para gerenciamento de membros de equipe. */
    patch: operations["api_teams_membros_partial_update"];
    trace?: never;
  };
  "/api/teams/permissoes/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description ViewSet para gerenciamento de permissões de equipe. */
    get: operations["api_teams_permissoes_list"];
    put?: never;
    /** @description ViewSet para gerenciamento de permissões de equipe. */
    post: operations["api_teams_permissoes_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/teams/permissoes/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description ViewSet para gerenciamento de permissões de equipe. */
    get: operations["api_teams_permissoes_retrieve"];
    /** @description ViewSet para gerenciamento de permissões de equipe. */
    put: operations["api_teams_permissoes_update"];
    post?: never;
    /** @description ViewSet para gerenciamento de permissões de equipe. */
    delete: operations["api_teams_permissoes_destroy"];
    options?: never;
    head?: never;
    /** @description ViewSet para gerenciamento de permissões de equipe. */
    patch: operations["api_teams_permissoes_partial_update"];
    trace?: never;
  };
  "/api/user/dashboard/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Dashboard Pessoal do Usuário
     * @description Retorna dados personalizados para o dashboard do usuário autenticado, incluindo projetos gerenciados, suas tarefas por status, tarefas atrasadas e próximas tarefas. Requer autenticação.
     */
    get: operations["dashboard_usuario_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/users/access-profiles/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description ViewSet para gerenciamento de perfis de acesso. */
    get: operations["api_users_access_profiles_list"];
    put?: never;
    /** @description ViewSet para gerenciamento de perfis de acesso. */
    post: operations["api_users_access_profiles_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/users/access-profiles/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description ViewSet para gerenciamento de perfis de acesso. */
    get: operations["api_users_access_profiles_retrieve"];
    /** @description ViewSet para gerenciamento de perfis de acesso. */
    put: operations["api_users_access_profiles_update"];
    post?: never;
    /** @description ViewSet para gerenciamento de perfis de acesso. */
    delete: operations["api_users_access_profiles_destroy"];
    options?: never;
    head?: never;
    /** @description ViewSet para gerenciamento de perfis de acesso. */
    patch: operations["api_users_access_profiles_partial_update"];
    trace?: never;
  };
  "/api/users/permissions/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description ViewSet para gerenciamento de permissões. */
    get: operations["api_users_permissions_list"];
    put?: never;
    /** @description ViewSet para gerenciamento de permissões. */
    post: operations["api_users_permissions_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/users/permissions/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description ViewSet para gerenciamento de permissões. */
    get: operations["api_users_permissions_retrieve"];
    /** @description ViewSet para gerenciamento de permissões. */
    put: operations["api_users_permissions_update"];
    post?: never;
    /** @description ViewSet para gerenciamento de permissões. */
    delete: operations["api_users_permissions_destroy"];
    options?: never;
    head?: never;
    /** @description ViewSet para gerenciamento de permissões. */
    patch: operations["api_users_permissions_partial_update"];
    trace?: never;
  };
  "/api/users/profiles/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["api_users_profiles_list"];
    put?: never;
    post: operations["api_users_profiles_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/users/profiles/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["api_users_profiles_retrieve"];
    put: operations["api_users_profiles_update"];
    post?: never;
    delete: operations["api_users_profiles_destroy"];
    options?: never;
    head?: never;
    patch: operations["api_users_profiles_partial_update"];
    trace?: never;
  };
  "/api/users/token/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Takes a set of user credentials and returns an access and refresh JSON web
     *     token pair to prove the authentication of those credentials. */
    post: operations["api_users_token_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/users/token/refresh/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Takes a refresh type JSON web token and returns an access type JSON web
     *     token if the refresh token is valid. */
    post: operations["api_users_token_refresh_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/users/users/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description ViewSet para gerenciamento de usuários. */
    get: operations["api_users_users_list"];
    put?: never;
    /** @description ViewSet para gerenciamento de usuários. */
    post: operations["api_users_users_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/users/users/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description ViewSet para gerenciamento de usuários. */
    get: operations["api_users_users_retrieve"];
    /** @description ViewSet para gerenciamento de usuários. */
    put: operations["api_users_users_update"];
    post?: never;
    /** @description ViewSet para gerenciamento de usuários. */
    delete: operations["api_users_users_destroy"];
    options?: never;
    head?: never;
    /** @description ViewSet para gerenciamento de usuários. */
    patch: operations["api_users_users_partial_update"];
    trace?: never;
  };
  "/api/users/users/{id}/activate/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Ativa um usuário. */
    post: operations["api_users_users_activate_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/users/users/{id}/deactivate/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Desativa um usuário. */
    post: operations["api_users_users_deactivate_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/users/users/{id}/reset_password/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Redefine a senha do usuário para uma senha temporária e envia por e-mail. */
    post: operations["api_users_users_reset_password_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/users/users/{id}/unlock/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Desbloqueia um usuário após tentativas de login malsucedidas. */
    post: operations["api_users_users_unlock_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/users/users/change_password/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Altera a senha do usuário autenticado. */
    post: operations["api_users_users_change_password_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/users/users/me/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Retorna as informações do usuário autenticado. */
    get: operations["api_users_users_me_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/users/users/permissions/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Retorna as permissões do usuário autenticado. */
    get: operations["api_users_users_permissions_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    AccessProfile: {
      readonly id: number;
      name: string;
      description?: string | null;
      readonly permissions: components["schemas"]["Permission"][];
      /** Format: date-time */
      readonly created_at: string;
      /** Format: date-time */
      readonly updated_at: string;
    };
    AccessProfileRequest: {
      name: string;
      description?: string | null;
    };
    /**
     * @description * `VIEW` - View
     *     * `CREATE` - Create
     *     * `EDIT` - Edit
     *     * `DELETE` - Delete
     *     * `APPROVE` - Approve
     *     * `ASSIGN` - Assign
     *     * `EXPORT` - Export
     *     * `IMPORT` - Import
     *     * `COMMENT` - Comment
     * @enum {string}
     */
    ActionEnum: "VIEW" | "CREATE" | "EDIT" | "DELETE" | "APPROVE" | "ASSIGN" | "EXPORT" | "IMPORT" | "COMMENT";
    Activation: {
      uid: string;
      token: string;
    };
    ActivationRequest: {
      uid: string;
      token: string;
    };
    /** @description Serializer para o modelo Alerta.
     *
     *     Inclui todos os campos do modelo Alerta.
     *     Adiciona campos de leitura para exibir o valor textual dos campos de escolha
     *     ('tipo', 'status') e nomes relacionados (projeto, tarefa, resolvedor). */
    Alerta: {
      readonly id: number;
      tipo: components["schemas"]["AlertaTipoEnum"];
      readonly tipo_display: string;
      projeto: number;
      readonly projeto_nome: string;
      tarefa?: number | null;
      readonly tarefa_titulo: string;
      /** Format: decimal */
      percentual: string;
      mensagem: string;
      status?: components["schemas"]["AlertaStatusEnum"];
      readonly status_display: string;
      /** Format: date-time */
      readonly data_criacao: string;
      /** Format: date-time */
      readonly data_resolucao: string | null;
      resolvido_por?: number | null;
      readonly resolvido_por_nome: string;
    };
    /** @description Serializer para o modelo Alerta.
     *
     *     Inclui todos os campos do modelo Alerta.
     *     Adiciona campos de leitura para exibir o valor textual dos campos de escolha
     *     ('tipo', 'status') e nomes relacionados (projeto, tarefa, resolvedor). */
    AlertaRequest: {
      tipo: components["schemas"]["AlertaTipoEnum"];
      projeto: number;
      tarefa?: number | null;
      /** Format: decimal */
      percentual: string;
      mensagem: string;
      status?: components["schemas"]["AlertaStatusEnum"];
      resolvido_por?: number | null;
    };
    /**
     * @description * `ATIVO` - Ativo
     *     * `RESOLVIDO` - Resolvido
     *     * `IGNORADO` - Ignorado
     * @enum {string}
     */
    AlertaStatusEnum: "ATIVO" | "RESOLVIDO" | "IGNORADO";
    /**
     * @description * `PROJETO` - Projeto
     *     * `TAREFA` - Tarefa
     * @enum {string}
     */
    AlertaTipoEnum: "PROJETO" | "TAREFA";
    AtribuicaoTarefa: {
      readonly id: number;
      tarefa: number;
      usuario: number;
      readonly usuario_nome: string;
      /** Format: date-time */
      readonly atribuido_em: string;
      atribuido_por?: number | null;
      readonly atribuido_por_nome: string;
    };
    AtribuicaoTarefaRequest: {
      tarefa: number;
      usuario: number;
      atribuido_por?: number | null;
    };
    /** @description Serializer para o modelo Categoria.
     *
     *     Utilizado para serializar/desserializar dados da categoria.
     *     Inclui todos os campos do modelo. */
    Categoria: {
      readonly id: number;
      nome: string;
      descricao?: string | null;
    };
    /** @description Serializer para o modelo Categoria.
     *
     *     Utilizado para serializar/desserializar dados da categoria.
     *     Inclui todos os campos do modelo. */
    CategoriaRequest: {
      nome: string;
      descricao?: string | null;
    };
    ChatMensagem: {
      readonly id: number;
      /** @description Projeto ao qual a mensagem pertence */
      projeto: number;
      readonly projeto_nome: string;
      /** @description Usuário que enviou a mensagem */
      readonly autor: number;
      readonly autor_nome: string;
      readonly autor_username: string;
      /** @description Conteúdo da mensagem */
      texto: string;
      /**
       * Format: uri
       * @description Arquivo opcional anexado à mensagem
       */
      anexo?: string | null;
      /**
       * Format: date-time
       * @description Data e hora em que a mensagem foi enviada
       */
      readonly enviado_em: string;
      /** @description Indica se a mensagem foi editada após o envio inicial */
      readonly editado: boolean;
      readonly leituras: components["schemas"]["ChatMensagemLeitura"][];
    };
    ChatMensagemLeitura: {
      readonly id: number;
      /** @description Mensagem que foi lida */
      mensagem: number;
      /** @description Usuário que leu a mensagem */
      usuario: number;
      readonly usuario_nome: string;
      /**
       * Format: date-time
       * @description Data e hora em que a mensagem foi lida
       */
      readonly lido_em: string;
    };
    ChatMensagemLeituraRequest: {
      /** @description Mensagem que foi lida */
      mensagem: number;
      /** @description Usuário que leu a mensagem */
      usuario: number;
    };
    ChatMensagemRequest: {
      /** @description Projeto ao qual a mensagem pertence */
      projeto: number;
      /** @description Conteúdo da mensagem */
      texto: string;
      /**
       * Format: binary
       * @description Arquivo opcional anexado à mensagem
       */
      anexo?: string | null;
    };
    Comentario: {
      readonly id: number;
      documento: number;
      autor: number;
      readonly autor_nome: string;
      texto: string;
      /** Format: date-time */
      readonly criado_em: string;
    };
    ComentarioRequest: {
      documento: number;
      autor: number;
      texto: string;
    };
    ComentarioTarefa: {
      readonly id: number;
      tarefa: number;
      autor: number;
      readonly autor_nome: string;
      texto: string;
      /** Format: date-time */
      readonly criado_em: string;
    };
    ComentarioTarefaRequest: {
      tarefa: number;
      autor: number;
      texto: string;
    };
    ConfiguracaoNotificacao: {
      readonly id: number;
      /** @description Usuário ao qual estas configurações pertencem */
      usuario: number;
      readonly usuario_nome: string;
      /** @description Canal de notificação quando uma tarefa é atribuída ao usuário
       *
       *     * `EMAIL` - E-mail
       *     * `SISTEMA` - Sistema
       *     * `AMBOS` - Ambos
       *     * `NENHUM` - Nenhum */
      tarefa_atribuida?: components["schemas"]["TarefaAtribuidaEnum"];
      /** @description Canal de notificação quando há um novo comentário em uma tarefa do usuário
       *
       *     * `EMAIL` - E-mail
       *     * `SISTEMA` - Sistema
       *     * `AMBOS` - Ambos
       *     * `NENHUM` - Nenhum */
      tarefa_comentario?: components["schemas"]["TarefaComentarioEnum"];
      /** @description Canal de notificação para lembretes de prazo de tarefas
       *
       *     * `EMAIL` - E-mail
       *     * `SISTEMA` - Sistema
       *     * `AMBOS` - Ambos
       *     * `NENHUM` - Nenhum */
      tarefa_prazo?: components["schemas"]["TarefaPrazoEnum"];
      /** @description Canal de notificação quando o status de um projeto é alterado
       *
       *     * `EMAIL` - E-mail
       *     * `SISTEMA` - Sistema
       *     * `AMBOS` - Ambos
       *     * `NENHUM` - Nenhum */
      projeto_status?: components["schemas"]["ProjetoStatusEnum"];
      /** @description Canal de notificação quando há alterações na equipe de um projeto
       *
       *     * `EMAIL` - E-mail
       *     * `SISTEMA` - Sistema
       *     * `AMBOS` - Ambos
       *     * `NENHUM` - Nenhum */
      equipe_alteracao?: components["schemas"]["EquipeAlteracaoEnum"];
      /** @description Canal de notificação quando um novo documento é adicionado
       *
       *     * `EMAIL` - E-mail
       *     * `SISTEMA` - Sistema
       *     * `AMBOS` - Ambos
       *     * `NENHUM` - Nenhum */
      documento_novo?: components["schemas"]["DocumentoNovoEnum"];
      /** @description Canal de notificação quando um novo risco é registrado
       *
       *     * `EMAIL` - E-mail
       *     * `SISTEMA` - Sistema
       *     * `AMBOS` - Ambos
       *     * `NENHUM` - Nenhum */
      risco_novo?: components["schemas"]["RiscoNovoEnum"];
      /** @description Canal de notificação para novas mensagens de chat
       *
       *     * `EMAIL` - E-mail
       *     * `SISTEMA` - Sistema
       *     * `AMBOS` - Ambos
       *     * `NENHUM` - Nenhum */
      mensagem_chat?: components["schemas"]["MensagemChatEnum"];
    };
    ConfiguracaoNotificacaoRequest: {
      /** @description Usuário ao qual estas configurações pertencem */
      usuario: number;
      /** @description Canal de notificação quando uma tarefa é atribuída ao usuário
       *
       *     * `EMAIL` - E-mail
       *     * `SISTEMA` - Sistema
       *     * `AMBOS` - Ambos
       *     * `NENHUM` - Nenhum */
      tarefa_atribuida?: components["schemas"]["TarefaAtribuidaEnum"];
      /** @description Canal de notificação quando há um novo comentário em uma tarefa do usuário
       *
       *     * `EMAIL` - E-mail
       *     * `SISTEMA` - Sistema
       *     * `AMBOS` - Ambos
       *     * `NENHUM` - Nenhum */
      tarefa_comentario?: components["schemas"]["TarefaComentarioEnum"];
      /** @description Canal de notificação para lembretes de prazo de tarefas
       *
       *     * `EMAIL` - E-mail
       *     * `SISTEMA` - Sistema
       *     * `AMBOS` - Ambos
       *     * `NENHUM` - Nenhum */
      tarefa_prazo?: components["schemas"]["TarefaPrazoEnum"];
      /** @description Canal de notificação quando o status de um projeto é alterado
       *
       *     * `EMAIL` - E-mail
       *     * `SISTEMA` - Sistema
       *     * `AMBOS` - Ambos
       *     * `NENHUM` - Nenhum */
      projeto_status?: components["schemas"]["ProjetoStatusEnum"];
      /** @description Canal de notificação quando há alterações na equipe de um projeto
       *
       *     * `EMAIL` - E-mail
       *     * `SISTEMA` - Sistema
       *     * `AMBOS` - Ambos
       *     * `NENHUM` - Nenhum */
      equipe_alteracao?: components["schemas"]["EquipeAlteracaoEnum"];
      /** @description Canal de notificação quando um novo documento é adicionado
       *
       *     * `EMAIL` - E-mail
       *     * `SISTEMA` - Sistema
       *     * `AMBOS` - Ambos
       *     * `NENHUM` - Nenhum */
      documento_novo?: components["schemas"]["DocumentoNovoEnum"];
      /** @description Canal de notificação quando um novo risco é registrado
       *
       *     * `EMAIL` - E-mail
       *     * `SISTEMA` - Sistema
       *     * `AMBOS` - Ambos
       *     * `NENHUM` - Nenhum */
      risco_novo?: components["schemas"]["RiscoNovoEnum"];
      /** @description Canal de notificação para novas mensagens de chat
       *
       *     * `EMAIL` - E-mail
       *     * `SISTEMA` - Sistema
       *     * `AMBOS` - Ambos
       *     * `NENHUM` - Nenhum */
      mensagem_chat?: components["schemas"]["MensagemChatEnum"];
    };
    /** @description Serializador para contagem de tarefas por status. */
    ContadorTarefaStatus: {
      /** @description Status da tarefa (ex: Pendente, Em Andamento, Concluída) */
      status: string;
      /** @description Quantidade de tarefas com este status */
      count: number;
    };
    /** @description Serializer detalhado para o modelo Custo.
     *
     *     Inclui todos os campos do modelo Custo e adiciona campos de leitura
     *     para exibir nomes relacionados de outros modelos (usuário, projeto, tarefa, categoria)
     *     e o valor textual dos campos de escolha ('tipo'). */
    Custo: {
      readonly id: number;
      projeto: number;
      readonly projeto_nome: string;
      tarefa?: number | null;
      readonly tarefa_titulo: string;
      categoria?: number | null;
      readonly categoria_nome: string;
      descricao: string;
      /** Format: decimal */
      valor: string;
      tipo?: components["schemas"]["CustoTipoEnum"];
      readonly tipo_display: string;
      /** Format: date */
      data: string;
      /** Format: uri */
      comprovante?: string | null;
      observacoes?: string | null;
      criado_por?: number | null;
      readonly criado_por_nome: string;
      /** Format: date-time */
      readonly criado_em: string;
      /** Format: date-time */
      readonly atualizado_em: string;
    };
    /** @description Serializer simplificado para listagem de custos.
     *
     *     Projetado para exibir uma visão concisa dos custos, ideal para listas
     *     ou tabelas onde nem todos os detalhes do Custo são necessários.
     *     Inclui campos de leitura para nomes relacionados e o valor 'display' do tipo. */
    CustoList: {
      readonly id: number;
      projeto: number;
      readonly projeto_nome: string;
      tarefa?: number | null;
      readonly tarefa_titulo: string;
      readonly categoria_nome: string;
      descricao: string;
      /** Format: decimal */
      valor: string;
      readonly tipo_display: string;
      /** Format: date */
      data: string;
    };
    /** @description Serializer detalhado para o modelo Custo.
     *
     *     Inclui todos os campos do modelo Custo e adiciona campos de leitura
     *     para exibir nomes relacionados de outros modelos (usuário, projeto, tarefa, categoria)
     *     e o valor textual dos campos de escolha ('tipo'). */
    CustoRequest: {
      projeto: number;
      tarefa?: number | null;
      categoria?: number | null;
      descricao: string;
      /** Format: decimal */
      valor: string;
      tipo?: components["schemas"]["CustoTipoEnum"];
      /** Format: date */
      data: string;
      /** Format: binary */
      comprovante?: string | null;
      observacoes?: string | null;
      criado_por?: number | null;
    };
    /**
     * @description * `FIXO` - Custo Fixo
     *     * `VARIAVEL` - Custo Variável
     *     * `RECORRENTE` - Custo Recorrente
     * @enum {string}
     */
    CustoTipoEnum: "FIXO" | "VARIAVEL" | "RECORRENTE";
    CustomTokenObtainPairRequest: {
      username: string;
      password: string;
    };
    /** @description Serializador para dashboard pessoal do usuário. */
    DashboardUsuario: {
      /** @description Número de projetos onde o usuário é o gerente */
      projetos_gerenciados: number;
      /** @description Contagem das tarefas do usuário, agrupadas por status */
      tarefas_por_status: components["schemas"]["ContadorTarefaStatus"][];
      /** @description Número de tarefas atribuídas ao usuário que estão atrasadas */
      tarefas_atrasadas: number;
      /** @description Lista das próximas tarefas agendadas para o usuário */
      proximas_tarefas: components["schemas"]["ProximaTarefa"][];
    };
    Documento: {
      readonly id: number;
      projeto: number;
      readonly projeto_nome: string;
      tarefa?: number | null;
      readonly tarefa_titulo: string;
      titulo: string;
      descricao?: string | null;
      tipo?: components["schemas"]["Tipo0e9Enum"];
      readonly tipo_display: string;
      /** Format: uri */
      arquivo: string;
      /** @description Tamanho em bytes */
      readonly tamanho_arquivo: number;
      /** @description Tipo MIME do arquivo */
      readonly tipo_arquivo: string;
      versao?: string;
      enviado_por?: number | null;
      readonly enviado_por_nome: string;
      /** Format: date-time */
      readonly data_upload: string;
      /** Format: date-time */
      readonly atualizado_em: string;
      readonly comentarios: components["schemas"]["Comentario"][];
      readonly historico: components["schemas"]["HistoricoDocumento"][];
    };
    /** @description Serializer simplificado para listagem de documentos */
    DocumentoList: {
      readonly id: number;
      projeto: number;
      readonly projeto_nome: string;
      tarefa?: number | null;
      readonly tarefa_titulo: string;
      titulo: string;
      tipo?: components["schemas"]["Tipo0e9Enum"];
      readonly tipo_display: string;
      versao?: string;
      readonly enviado_por_nome: string;
      /** Format: date-time */
      readonly data_upload: string;
      /**
       * Format: int64
       * @description Tamanho em bytes
       */
      tamanho_arquivo: number;
      /** @description Tipo MIME do arquivo */
      tipo_arquivo: string;
    };
    /**
     * @description * `EMAIL` - E-mail
     *     * `SISTEMA` - Sistema
     *     * `AMBOS` - Ambos
     *     * `NENHUM` - Nenhum
     * @enum {string}
     */
    DocumentoNovoEnum: "EMAIL" | "SISTEMA" | "AMBOS" | "NENHUM";
    DocumentoRequest: {
      projeto: number;
      tarefa?: number | null;
      titulo: string;
      descricao?: string | null;
      tipo?: components["schemas"]["Tipo0e9Enum"];
      /** Format: binary */
      arquivo: string;
      versao?: string;
      enviado_por?: number | null;
    };
    Equipe: {
      readonly id: number;
      nome: string;
      descricao?: string | null;
      criado_por?: number | null;
      /** @description Nome completo do usuário que criou a equipe. */
      readonly criado_por_nome: string;
      /** Format: date-time */
      readonly criado_em: string;
      /** Format: date-time */
      readonly atualizado_em: string;
      /** @description Lista de membros desta equipe. */
      readonly membros: components["schemas"]["MembroEquipe"][];
      /** @description Lista de permissões associadas a esta equipe. */
      readonly permissoes: components["schemas"]["PermissaoEquipe"][];
      /** @description Número total de membros nesta equipe. */
      readonly total_membros: number;
    };
    /**
     * @description * `EMAIL` - E-mail
     *     * `SISTEMA` - Sistema
     *     * `AMBOS` - Ambos
     *     * `NENHUM` - Nenhum
     * @enum {string}
     */
    EquipeAlteracaoEnum: "EMAIL" | "SISTEMA" | "AMBOS" | "NENHUM";
    /** @description Serializer simplificado para listagem de equipes */
    EquipeList: {
      readonly id: number;
      nome: string;
      /** @description Nome completo do criador da equipe. */
      readonly criado_por_nome: string;
      /** Format: date-time */
      readonly criado_em: string;
      /** @description Número total de membros nesta equipe. */
      readonly total_membros: number;
    };
    EquipeRequest: {
      nome: string;
      descricao?: string | null;
      criado_por?: number | null;
    };
    /** @description Serializador padrão para respostas de erro. */
    Erro: {
      /** @description Mensagem descrevendo o erro ocorrido */
      error: string;
    };
    HistoricoDocumento: {
      readonly id: number;
      documento: number;
      versao_anterior: string;
      /** Format: uri */
      arquivo_anterior: string;
      /**
       * Format: int64
       * @description Tamanho em bytes
       */
      tamanho_arquivo: number;
      alterado_por?: number | null;
      readonly alterado_por_nome: string;
      /** Format: date-time */
      readonly data_alteracao: string;
      observacao?: string | null;
    };
    HistoricoDocumentoRequest: {
      documento: number;
      versao_anterior: string;
      /** Format: binary */
      arquivo_anterior: string;
      /**
       * Format: int64
       * @description Tamanho em bytes
       */
      tamanho_arquivo: number;
      alterado_por?: number | null;
      observacao?: string | null;
    };
    HistoricoRisco: {
      readonly id: number;
      risco: number;
      status_anterior: components["schemas"]["NovoStatusA52Enum"];
      readonly status_anterior_display: string;
      novo_status: components["schemas"]["NovoStatusA52Enum"];
      readonly novo_status_display: string;
      probabilidade_anterior: components["schemas"]["ProbabilidadeAnteriorEnum"];
      readonly probabilidade_anterior_display: string;
      nova_probabilidade: components["schemas"]["NovaProbabilidadeEnum"];
      readonly nova_probabilidade_display: string;
      impacto_anterior: components["schemas"]["ImpactoEnum"];
      readonly impacto_anterior_display: string;
      novo_impacto: components["schemas"]["ImpactoEnum"];
      readonly novo_impacto_display: string;
      alterado_por?: number | null;
      readonly alterado_por_nome: string;
      /** Format: date-time */
      readonly alterado_em: string;
      observacao?: string | null;
    };
    HistoricoRiscoRequest: {
      risco: number;
      status_anterior: components["schemas"]["NovoStatusA52Enum"];
      novo_status: components["schemas"]["NovoStatusA52Enum"];
      probabilidade_anterior: components["schemas"]["ProbabilidadeAnteriorEnum"];
      nova_probabilidade: components["schemas"]["NovaProbabilidadeEnum"];
      impacto_anterior: components["schemas"]["ImpactoEnum"];
      novo_impacto: components["schemas"]["ImpactoEnum"];
      alterado_por?: number | null;
      observacao?: string | null;
    };
    HistoricoStatusTarefa: {
      readonly id: number;
      tarefa: number;
      status_anterior: components["schemas"]["NovoStatus607Enum"];
      readonly status_anterior_display: string;
      novo_status: components["schemas"]["NovoStatus607Enum"];
      readonly novo_status_display: string;
      alterado_por?: number | null;
      readonly alterado_por_nome: string;
      /** Format: date-time */
      readonly alterado_em: string;
    };
    /**
     * @description * `BAIXO` - Baixo
     *     * `MEDIO` - Médio
     *     * `ALTO` - Alto
     * @enum {string}
     */
    ImpactoEnum: "BAIXO" | "MEDIO" | "ALTO";
    MembroEquipe: {
      readonly id: number;
      equipe: number;
      usuario: number;
      readonly usuario_nome: string;
      readonly usuario_email: string;
      papel: components["schemas"]["PapelF38Enum"];
      readonly papel_display: string;
      /** Format: date-time */
      readonly adicionado_em: string;
      adicionado_por?: number | null;
      readonly adicionado_por_nome: string;
    };
    MembroEquipeRequest: {
      equipe: number;
      usuario: number;
      papel: components["schemas"]["PapelF38Enum"];
      adicionado_por?: number | null;
    };
    /** @description Serializer para membros de projeto.
     *
     *     Inclui informações básicas do usuário e seu papel no projeto. */
    MembroProjeto: {
      readonly id: number;
      readonly usuario_id: number;
      readonly username: string;
      readonly full_name: string;
      papel: components["schemas"]["MembroProjetoPapelEnum"];
      /** @description Nome do papel para exibição */
      readonly papel_display: string;
    };
    /**
     * @description * `GERENTE` - Gerente de Projeto
     *     * `DESENVOLVEDOR` - Desenvolvedor
     *     * `TESTADOR` - Testador
     *     * `ANALISTA` - Analista
     *     * `DESIGNER` - Designer
     * @enum {string}
     */
    MembroProjetoPapelEnum: "GERENTE" | "DESENVOLVEDOR" | "TESTADOR" | "ANALISTA" | "DESIGNER";
    /** @description Serializer para membros de projeto.
     *
     *     Inclui informações básicas do usuário e seu papel no projeto. */
    MembroProjetoRequest: {
      usuario: number;
      papel: components["schemas"]["MembroProjetoPapelEnum"];
    };
    /**
     * @description * `EMAIL` - E-mail
     *     * `SISTEMA` - Sistema
     *     * `AMBOS` - Ambos
     *     * `NENHUM` - Nenhum
     * @enum {string}
     */
    MensagemChatEnum: "EMAIL" | "SISTEMA" | "AMBOS" | "NENHUM";
    /** @description Serializador para métricas detalhadas de um projeto específico. */
    MetricasProjeto: {
      /** @description Contagem de tarefas do projeto, agrupadas por status */
      tarefas_por_status: components["schemas"]["ContadorTarefaStatus"][];
      /**
       * Format: double
       * @description Percentual de conclusão do projeto (0-100)
       */
      progresso: number;
      /** @description Número de riscos atualmente ativos para o projeto */
      riscos_ativos: number;
      /**
       * Format: double
       * @description Soma dos custos registrados para o projeto
       */
      custos_totais: number;
      /** @description Número de dias restantes até a data final planejada do projeto */
      dias_restantes: number;
    };
    /**
     * @description * `PROJECTS` - Projects
     *     * `TASKS` - Tasks
     *     * `TEAMS` - Teams
     *     * `RESOURCES` - Resources
     *     * `COMMUNICATIONS` - Communications
     *     * `RISKS` - Risks
     *     * `COSTS` - Costs
     *     * `DOCUMENTS` - Documents
     *     * `REPORTS` - Reports
     *     * `USERS` - Users
     *     * `SETTINGS` - Settings
     *     * `DASHBOARD` - Dashboard
     *     * `NOTIFICATIONS` - Notifications
     *     * `APPROVALS` - Approvals
     * @enum {string}
     */
    ModuleEnum: "PROJECTS" | "TASKS" | "TEAMS" | "RESOURCES" | "COMMUNICATIONS" | "RISKS" | "COSTS" | "DOCUMENTS" | "REPORTS" | "USERS" | "SETTINGS" | "DASHBOARD" | "NOTIFICATIONS" | "APPROVALS";
    /**
     * @description * `TAREFAS` - Tarefas
     *     * `SPRINTS` - Sprints
     *     * `DOCUMENTOS` - Documentos
     *     * `RISCOS` - Riscos
     *     * `CUSTOS` - Custos
     * @enum {string}
     */
    ModuloEnum: "TAREFAS" | "SPRINTS" | "DOCUMENTOS" | "RISCOS" | "CUSTOS";
    Notificacao: {
      readonly id: number;
      /** @description Usuário que receberá a notificação */
      usuario: number;
      /** @description Tipo de objeto relacionado à notificação
       *
       *     * `TAREFA` - Tarefa
       *     * `PROJETO` - Projeto
       *     * `EQUIPE` - Equipe
       *     * `RISCO` - Risco
       *     * `DOCUMENTO` - Documento
       *     * `SISTEMA` - Sistema */
      tipo: components["schemas"]["NotificacaoTipoEnum"];
      readonly tipo_display: string;
      /** @description Título breve da notificação */
      titulo: string;
      /** @description Conteúdo detalhado da notificação */
      mensagem: string;
      /** @description Indica se a notificação foi lida pelo usuário */
      lida?: boolean;
      /** @description Nível de prioridade da notificação
       *
       *     * `BAIXA` - Baixa
       *     * `MEDIA` - Média
       *     * `ALTA` - Alta */
      prioridade?: components["schemas"]["PrioridadeEnum"];
      readonly prioridade_display: string;
      /**
       * Format: date-time
       * @description Data e hora em que a notificação foi criada
       */
      readonly criada_em: string;
      /**
       * Format: date-time
       * @description Data e hora em que a notificação foi lida (se aplicável)
       */
      readonly lida_em: string | null;
      /** @description Projeto relacionado à notificação (se aplicável) */
      projeto?: number | null;
      readonly projeto_nome: string;
      /** @description Tarefa relacionada à notificação (se aplicável) */
      tarefa?: number | null;
      readonly tarefa_titulo: string;
      /** @description URL para redirecionamento quando a notificação for clicada */
      url?: string | null;
    };
    NotificacaoRequest: {
      /** @description Usuário que receberá a notificação */
      usuario: number;
      /** @description Tipo de objeto relacionado à notificação
       *
       *     * `TAREFA` - Tarefa
       *     * `PROJETO` - Projeto
       *     * `EQUIPE` - Equipe
       *     * `RISCO` - Risco
       *     * `DOCUMENTO` - Documento
       *     * `SISTEMA` - Sistema */
      tipo: components["schemas"]["NotificacaoTipoEnum"];
      /** @description Título breve da notificação */
      titulo: string;
      /** @description Conteúdo detalhado da notificação */
      mensagem: string;
      /** @description Indica se a notificação foi lida pelo usuário */
      lida?: boolean;
      /** @description Nível de prioridade da notificação
       *
       *     * `BAIXA` - Baixa
       *     * `MEDIA` - Média
       *     * `ALTA` - Alta */
      prioridade?: components["schemas"]["PrioridadeEnum"];
      /** @description Projeto relacionado à notificação (se aplicável) */
      projeto?: number | null;
      /** @description Tarefa relacionada à notificação (se aplicável) */
      tarefa?: number | null;
      /** @description URL para redirecionamento quando a notificação for clicada */
      url?: string | null;
    };
    /**
     * @description * `TAREFA` - Tarefa
     *     * `PROJETO` - Projeto
     *     * `EQUIPE` - Equipe
     *     * `RISCO` - Risco
     *     * `DOCUMENTO` - Documento
     *     * `SISTEMA` - Sistema
     * @enum {string}
     */
    NotificacaoTipoEnum: "TAREFA" | "PROJETO" | "EQUIPE" | "RISCO" | "DOCUMENTO" | "SISTEMA";
    /**
     * @description * `BAIXA` - Baixa
     *     * `MEDIA` - Média
     *     * `ALTA` - Alta
     * @enum {string}
     */
    NovaProbabilidadeEnum: "BAIXA" | "MEDIA" | "ALTA";
    /**
     * @description * `A_FAZER` - A Fazer
     *     * `EM_ANDAMENTO` - Em Andamento
     *     * `FEITO` - Feito
     * @enum {string}
     */
    NovoStatus607Enum: "A_FAZER" | "EM_ANDAMENTO" | "FEITO";
    /**
     * @description * `IDENTIFICADO` - Identificado
     *     * `EM_ANALISE` - Em Análise
     *     * `MITIGADO` - Mitigado
     *     * `ACEITO` - Aceito
     *     * `ELIMINADO` - Eliminado
     * @enum {string}
     */
    NovoStatusA52Enum: "IDENTIFICADO" | "EM_ANALISE" | "MITIGADO" | "ACEITO" | "ELIMINADO";
    /** @description Serializer para o modelo OrcamentoProjeto.
     *
     *     Inclui campos para o orçamento total e informações de aprovação.
     *     Adiciona campos de leitura para nomes relacionados (aprovador, projeto)
     *     e campos calculados (valor utilizado, valor restante, percentual utilizado). */
    OrcamentoProjeto: {
      readonly id: number;
      projeto: number;
      readonly projeto_nome: string;
      /** Format: decimal */
      valor_total: string;
      /** Format: date */
      readonly data_aprovacao: string;
      aprovado_por?: number | null;
      readonly aprovado_por_nome: string;
      observacoes?: string | null;
      /** Format: decimal */
      readonly valor_utilizado: string;
      /** Format: decimal */
      readonly valor_restante: string;
      /** Format: decimal */
      readonly percentual_utilizado: string;
    };
    /** @description Serializer para o modelo OrcamentoProjeto.
     *
     *     Inclui campos para o orçamento total e informações de aprovação.
     *     Adiciona campos de leitura para nomes relacionados (aprovador, projeto)
     *     e campos calculados (valor utilizado, valor restante, percentual utilizado). */
    OrcamentoProjetoRequest: {
      projeto: number;
      /** Format: decimal */
      valor_total: string;
      aprovado_por?: number | null;
      observacoes?: string | null;
    };
    /** @description Serializer para o modelo OrcamentoTarefa.
     *
     *     Inclui campos para o orçamento de uma tarefa específica e informações de aprovação.
     *     Adiciona campos de leitura para nomes relacionados (aprovador, tarefa, projeto da tarefa)
     *     e campos calculados (valor utilizado, valor restante, percentual utilizado). */
    OrcamentoTarefa: {
      readonly id: number;
      tarefa: number;
      readonly tarefa_titulo: string;
      readonly projeto_nome: string;
      /** Format: decimal */
      valor: string;
      /** Format: date */
      readonly data_aprovacao: string;
      aprovado_por?: number | null;
      readonly aprovado_por_nome: string;
      observacoes?: string | null;
      /** Format: decimal */
      readonly valor_utilizado: string;
      /** Format: decimal */
      readonly valor_restante: string;
      /** Format: decimal */
      readonly percentual_utilizado: string;
    };
    /** @description Serializer para o modelo OrcamentoTarefa.
     *
     *     Inclui campos para o orçamento de uma tarefa específica e informações de aprovação.
     *     Adiciona campos de leitura para nomes relacionados (aprovador, tarefa, projeto da tarefa)
     *     e campos calculados (valor utilizado, valor restante, percentual utilizado). */
    OrcamentoTarefaRequest: {
      tarefa: number;
      /** Format: decimal */
      valor: string;
      aprovado_por?: number | null;
      observacoes?: string | null;
    };
    PaginatedAccessProfileList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string | null;
      results?: components["schemas"]["AccessProfile"][];
    };
    PaginatedAlertaList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string | null;
      results?: components["schemas"]["Alerta"][];
    };
    PaginatedAtribuicaoTarefaList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string | null;
      results?: components["schemas"]["AtribuicaoTarefa"][];
    };
    PaginatedCategoriaList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string | null;
      results?: components["schemas"]["Categoria"][];
    };
    PaginatedChatMensagemList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string | null;
      results?: components["schemas"]["ChatMensagem"][];
    };
    PaginatedComentarioList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string | null;
      results?: components["schemas"]["Comentario"][];
    };
    PaginatedComentarioTarefaList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string | null;
      results?: components["schemas"]["ComentarioTarefa"][];
    };
    PaginatedConfiguracaoNotificacaoList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string | null;
      results?: components["schemas"]["ConfiguracaoNotificacao"][];
    };
    PaginatedCustoListList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string | null;
      results?: components["schemas"]["CustoList"][];
    };
    PaginatedDocumentoListList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string | null;
      results?: components["schemas"]["DocumentoList"][];
    };
    PaginatedEquipeListList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string | null;
      results?: components["schemas"]["EquipeList"][];
    };
    PaginatedHistoricoDocumentoList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string | null;
      results?: components["schemas"]["HistoricoDocumento"][];
    };
    PaginatedHistoricoRiscoList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string | null;
      results?: components["schemas"]["HistoricoRisco"][];
    };
    PaginatedHistoricoStatusTarefaList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string | null;
      results?: components["schemas"]["HistoricoStatusTarefa"][];
    };
    PaginatedMembroEquipeList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string | null;
      results?: components["schemas"]["MembroEquipe"][];
    };
    PaginatedMembroProjetoList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string | null;
      results?: components["schemas"]["MembroProjeto"][];
    };
    PaginatedNotificacaoList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string | null;
      results?: components["schemas"]["Notificacao"][];
    };
    PaginatedOrcamentoProjetoList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string | null;
      results?: components["schemas"]["OrcamentoProjeto"][];
    };
    PaginatedOrcamentoTarefaList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string | null;
      results?: components["schemas"]["OrcamentoTarefa"][];
    };
    PaginatedPermissaoEquipeList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string | null;
      results?: components["schemas"]["PermissaoEquipe"][];
    };
    PaginatedPermissionList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string | null;
      results?: components["schemas"]["Permission"][];
    };
    PaginatedProjetoListList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string | null;
      results?: components["schemas"]["ProjetoList"][];
    };
    PaginatedRiscoListList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string | null;
      results?: components["schemas"]["RiscoList"][];
    };
    PaginatedTarefaListList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string | null;
      results?: components["schemas"]["TarefaList"][];
    };
    PaginatedUserList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string | null;
      results?: components["schemas"]["User"][];
    };
    PaginatedUserProfileList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string | null;
      results?: components["schemas"]["UserProfile"][];
    };
    /**
     * @description * `PO` - Product Owner
     *     * `SM` - Scrum Master
     *     * `DEV` - Desenvolvedor
     *     * `QA` - Analista de Qualidade
     *     * `DESIGN` - Designer
     *     * `ANALISTA` - Analista
     * @enum {string}
     */
    PapelF38Enum: "PO" | "SM" | "DEV" | "QA" | "DESIGN" | "ANALISTA";
    PatchedAccessProfileRequest: {
      name?: string;
      description?: string | null;
    };
    /** @description Serializer para o modelo Alerta.
     *
     *     Inclui todos os campos do modelo Alerta.
     *     Adiciona campos de leitura para exibir o valor textual dos campos de escolha
     *     ('tipo', 'status') e nomes relacionados (projeto, tarefa, resolvedor). */
    PatchedAlertaRequest: {
      tipo?: components["schemas"]["AlertaTipoEnum"];
      projeto?: number;
      tarefa?: number | null;
      /** Format: decimal */
      percentual?: string;
      mensagem?: string;
      status?: components["schemas"]["AlertaStatusEnum"];
      resolvido_por?: number | null;
    };
    PatchedAtribuicaoTarefaRequest: {
      tarefa?: number;
      usuario?: number;
      atribuido_por?: number | null;
    };
    /** @description Serializer para o modelo Categoria.
     *
     *     Utilizado para serializar/desserializar dados da categoria.
     *     Inclui todos os campos do modelo. */
    PatchedCategoriaRequest: {
      nome?: string;
      descricao?: string | null;
    };
    PatchedChatMensagemRequest: {
      /** @description Projeto ao qual a mensagem pertence */
      projeto?: number;
      /** @description Conteúdo da mensagem */
      texto?: string;
      /**
       * Format: binary
       * @description Arquivo opcional anexado à mensagem
       */
      anexo?: string | null;
    };
    PatchedComentarioRequest: {
      documento?: number;
      autor?: number;
      texto?: string;
    };
    PatchedComentarioTarefaRequest: {
      tarefa?: number;
      autor?: number;
      texto?: string;
    };
    PatchedConfiguracaoNotificacaoRequest: {
      /** @description Usuário ao qual estas configurações pertencem */
      usuario?: number;
      /** @description Canal de notificação quando uma tarefa é atribuída ao usuário
       *
       *     * `EMAIL` - E-mail
       *     * `SISTEMA` - Sistema
       *     * `AMBOS` - Ambos
       *     * `NENHUM` - Nenhum */
      tarefa_atribuida?: components["schemas"]["TarefaAtribuidaEnum"];
      /** @description Canal de notificação quando há um novo comentário em uma tarefa do usuário
       *
       *     * `EMAIL` - E-mail
       *     * `SISTEMA` - Sistema
       *     * `AMBOS` - Ambos
       *     * `NENHUM` - Nenhum */
      tarefa_comentario?: components["schemas"]["TarefaComentarioEnum"];
      /** @description Canal de notificação para lembretes de prazo de tarefas
       *
       *     * `EMAIL` - E-mail
       *     * `SISTEMA` - Sistema
       *     * `AMBOS` - Ambos
       *     * `NENHUM` - Nenhum */
      tarefa_prazo?: components["schemas"]["TarefaPrazoEnum"];
      /** @description Canal de notificação quando o status de um projeto é alterado
       *
       *     * `EMAIL` - E-mail
       *     * `SISTEMA` - Sistema
       *     * `AMBOS` - Ambos
       *     * `NENHUM` - Nenhum */
      projeto_status?: components["schemas"]["ProjetoStatusEnum"];
      /** @description Canal de notificação quando há alterações na equipe de um projeto
       *
       *     * `EMAIL` - E-mail
       *     * `SISTEMA` - Sistema
       *     * `AMBOS` - Ambos
       *     * `NENHUM` - Nenhum */
      equipe_alteracao?: components["schemas"]["EquipeAlteracaoEnum"];
      /** @description Canal de notificação quando um novo documento é adicionado
       *
       *     * `EMAIL` - E-mail
       *     * `SISTEMA` - Sistema
       *     * `AMBOS` - Ambos
       *     * `NENHUM` - Nenhum */
      documento_novo?: components["schemas"]["DocumentoNovoEnum"];
      /** @description Canal de notificação quando um novo risco é registrado
       *
       *     * `EMAIL` - E-mail
       *     * `SISTEMA` - Sistema
       *     * `AMBOS` - Ambos
       *     * `NENHUM` - Nenhum */
      risco_novo?: components["schemas"]["RiscoNovoEnum"];
      /** @description Canal de notificação para novas mensagens de chat
       *
       *     * `EMAIL` - E-mail
       *     * `SISTEMA` - Sistema
       *     * `AMBOS` - Ambos
       *     * `NENHUM` - Nenhum */
      mensagem_chat?: components["schemas"]["MensagemChatEnum"];
    };
    /** @description Serializer detalhado para o modelo Custo.
     *
     *     Inclui todos os campos do modelo Custo e adiciona campos de leitura
     *     para exibir nomes relacionados de outros modelos (usuário, projeto, tarefa, categoria)
     *     e o valor textual dos campos de escolha ('tipo'). */
    PatchedCustoRequest: {
      projeto?: number;
      tarefa?: number | null;
      categoria?: number | null;
      descricao?: string;
      /** Format: decimal */
      valor?: string;
      tipo?: components["schemas"]["CustoTipoEnum"];
      /** Format: date */
      data?: string;
      /** Format: binary */
      comprovante?: string | null;
      observacoes?: string | null;
      criado_por?: number | null;
    };
    PatchedDocumentoRequest: {
      projeto?: number;
      tarefa?: number | null;
      titulo?: string;
      descricao?: string | null;
      tipo?: components["schemas"]["Tipo0e9Enum"];
      /** Format: binary */
      arquivo?: string;
      versao?: string;
      enviado_por?: number | null;
    };
    PatchedEquipeRequest: {
      nome?: string;
      descricao?: string | null;
      criado_por?: number | null;
    };
    PatchedMembroEquipeRequest: {
      equipe?: number;
      usuario?: number;
      papel?: components["schemas"]["PapelF38Enum"];
      adicionado_por?: number | null;
    };
    PatchedNotificacaoRequest: {
      /** @description Usuário que receberá a notificação */
      usuario?: number;
      /** @description Tipo de objeto relacionado à notificação
       *
       *     * `TAREFA` - Tarefa
       *     * `PROJETO` - Projeto
       *     * `EQUIPE` - Equipe
       *     * `RISCO` - Risco
       *     * `DOCUMENTO` - Documento
       *     * `SISTEMA` - Sistema */
      tipo?: components["schemas"]["NotificacaoTipoEnum"];
      /** @description Título breve da notificação */
      titulo?: string;
      /** @description Conteúdo detalhado da notificação */
      mensagem?: string;
      /** @description Indica se a notificação foi lida pelo usuário */
      lida?: boolean;
      /** @description Nível de prioridade da notificação
       *
       *     * `BAIXA` - Baixa
       *     * `MEDIA` - Média
       *     * `ALTA` - Alta */
      prioridade?: components["schemas"]["PrioridadeEnum"];
      /** @description Projeto relacionado à notificação (se aplicável) */
      projeto?: number | null;
      /** @description Tarefa relacionada à notificação (se aplicável) */
      tarefa?: number | null;
      /** @description URL para redirecionamento quando a notificação for clicada */
      url?: string | null;
    };
    /** @description Serializer para o modelo OrcamentoProjeto.
     *
     *     Inclui campos para o orçamento total e informações de aprovação.
     *     Adiciona campos de leitura para nomes relacionados (aprovador, projeto)
     *     e campos calculados (valor utilizado, valor restante, percentual utilizado). */
    PatchedOrcamentoProjetoRequest: {
      projeto?: number;
      /** Format: decimal */
      valor_total?: string;
      aprovado_por?: number | null;
      observacoes?: string | null;
    };
    /** @description Serializer para o modelo OrcamentoTarefa.
     *
     *     Inclui campos para o orçamento de uma tarefa específica e informações de aprovação.
     *     Adiciona campos de leitura para nomes relacionados (aprovador, tarefa, projeto da tarefa)
     *     e campos calculados (valor utilizado, valor restante, percentual utilizado). */
    PatchedOrcamentoTarefaRequest: {
      tarefa?: number;
      /** Format: decimal */
      valor?: string;
      aprovado_por?: number | null;
      observacoes?: string | null;
    };
    PatchedPermissaoEquipeRequest: {
      papel?: components["schemas"]["PapelF38Enum"];
      equipe?: number;
      modulo?: components["schemas"]["ModuloEnum"];
      permissao?: components["schemas"]["PermissaoEnum"];
    };
    PatchedPermissionRequest: {
      module?: components["schemas"]["ModuleEnum"];
      action?: components["schemas"]["ActionEnum"];
    };
    /** @description Serializer completo para projetos.
     *
     *     Inclui informações detalhadas do projeto, membros, estatísticas de sprints e tarefas. */
    PatchedProjetoRequest: {
      titulo?: string;
      descricao?: string;
      /** Format: date */
      data_inicio?: string;
      /** Format: date */
      data_fim?: string;
      status?: components["schemas"]["Status18dEnum"];
      prioridade?: components["schemas"]["PrioridadeEnum"];
      arquivado?: boolean;
    };
    PatchedRiscoRequest: {
      projeto?: number;
      descricao?: string;
      probabilidade?: components["schemas"]["ProbabilidadeEnum"];
      impacto?: components["schemas"]["ImpactoEnum"];
      status?: components["schemas"]["NovoStatusA52Enum"];
      responsavel_mitigacao?: number | null;
      plano_mitigacao?: string | null;
      plano_contingencia?: string | null;
      criado_por?: number | null;
    };
    PatchedTarefaRequest: {
      titulo?: string;
      descricao?: string;
      projeto?: number;
      sprint?: number | null;
      /** Format: date */
      data_inicio?: string;
      /** Format: date */
      data_termino?: string;
      prioridade?: components["schemas"]["PrioridadeEnum"];
      status?: components["schemas"]["NovoStatus607Enum"];
    };
    PatchedUserProfileRequest: {
      phone?: string | null;
      /** Format: binary */
      profile_picture?: string | null;
      theme_preference?: components["schemas"]["ThemePreferenceEnum"];
      email_notifications?: boolean;
      system_notifications?: boolean;
    };
    /** @description Serializer para operações de usuário (leitura, atualização). */
    PatchedUserRequest: {
      username?: string;
      /** Format: email */
      email?: string;
      full_name?: string;
      role?: components["schemas"]["RoleEnum"];
      profile?: components["schemas"]["UserProfileRequest"];
      is_active?: boolean;
      password?: string;
    };
    /**
     * @description * `VISUALIZAR` - Visualizar
     *     * `CRIAR` - Criar
     *     * `EDITAR` - Editar
     *     * `EXCLUIR` - Excluir
     * @enum {string}
     */
    PermissaoEnum: "VISUALIZAR" | "CRIAR" | "EDITAR" | "EXCLUIR";
    PermissaoEquipe: {
      readonly id: number;
      papel: components["schemas"]["PapelF38Enum"];
      readonly papel_display: string;
      equipe: number;
      modulo: components["schemas"]["ModuloEnum"];
      readonly modulo_display: string;
      permissao: components["schemas"]["PermissaoEnum"];
      readonly permissao_display: string;
    };
    PermissaoEquipeRequest: {
      papel: components["schemas"]["PapelF38Enum"];
      equipe: number;
      modulo: components["schemas"]["ModuloEnum"];
      permissao: components["schemas"]["PermissaoEnum"];
    };
    Permission: {
      readonly id: number;
      module: components["schemas"]["ModuleEnum"];
      readonly module_display: string;
      action: components["schemas"]["ActionEnum"];
      readonly action_display: string;
    };
    PermissionRequest: {
      module: components["schemas"]["ModuleEnum"];
      action: components["schemas"]["ActionEnum"];
    };
    /**
     * @description * `BAIXA` - Baixa
     *     * `MEDIA` - Média
     *     * `ALTA` - Alta
     * @enum {string}
     */
    PrioridadeEnum: "BAIXA" | "MEDIA" | "ALTA";
    /**
     * @description * `BAIXA` - Baixa
     *     * `MEDIA` - Média
     *     * `ALTA` - Alta
     * @enum {string}
     */
    ProbabilidadeAnteriorEnum: "BAIXA" | "MEDIA" | "ALTA";
    /**
     * @description * `BAIXA` - Baixa
     *     * `MEDIA` - Média
     *     * `ALTA` - Alta
     * @enum {string}
     */
    ProbabilidadeEnum: "BAIXA" | "MEDIA" | "ALTA";
    /** @description Serializer completo para projetos.
     *
     *     Inclui informações detalhadas do projeto, membros, estatísticas de sprints e tarefas. */
    Projeto: {
      readonly id: number;
      titulo: string;
      descricao: string;
      /** Format: date */
      data_inicio: string;
      /** Format: date */
      data_fim: string;
      status?: components["schemas"]["Status18dEnum"];
      /** @description Nome do status para exibição */
      readonly status_display: string;
      prioridade?: components["schemas"]["PrioridadeEnum"];
      /** @description Nome da prioridade para exibição */
      readonly prioridade_display: string;
      readonly criado_por: number | null;
      /** @description Nome de usuário do criador */
      readonly criador_username: string;
      /** @description Nome completo do criador */
      readonly criador_nome: string;
      /** Format: date-time */
      readonly criado_em: string;
      /** Format: date-time */
      readonly atualizado_em: string;
      arquivado?: boolean;
      /** @description Lista de membros associados ao projeto */
      readonly membros: components["schemas"]["MembroProjeto"][];
      /** @description Número total de sprints neste projeto */
      readonly sprints_count: number;
      /** @description Número total de tarefas neste projeto */
      readonly tasks_count: number;
      /** @description Progresso do projeto em percentual (0-100) */
      readonly progresso: number;
      /** @description Dias restantes até a data de fim */
      readonly dias_restantes: number;
      /** @description Indica se o projeto está atrasado */
      readonly atrasado: boolean;
    };
    /** @description Serializer otimizado para listagem de projetos.
     *
     *     Inclui informações resumidas e estatísticas básicas para listagem eficiente. */
    ProjetoList: {
      readonly id: number;
      titulo: string;
      descricao: string;
      /** Format: date */
      data_inicio: string;
      /** Format: date */
      data_fim: string;
      status?: components["schemas"]["Status18dEnum"];
      /** @description Nome do status para exibição */
      readonly status_display: string;
      prioridade?: components["schemas"]["PrioridadeEnum"];
      /** @description Nome da prioridade para exibição */
      readonly prioridade_display: string;
      /** Format: date-time */
      readonly criado_em: string;
      /** Format: date-time */
      readonly atualizado_em: string;
      arquivado?: boolean;
      /** @description Número total de membros neste projeto */
      readonly membros_count: number;
      /** @description Número total de tarefas neste projeto */
      readonly tasks_count: number;
      /** @description Progresso do projeto em percentual (0-100) */
      readonly progresso: number;
      /** @description Nome de usuário do criador */
      readonly criador_username: string;
      /** @description Indica se o projeto está atrasado */
      readonly atrasado: boolean;
    };
    /** @description Serializer completo para projetos.
     *
     *     Inclui informações detalhadas do projeto, membros, estatísticas de sprints e tarefas. */
    ProjetoRequest: {
      titulo: string;
      descricao: string;
      /** Format: date */
      data_inicio: string;
      /** Format: date */
      data_fim: string;
      status?: components["schemas"]["Status18dEnum"];
      prioridade?: components["schemas"]["PrioridadeEnum"];
      arquivado?: boolean;
    };
    /**
     * @description * `EMAIL` - E-mail
     *     * `SISTEMA` - Sistema
     *     * `AMBOS` - Ambos
     *     * `NENHUM` - Nenhum
     * @enum {string}
     */
    ProjetoStatusEnum: "EMAIL" | "SISTEMA" | "AMBOS" | "NENHUM";
    /** @description Serializador para detalhes de próximas tarefas agendadas. */
    ProximaTarefa: {
      /** @description Título da tarefa */
      titulo: string;
      /**
       * Format: date-time
       * @description Data e hora de início planejadas para a tarefa
       */
      data_inicio: string;
      /** @description Título do projeto ao qual esta tarefa pertence */
      projeto__titulo: string;
    };
    ResetPassword: {
      /** Format: email */
      email: string;
    };
    ResetPasswordRequest: {
      /** Format: email */
      email: string;
    };
    Risco: {
      readonly id: number;
      projeto: number;
      readonly projeto_nome: string;
      descricao: string;
      probabilidade: components["schemas"]["ProbabilidadeEnum"];
      readonly probabilidade_display: string;
      impacto: components["schemas"]["ImpactoEnum"];
      readonly impacto_display: string;
      status?: components["schemas"]["NovoStatusA52Enum"];
      readonly status_display: string;
      responsavel_mitigacao?: number | null;
      readonly responsavel_mitigacao_nome: string;
      plano_mitigacao?: string | null;
      plano_contingencia?: string | null;
      /** Format: date */
      readonly data_identificacao: string;
      criado_por?: number | null;
      readonly criado_por_nome: string;
      /** Format: date-time */
      readonly atualizado_em: string;
      readonly nivel_risco: string;
      readonly historico: components["schemas"]["HistoricoRisco"][];
    };
    /** @description Serializer simplificado para listagem de riscos */
    RiscoList: {
      readonly id: number;
      projeto: number;
      readonly projeto_nome: string;
      descricao: string;
      probabilidade: components["schemas"]["ProbabilidadeEnum"];
      readonly probabilidade_display: string;
      impacto: components["schemas"]["ImpactoEnum"];
      readonly impacto_display: string;
      status?: components["schemas"]["NovoStatusA52Enum"];
      readonly status_display: string;
      responsavel_mitigacao?: number | null;
      readonly responsavel_mitigacao_nome: string;
      /** Format: date */
      readonly data_identificacao: string;
      readonly nivel_risco: string;
    };
    /**
     * @description * `EMAIL` - E-mail
     *     * `SISTEMA` - Sistema
     *     * `AMBOS` - Ambos
     *     * `NENHUM` - Nenhum
     * @enum {string}
     */
    RiscoNovoEnum: "EMAIL" | "SISTEMA" | "AMBOS" | "NENHUM";
    RiscoRequest: {
      projeto: number;
      descricao: string;
      probabilidade: components["schemas"]["ProbabilidadeEnum"];
      impacto: components["schemas"]["ImpactoEnum"];
      status?: components["schemas"]["NovoStatusA52Enum"];
      responsavel_mitigacao?: number | null;
      plano_mitigacao?: string | null;
      plano_contingencia?: string | null;
      criado_por?: number | null;
    };
    /**
     * @description * `ADMIN` - Administrator
     *     * `PROJECT_MANAGER` - Project Manager
     *     * `TEAM_LEADER` - Team Leader
     *     * `TEAM_MEMBER` - Team Member
     *     * `STAKEHOLDER` - Stakeholder/Client
     *     * `AUDITOR` - Auditor
     * @enum {string}
     */
    RoleEnum: "ADMIN" | "PROJECT_MANAGER" | "TEAM_LEADER" | "TEAM_MEMBER" | "STAKEHOLDER" | "AUDITOR";
    SendEmailReset: {
      /** Format: email */
      email: string;
    };
    SendEmailResetRequest: {
      /** Format: email */
      email: string;
    };
    SetNewPassword: {
      password: string;
      token: string;
    };
    SetNewPasswordRequest: {
      password: string;
      token: string;
    };
    SetPasswordRetype: {
      new_password: string;
      re_new_password: string;
      current_password: string;
    };
    SetPasswordRetypeRequest: {
      new_password: string;
      re_new_password: string;
      current_password: string;
    };
    SetUsername: {
      current_password: string;
      /** Username */
      new_username: string;
    };
    SetUsernameRequest: {
      current_password: string;
      /** Username */
      new_username: string;
    };
    /**
     * @description * `PLANEJADO` - Planejado
     *     * `EM_ANDAMENTO` - Em Andamento
     *     * `PAUSADO` - Pausado
     *     * `CONCLUIDO` - Concluído
     *     * `CANCELADO` - Cancelado
     * @enum {string}
     */
    Status18dEnum: "PLANEJADO" | "EM_ANDAMENTO" | "PAUSADO" | "CONCLUIDO" | "CANCELADO";
    Tarefa: {
      readonly id: number;
      titulo: string;
      descricao: string;
      projeto: number;
      sprint?: number | null;
      /** Format: date */
      data_inicio: string;
      /** Format: date */
      data_termino: string;
      prioridade?: components["schemas"]["PrioridadeEnum"];
      status?: components["schemas"]["NovoStatus607Enum"];
      readonly criado_por: components["schemas"]["User"];
      /** Format: date-time */
      readonly criado_em: string;
      /** Format: date-time */
      readonly atualizado_em: string;
      /** @description Lista de usuários atribuídos a esta tarefa. */
      readonly atribuicoes: components["schemas"]["AtribuicaoTarefa"][];
    };
    /**
     * @description * `EMAIL` - E-mail
     *     * `SISTEMA` - Sistema
     *     * `AMBOS` - Ambos
     *     * `NENHUM` - Nenhum
     * @enum {string}
     */
    TarefaAtribuidaEnum: "EMAIL" | "SISTEMA" | "AMBOS" | "NENHUM";
    /**
     * @description * `EMAIL` - E-mail
     *     * `SISTEMA` - Sistema
     *     * `AMBOS` - Ambos
     *     * `NENHUM` - Nenhum
     * @enum {string}
     */
    TarefaComentarioEnum: "EMAIL" | "SISTEMA" | "AMBOS" | "NENHUM";
    TarefaList: {
      readonly id: number;
      titulo: string;
      projeto: number;
      sprint?: number | null;
      status?: components["schemas"]["NovoStatus607Enum"];
      prioridade?: components["schemas"]["PrioridadeEnum"];
      /** Format: date */
      data_termino: string;
      readonly criado_por: components["schemas"]["User"];
      /** @description Lista de usuários atribuídos a esta tarefa. */
      readonly atribuicoes: components["schemas"]["AtribuicaoTarefa"][];
    };
    /**
     * @description * `EMAIL` - E-mail
     *     * `SISTEMA` - Sistema
     *     * `AMBOS` - Ambos
     *     * `NENHUM` - Nenhum
     * @enum {string}
     */
    TarefaPrazoEnum: "EMAIL" | "SISTEMA" | "AMBOS" | "NENHUM";
    TarefaRequest: {
      titulo: string;
      descricao: string;
      projeto: number;
      sprint?: number | null;
      /** Format: date */
      data_inicio: string;
      /** Format: date */
      data_termino: string;
      prioridade?: components["schemas"]["PrioridadeEnum"];
      status?: components["schemas"]["NovoStatus607Enum"];
    };
    /**
     * @description * `LIGHT` - Light
     *     * `DARK` - Dark
     *     * `SYSTEM` - System
     * @enum {string}
     */
    ThemePreferenceEnum: "LIGHT" | "DARK" | "SYSTEM";
    /**
     * @description * `REQUISITO` - Requisito
     *     * `DESIGN` - Design
     *     * `MANUAL` - Manual
     *     * `RELATORIO` - Relatório
     *     * `ATA` - Ata de Reunião
     *     * `OUTRO` - Outro
     * @enum {string}
     */
    Tipo0e9Enum: "REQUISITO" | "DESIGN" | "MANUAL" | "RELATORIO" | "ATA" | "OUTRO";
    TokenRefresh: {
      readonly access: string;
      refresh: string;
    };
    TokenRefreshRequest: {
      refresh: string;
    };
    /** @description Serializer para operações de usuário (leitura, atualização). */
    User: {
      username: string;
      /** Format: email */
      email: string;
      full_name: string;
      role?: components["schemas"]["RoleEnum"];
      profile?: components["schemas"]["UserProfile"];
      readonly id: number;
      is_active?: boolean;
      /** Format: date-time */
      readonly date_joined: string;
      readonly access_profiles: components["schemas"]["UserAccessProfile"][];
    };
    UserAccessProfile: {
      readonly id: number;
      readonly access_profile: components["schemas"]["AccessProfile"];
    };
    UserAccessProfileRequest: {
      access_profile_id: number;
    };
    /** @description Serializer para criação de usuários com validação de senha. */
    UserCreate: {
      username: string;
      /** Format: email */
      email: string;
      full_name: string;
      role?: components["schemas"]["RoleEnum"];
      profile?: components["schemas"]["UserProfile"];
    };
    /** @description Serializer para criação de usuários com validação de senha. */
    UserCreateRequest: {
      username: string;
      /** Format: email */
      email: string;
      full_name: string;
      role?: components["schemas"]["RoleEnum"];
      profile?: components["schemas"]["UserProfileRequest"];
      password: string;
    };
    UserProfile: {
      phone?: string | null;
      /** Format: uri */
      profile_picture?: string | null;
      theme_preference?: components["schemas"]["ThemePreferenceEnum"];
      email_notifications?: boolean;
      system_notifications?: boolean;
    };
    UserProfileRequest: {
      phone?: string | null;
      /** Format: binary */
      profile_picture?: string | null;
      theme_preference?: components["schemas"]["ThemePreferenceEnum"];
      email_notifications?: boolean;
      system_notifications?: boolean;
    };
    /** @description Serializer para operações de usuário (leitura, atualização). */
    UserRequest: {
      username: string;
      /** Format: email */
      email: string;
      full_name: string;
      role?: components["schemas"]["RoleEnum"];
      profile?: components["schemas"]["UserProfileRequest"];
      is_active?: boolean;
      password?: string;
    };
    UsernameResetConfirm: {
      /** Username */
      new_username: string;
    };
    UsernameResetConfirmRequest: {
      /** Username */
      new_username: string;
    };
    /** @description Serializador para visão geral do dashboard do sistema. */
    VisaoGeralDashboard: {
      /** @description Número total de projetos no sistema */
      total_projetos: number;
      /** @description Número total de tarefas no sistema */
      total_tarefas: number;
      /** @description Lista detalhada da contagem de tarefas por cada status */
      tarefas_por_status: components["schemas"]["ContadorTarefaStatus"][];
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
  api_auth_access_profiles_list: {
    parameters: {
      query?: {
        /** @description Which field to use when ordering the results. */
        ordering?: string;
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description A search term. */
        search?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedAccessProfileList"];
        };
      };
    };
  };
  api_auth_access_profiles_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AccessProfileRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["AccessProfileRequest"];
        "multipart/form-data": components["schemas"]["AccessProfileRequest"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["AccessProfile"];
        };
      };
    };
  };
  api_auth_access_profiles_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this access profile. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["AccessProfile"];
        };
      };
    };
  };
  api_auth_access_profiles_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this access profile. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AccessProfileRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["AccessProfileRequest"];
        "multipart/form-data": components["schemas"]["AccessProfileRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["AccessProfile"];
        };
      };
    };
  };
  api_auth_access_profiles_destroy: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this access profile. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_auth_access_profiles_partial_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this access profile. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedAccessProfileRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedAccessProfileRequest"];
        "multipart/form-data": components["schemas"]["PatchedAccessProfileRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["AccessProfile"];
        };
      };
    };
  };
  api_auth_permissions_list: {
    parameters: {
      query?: {
        access_profile?: number;
        /** @description * `VIEW` - View
         *     * `CREATE` - Create
         *     * `EDIT` - Edit
         *     * `DELETE` - Delete
         *     * `APPROVE` - Approve
         *     * `ASSIGN` - Assign
         *     * `EXPORT` - Export
         *     * `IMPORT` - Import
         *     * `COMMENT` - Comment */
        action?: "APPROVE" | "ASSIGN" | "COMMENT" | "CREATE" | "DELETE" | "EDIT" | "EXPORT" | "IMPORT" | "VIEW";
        /** @description * `PROJECTS` - Projects
         *     * `TASKS` - Tasks
         *     * `TEAMS` - Teams
         *     * `RESOURCES` - Resources
         *     * `COMMUNICATIONS` - Communications
         *     * `RISKS` - Risks
         *     * `COSTS` - Costs
         *     * `DOCUMENTS` - Documents
         *     * `REPORTS` - Reports
         *     * `USERS` - Users
         *     * `SETTINGS` - Settings
         *     * `DASHBOARD` - Dashboard
         *     * `NOTIFICATIONS` - Notifications
         *     * `APPROVALS` - Approvals */
        module?: "APPROVALS" | "COMMUNICATIONS" | "COSTS" | "DASHBOARD" | "DOCUMENTS" | "NOTIFICATIONS" | "PROJECTS" | "REPORTS" | "RESOURCES" | "RISKS" | "SETTINGS" | "TASKS" | "TEAMS" | "USERS";
        /** @description Which field to use when ordering the results. */
        ordering?: string;
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description A search term. */
        search?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedPermissionList"];
        };
      };
    };
  };
  api_auth_permissions_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PermissionRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PermissionRequest"];
        "multipart/form-data": components["schemas"]["PermissionRequest"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Permission"];
        };
      };
    };
  };
  api_auth_permissions_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this permission. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Permission"];
        };
      };
    };
  };
  api_auth_permissions_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this permission. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PermissionRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PermissionRequest"];
        "multipart/form-data": components["schemas"]["PermissionRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Permission"];
        };
      };
    };
  };
  api_auth_permissions_destroy: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this permission. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_auth_permissions_partial_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this permission. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedPermissionRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedPermissionRequest"];
        "multipart/form-data": components["schemas"]["PatchedPermissionRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Permission"];
        };
      };
    };
  };
  api_auth_profiles_list: {
    parameters: {
      query?: {
        /** @description Which field to use when ordering the results. */
        ordering?: string;
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description A search term. */
        search?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedUserProfileList"];
        };
      };
    };
  };
  api_auth_profiles_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["UserProfileRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["UserProfileRequest"];
        "multipart/form-data": components["schemas"]["UserProfileRequest"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UserProfile"];
        };
      };
    };
  };
  api_auth_profiles_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UserProfile"];
        };
      };
    };
  };
  api_auth_profiles_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["UserProfileRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["UserProfileRequest"];
        "multipart/form-data": components["schemas"]["UserProfileRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UserProfile"];
        };
      };
    };
  };
  api_auth_profiles_destroy: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_auth_profiles_partial_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedUserProfileRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedUserProfileRequest"];
        "multipart/form-data": components["schemas"]["PatchedUserProfileRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UserProfile"];
        };
      };
    };
  };
  api_auth_token_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CustomTokenObtainPairRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["CustomTokenObtainPairRequest"];
        "multipart/form-data": components["schemas"]["CustomTokenObtainPairRequest"];
      };
    };
    responses: {
      /** @description No response body */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_auth_token_refresh_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TokenRefreshRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["TokenRefreshRequest"];
        "multipart/form-data": components["schemas"]["TokenRefreshRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["TokenRefresh"];
        };
      };
    };
  };
  api_auth_users_list: {
    parameters: {
      query?: {
        /** @description Which field to use when ordering the results. */
        ordering?: string;
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description A search term. */
        search?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedUserList"];
        };
      };
    };
  };
  api_auth_users_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserCreateRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["UserCreateRequest"];
        "multipart/form-data": components["schemas"]["UserCreateRequest"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UserCreate"];
        };
      };
    };
  };
  api_auth_users_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this user. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
  api_auth_users_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this user. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["UserRequest"];
        "multipart/form-data": components["schemas"]["UserRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
  api_auth_users_destroy: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this user. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_auth_users_partial_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this user. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedUserRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedUserRequest"];
        "multipart/form-data": components["schemas"]["PatchedUserRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
  api_auth_users_activate_create: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this user. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["UserRequest"];
        "multipart/form-data": components["schemas"]["UserRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
  api_auth_users_deactivate_create: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this user. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["UserRequest"];
        "multipart/form-data": components["schemas"]["UserRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
  api_auth_users_reset_password_create_2: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this user. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["UserRequest"];
        "multipart/form-data": components["schemas"]["UserRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
  api_auth_users_unlock_create: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this user. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["UserRequest"];
        "multipart/form-data": components["schemas"]["UserRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
  api_auth_users_activation_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ActivationRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["ActivationRequest"];
        "multipart/form-data": components["schemas"]["ActivationRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Activation"];
        };
      };
    };
  };
  api_auth_users_change_password_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["UserRequest"];
        "multipart/form-data": components["schemas"]["UserRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
  api_auth_users_me_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
  api_auth_users_me_update: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["UserRequest"];
        "multipart/form-data": components["schemas"]["UserRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
  api_auth_users_me_destroy: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_auth_users_me_partial_update: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedUserRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedUserRequest"];
        "multipart/form-data": components["schemas"]["PatchedUserRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
  api_auth_users_permissions_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
  api_auth_users_resend_activation_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ResetPasswordRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["ResetPasswordRequest"];
        "multipart/form-data": components["schemas"]["ResetPasswordRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ResetPassword"];
        };
      };
    };
  };
  api_auth_users_reset_password_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ResetPasswordRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["ResetPasswordRequest"];
        "multipart/form-data": components["schemas"]["ResetPasswordRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ResetPassword"];
        };
      };
    };
  };
  api_auth_users_reset_password_confirm_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SetNewPasswordRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["SetNewPasswordRequest"];
        "multipart/form-data": components["schemas"]["SetNewPasswordRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["SetNewPassword"];
        };
      };
    };
  };
  api_auth_users_reset_username_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SendEmailResetRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["SendEmailResetRequest"];
        "multipart/form-data": components["schemas"]["SendEmailResetRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["SendEmailReset"];
        };
      };
    };
  };
  api_auth_users_reset_username_confirm_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UsernameResetConfirmRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["UsernameResetConfirmRequest"];
        "multipart/form-data": components["schemas"]["UsernameResetConfirmRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UsernameResetConfirm"];
        };
      };
    };
  };
  api_auth_users_set_password_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SetPasswordRetypeRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["SetPasswordRetypeRequest"];
        "multipart/form-data": components["schemas"]["SetPasswordRetypeRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["SetPasswordRetype"];
        };
      };
    };
  };
  api_auth_users_set_username_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SetUsernameRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["SetUsernameRequest"];
        "multipart/form-data": components["schemas"]["SetUsernameRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["SetUsername"];
        };
      };
    };
  };
  api_communications_configuracoes_list: {
    parameters: {
      query?: {
        /** @description Which field to use when ordering the results. */
        ordering?: string;
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description A search term. */
        search?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedConfiguracaoNotificacaoList"];
        };
      };
    };
  };
  api_communications_configuracoes_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ConfiguracaoNotificacaoRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["ConfiguracaoNotificacaoRequest"];
        "multipart/form-data": components["schemas"]["ConfiguracaoNotificacaoRequest"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ConfiguracaoNotificacao"];
        };
      };
    };
  };
  api_communications_configuracoes_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Configuração de Notificação. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ConfiguracaoNotificacao"];
        };
      };
    };
  };
  api_communications_configuracoes_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Configuração de Notificação. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ConfiguracaoNotificacaoRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["ConfiguracaoNotificacaoRequest"];
        "multipart/form-data": components["schemas"]["ConfiguracaoNotificacaoRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ConfiguracaoNotificacao"];
        };
      };
    };
  };
  api_communications_configuracoes_destroy: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Configuração de Notificação. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_communications_configuracoes_partial_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Configuração de Notificação. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedConfiguracaoNotificacaoRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedConfiguracaoNotificacaoRequest"];
        "multipart/form-data": components["schemas"]["PatchedConfiguracaoNotificacaoRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ConfiguracaoNotificacao"];
        };
      };
    };
  };
  api_communications_configuracoes_minha_configuracao_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ConfiguracaoNotificacao"];
        };
      };
    };
  };
  api_communications_mensagens_list: {
    parameters: {
      query?: {
        autor?: number;
        /** @description Which field to use when ordering the results. */
        ordering?: string;
        /** @description A page number within the paginated result set. */
        page?: number;
        projeto?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedChatMensagemList"];
        };
      };
    };
  };
  api_communications_mensagens_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ChatMensagemRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["ChatMensagemRequest"];
        "multipart/form-data": components["schemas"]["ChatMensagemRequest"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ChatMensagem"];
        };
      };
    };
  };
  api_communications_mensagens_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Mensagem de Chat. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ChatMensagem"];
        };
      };
    };
  };
  api_communications_mensagens_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Mensagem de Chat. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ChatMensagemRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["ChatMensagemRequest"];
        "multipart/form-data": components["schemas"]["ChatMensagemRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ChatMensagem"];
        };
      };
    };
  };
  api_communications_mensagens_destroy: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Mensagem de Chat. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_communications_mensagens_partial_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Mensagem de Chat. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedChatMensagemRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedChatMensagemRequest"];
        "multipart/form-data": components["schemas"]["PatchedChatMensagemRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ChatMensagem"];
        };
      };
    };
  };
  api_communications_mensagens_marcar_como_lida_create: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Mensagem de Chat. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ChatMensagemRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["ChatMensagemRequest"];
        "multipart/form-data": components["schemas"]["ChatMensagemRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ChatMensagem"];
        };
      };
    };
  };
  api_communications_mensagens_mensagens_nao_lidas_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ChatMensagem"];
        };
      };
    };
  };
  api_communications_notificacoes_list: {
    parameters: {
      query?: {
        lida?: boolean;
        /** @description Which field to use when ordering the results. */
        ordering?: string;
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description Nível de prioridade da notificação
         *
         *     * `BAIXA` - Baixa
         *     * `MEDIA` - Média
         *     * `ALTA` - Alta */
        prioridade?: "ALTA" | "BAIXA" | "MEDIA";
        projeto?: number;
        tarefa?: number;
        /** @description Tipo de objeto relacionado à notificação
         *
         *     * `TAREFA` - Tarefa
         *     * `PROJETO` - Projeto
         *     * `EQUIPE` - Equipe
         *     * `RISCO` - Risco
         *     * `DOCUMENTO` - Documento
         *     * `SISTEMA` - Sistema */
        tipo?: "DOCUMENTO" | "EQUIPE" | "PROJETO" | "RISCO" | "SISTEMA" | "TAREFA";
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedNotificacaoList"];
        };
      };
    };
  };
  api_communications_notificacoes_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["NotificacaoRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["NotificacaoRequest"];
        "multipart/form-data": components["schemas"]["NotificacaoRequest"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Notificacao"];
        };
      };
    };
  };
  api_communications_notificacoes_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Notificação. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Notificacao"];
        };
      };
    };
  };
  api_communications_notificacoes_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Notificação. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["NotificacaoRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["NotificacaoRequest"];
        "multipart/form-data": components["schemas"]["NotificacaoRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Notificacao"];
        };
      };
    };
  };
  api_communications_notificacoes_destroy: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Notificação. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_communications_notificacoes_partial_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Notificação. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedNotificacaoRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedNotificacaoRequest"];
        "multipart/form-data": components["schemas"]["PatchedNotificacaoRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Notificacao"];
        };
      };
    };
  };
  api_communications_notificacoes_marcar_como_lida_create: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Notificação. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["NotificacaoRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["NotificacaoRequest"];
        "multipart/form-data": components["schemas"]["NotificacaoRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Notificacao"];
        };
      };
    };
  };
  api_communications_notificacoes_marcar_todas_como_lidas_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["NotificacaoRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["NotificacaoRequest"];
        "multipart/form-data": components["schemas"]["NotificacaoRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Notificacao"];
        };
      };
    };
  };
  api_communications_notificacoes_nao_lidas_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Notificacao"];
        };
      };
    };
  };
  api_costs_alertas_list: {
    parameters: {
      query?: {
        /** @description Which field to use when ordering the results. */
        ordering?: string;
        /** @description A page number within the paginated result set. */
        page?: number;
        projeto?: number;
        /** @description * `ATIVO` - Ativo
         *     * `RESOLVIDO` - Resolvido
         *     * `IGNORADO` - Ignorado */
        status?: "ATIVO" | "IGNORADO" | "RESOLVIDO";
        tarefa?: number;
        /** @description * `PROJETO` - Projeto
         *     * `TAREFA` - Tarefa */
        tipo?: "PROJETO" | "TAREFA";
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedAlertaList"];
        };
      };
    };
  };
  api_costs_alertas_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AlertaRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["AlertaRequest"];
        "multipart/form-data": components["schemas"]["AlertaRequest"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Alerta"];
        };
      };
    };
  };
  api_costs_alertas_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Alerta de Orçamento. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Alerta"];
        };
      };
    };
  };
  api_costs_alertas_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Alerta de Orçamento. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AlertaRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["AlertaRequest"];
        "multipart/form-data": components["schemas"]["AlertaRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Alerta"];
        };
      };
    };
  };
  api_costs_alertas_destroy: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Alerta de Orçamento. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_costs_alertas_partial_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Alerta de Orçamento. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedAlertaRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedAlertaRequest"];
        "multipart/form-data": components["schemas"]["PatchedAlertaRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Alerta"];
        };
      };
    };
  };
  api_costs_alertas_ignorar_create: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Alerta de Orçamento. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AlertaRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["AlertaRequest"];
        "multipart/form-data": components["schemas"]["AlertaRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Alerta"];
        };
      };
    };
  };
  api_costs_alertas_resolver_create: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Alerta de Orçamento. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AlertaRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["AlertaRequest"];
        "multipart/form-data": components["schemas"]["AlertaRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Alerta"];
        };
      };
    };
  };
  api_costs_alertas_pendentes_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Alerta"];
        };
      };
    };
  };
  api_costs_categorias_list: {
    parameters: {
      query?: {
        /** @description Which field to use when ordering the results. */
        ordering?: string;
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description A search term. */
        search?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedCategoriaList"];
        };
      };
    };
  };
  api_costs_categorias_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CategoriaRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["CategoriaRequest"];
        "multipart/form-data": components["schemas"]["CategoriaRequest"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Categoria"];
        };
      };
    };
  };
  api_costs_categorias_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Categoria. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Categoria"];
        };
      };
    };
  };
  api_costs_categorias_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Categoria. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CategoriaRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["CategoriaRequest"];
        "multipart/form-data": components["schemas"]["CategoriaRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Categoria"];
        };
      };
    };
  };
  api_costs_categorias_destroy: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Categoria. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_costs_categorias_partial_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Categoria. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedCategoriaRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedCategoriaRequest"];
        "multipart/form-data": components["schemas"]["PatchedCategoriaRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Categoria"];
        };
      };
    };
  };
  api_costs_custos_list: {
    parameters: {
      query?: {
        categoria?: number;
        data?: string;
        /** @description Which field to use when ordering the results. */
        ordering?: string;
        /** @description A page number within the paginated result set. */
        page?: number;
        projeto?: number;
        /** @description A search term. */
        search?: string;
        tarefa?: number;
        /** @description * `FIXO` - Custo Fixo
         *     * `VARIAVEL` - Custo Variável
         *     * `RECORRENTE` - Custo Recorrente */
        tipo?: "FIXO" | "RECORRENTE" | "VARIAVEL";
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedCustoListList"];
        };
      };
    };
  };
  api_costs_custos_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CustoRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["CustoRequest"];
        "multipart/form-data": components["schemas"]["CustoRequest"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Custo"];
        };
      };
    };
  };
  api_costs_custos_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Custo. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Custo"];
        };
      };
    };
  };
  api_costs_custos_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Custo. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CustoRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["CustoRequest"];
        "multipart/form-data": components["schemas"]["CustoRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Custo"];
        };
      };
    };
  };
  api_costs_custos_destroy: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Custo. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_costs_custos_partial_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Custo. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedCustoRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedCustoRequest"];
        "multipart/form-data": components["schemas"]["PatchedCustoRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Custo"];
        };
      };
    };
  };
  api_costs_custos_dashboard_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Custo"];
        };
      };
    };
  };
  api_costs_custos_relatorio_mensal_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Custo"];
        };
      };
    };
  };
  api_costs_custos_relatorio_por_categoria_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Custo"];
        };
      };
    };
  };
  api_costs_custos_relatorio_por_projeto_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Custo"];
        };
      };
    };
  };
  api_costs_orcamentos_projeto_list: {
    parameters: {
      query?: {
        /** @description A page number within the paginated result set. */
        page?: number;
        projeto?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedOrcamentoProjetoList"];
        };
      };
    };
  };
  api_costs_orcamentos_projeto_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["OrcamentoProjetoRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["OrcamentoProjetoRequest"];
        "multipart/form-data": components["schemas"]["OrcamentoProjetoRequest"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["OrcamentoProjeto"];
        };
      };
    };
  };
  api_costs_orcamentos_projeto_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Orçamento de Projeto. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["OrcamentoProjeto"];
        };
      };
    };
  };
  api_costs_orcamentos_projeto_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Orçamento de Projeto. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["OrcamentoProjetoRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["OrcamentoProjetoRequest"];
        "multipart/form-data": components["schemas"]["OrcamentoProjetoRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["OrcamentoProjeto"];
        };
      };
    };
  };
  api_costs_orcamentos_projeto_destroy: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Orçamento de Projeto. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_costs_orcamentos_projeto_partial_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Orçamento de Projeto. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedOrcamentoProjetoRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedOrcamentoProjetoRequest"];
        "multipart/form-data": components["schemas"]["PatchedOrcamentoProjetoRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["OrcamentoProjeto"];
        };
      };
    };
  };
  api_costs_orcamentos_projeto_ajustar_orcamento_create: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Orçamento de Projeto. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["OrcamentoProjetoRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["OrcamentoProjetoRequest"];
        "multipart/form-data": components["schemas"]["OrcamentoProjetoRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["OrcamentoProjeto"];
        };
      };
    };
  };
  api_costs_orcamentos_projeto_projetos_sem_orcamento_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["OrcamentoProjeto"];
        };
      };
    };
  };
  api_costs_orcamentos_tarefa_list: {
    parameters: {
      query?: {
        /** @description A page number within the paginated result set. */
        page?: number;
        tarefa?: number;
        tarefa__projeto?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedOrcamentoTarefaList"];
        };
      };
    };
  };
  api_costs_orcamentos_tarefa_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["OrcamentoTarefaRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["OrcamentoTarefaRequest"];
        "multipart/form-data": components["schemas"]["OrcamentoTarefaRequest"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["OrcamentoTarefa"];
        };
      };
    };
  };
  api_costs_orcamentos_tarefa_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Orçamento de Tarefa. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["OrcamentoTarefa"];
        };
      };
    };
  };
  api_costs_orcamentos_tarefa_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Orçamento de Tarefa. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["OrcamentoTarefaRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["OrcamentoTarefaRequest"];
        "multipart/form-data": components["schemas"]["OrcamentoTarefaRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["OrcamentoTarefa"];
        };
      };
    };
  };
  api_costs_orcamentos_tarefa_destroy: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Orçamento de Tarefa. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_costs_orcamentos_tarefa_partial_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Orçamento de Tarefa. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedOrcamentoTarefaRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedOrcamentoTarefaRequest"];
        "multipart/form-data": components["schemas"]["PatchedOrcamentoTarefaRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["OrcamentoTarefa"];
        };
      };
    };
  };
  api_costs_orcamentos_tarefa_ajustar_orcamento_create: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Orçamento de Tarefa. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["OrcamentoTarefaRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["OrcamentoTarefaRequest"];
        "multipart/form-data": components["schemas"]["OrcamentoTarefaRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["OrcamentoTarefa"];
        };
      };
    };
  };
  api_costs_orcamentos_tarefa_tarefas_sem_orcamento_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["OrcamentoTarefa"];
        };
      };
    };
  };
  visao_geral_dashboard_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Dados consolidados do dashboard. */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["VisaoGeralDashboard"];
        };
      };
    };
  };
  api_documents_list: {
    parameters: {
      query?: {
        /** @description Filtrar por ID do usuário que enviou */
        enviado_por?: number;
        /** @description Campo para ordenação (ex: data_upload, -titulo) */
        ordering?: string;
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description Filtrar por projeto (ID) */
        projeto?: number;
        /** @description Termo de busca para título, descrição ou tipo de arquivo */
        search?: string;
        /** @description Filtrar por tarefa (ID) */
        tarefa?: number;
        /** @description Buscar por texto no título ou descrição */
        texto?: string;
        /** @description Filtrar por tipo de documento */
        tipo?: "ATA" | "DESIGN" | "MANUAL" | "OUTRO" | "RELATORIO" | "REQUISITO";
        /** @description Filtrar por tipo MIME do arquivo (ex: application/pdf) */
        tipo_arquivo?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Lista de documentos recuperada com sucesso */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedDocumentoListList"];
        };
      };
    };
  };
  api_documents_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["DocumentoRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["DocumentoRequest"];
        "multipart/form-data": components["schemas"]["DocumentoRequest"];
      };
    };
    responses: {
      /** @description Documento criado com sucesso */
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Documento"];
        };
      };
      /** @description Dados inválidos */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_documents_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Documento. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Detalhes do documento recuperados com sucesso */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Documento"];
        };
      };
      /** @description Documento não encontrado */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_documents_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Documento. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["DocumentoRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["DocumentoRequest"];
        "multipart/form-data": components["schemas"]["DocumentoRequest"];
      };
    };
    responses: {
      /** @description Documento atualizado com sucesso */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Documento"];
        };
      };
      /** @description Dados inválidos */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Documento não encontrado */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_documents_destroy: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Documento. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Documento excluído com sucesso */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Documento não encontrado */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_documents_partial_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Documento. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedDocumentoRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedDocumentoRequest"];
        "multipart/form-data": components["schemas"]["PatchedDocumentoRequest"];
      };
    };
    responses: {
      /** @description Documento atualizado parcialmente com sucesso */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Documento"];
        };
      };
      /** @description Dados inválidos */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Documento não encontrado */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_documents_adicionar_comentario_create: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Documento. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": unknown;
      };
    };
    responses: {
      /** @description Comentário adicionado com sucesso */
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Comentario"];
        };
      };
      /** @description Dados inválidos (ex: texto não fornecido) */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Documento não encontrado */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_documents_associar_tarefa_create: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Documento. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": unknown;
      };
    };
    responses: {
      /** @description Documento associado/desassociado com sucesso */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Documento"];
        };
      };
      /** @description Dados inválidos (ex: tarefa_id não fornecido) */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Documento ou Tarefa não encontrada */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_documents_historico_retrieve_2: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Documento. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Histórico de versões recuperado com sucesso */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedHistoricoDocumentoList"];
        };
      };
      /** @description Documento não encontrado */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_documents_comentarios_list: {
    parameters: {
      query?: {
        /** @description Filtrar por ID do autor do comentário */
        autor?: number;
        /** @description Filtrar por ID do documento ao qual o comentário pertence */
        documento?: number;
        /** @description Campo para ordenação (ex: criado_em, -criado_em) */
        ordering?: string;
        /** @description A page number within the paginated result set. */
        page?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Lista de comentários recuperada com sucesso */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedComentarioList"];
        };
      };
    };
  };
  api_documents_comentarios_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ComentarioRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["ComentarioRequest"];
        "multipart/form-data": components["schemas"]["ComentarioRequest"];
      };
    };
    responses: {
      /** @description Comentário criado com sucesso */
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Comentario"];
        };
      };
      /** @description Dados inválidos */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_documents_comentarios_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Comentário. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Detalhes do comentário recuperados com sucesso */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Comentario"];
        };
      };
      /** @description Comentário não encontrado */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_documents_comentarios_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Comentário. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ComentarioRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["ComentarioRequest"];
        "multipart/form-data": components["schemas"]["ComentarioRequest"];
      };
    };
    responses: {
      /** @description Comentário atualizado com sucesso */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Comentario"];
        };
      };
      /** @description Dados inválidos */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Permissão negada para atualizar o comentário */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Comentário não encontrado */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_documents_comentarios_destroy: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Comentário. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Comentário excluído com sucesso */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Permissão negada para excluir o comentário */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Comentário não encontrado */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_documents_comentarios_partial_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Comentário. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedComentarioRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedComentarioRequest"];
        "multipart/form-data": components["schemas"]["PatchedComentarioRequest"];
      };
    };
    responses: {
      /** @description Comentário atualizado parcialmente com sucesso */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Comentario"];
        };
      };
      /** @description Dados inválidos */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Permissão negada para atualizar o comentário */
      403: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Comentário não encontrado */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_documents_historico_list: {
    parameters: {
      query?: {
        /** @description Filtrar por ID do usuário que realizou a alteração */
        alterado_por?: number;
        /** @description Filtrar por ID do documento */
        documento?: number;
        /** @description A page number within the paginated result set. */
        page?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Lista de histórico de documentos recuperada com sucesso */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedHistoricoDocumentoList"];
        };
      };
    };
  };
  api_documents_historico_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Histórico de Documento. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Detalhes do registro de histórico recuperados com sucesso */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HistoricoDocumento"];
        };
      };
      /** @description Registro de histórico não encontrado */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  verificacao_saude_simples: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description API está operacional. */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            /** @example ok */
            status?: string;
          };
        };
      };
    };
  };
  verificacao_saude_detalhada: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description API está operacional com detalhes. */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            /** @example online */
            status?: string;
            /** @example 1.0 */
            versao?: string;
            /** @example desenvolvimento */
            ambiente?: string;
            /**
             * Format: date-time
             * @example 2024-07-15T14:30:00Z
             */
            data_hora?: string;
          };
        };
      };
    };
  };
  api_projects_list: {
    parameters: {
      query?: {
        arquivado?: boolean;
        /** @description Filtra projetos atrasados (data_fim < hoje e status != CONCLUIDO) */
        atrasado?: boolean;
        /** @description Filtra projetos com data de fim antes da data especificada */
        data_fim_antes_after?: string;
        /** @description Filtra projetos com data de fim antes da data especificada */
        data_fim_antes_before?: string;
        /** @description Filtra projetos com data de fim após a data especificada */
        data_fim_apos_after?: string;
        /** @description Filtra projetos com data de fim após a data especificada */
        data_fim_apos_before?: string;
        /** @description Filtra projetos com data de início antes da data especificada */
        data_inicio_antes_after?: string;
        /** @description Filtra projetos com data de início antes da data especificada */
        data_inicio_antes_before?: string;
        /** @description Filtra projetos com data de início após a data especificada */
        data_inicio_apos_after?: string;
        /** @description Filtra projetos com data de início após a data especificada */
        data_inicio_apos_before?: string;
        /** @description Filtra por descrição (case insensitive) */
        descricao?: string;
        /** @description Filtra projetos que contenham o membro especificado (ID do usuário) */
        membro?: string;
        /** @description Which field to use when ordering the results. */
        ordering?: string;
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description Filtra por prioridade (pode ser múltiplas, separadas por vírgula) */
        prioridade?: string;
        /** @description A search term. */
        search?: string;
        /** @description Filtra por status (pode ser múltiplos, separados por vírgula) */
        status?: string;
        /** @description Filtra por título (case insensitive) */
        titulo?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedProjetoListList"];
        };
      };
    };
  };
  api_projects_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProjetoRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["ProjetoRequest"];
        "multipart/form-data": components["schemas"]["ProjetoRequest"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Projeto"];
        };
      };
    };
  };
  metricas_projeto_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description ID numérico do projeto para o qual as métricas são solicitadas. */
        id_projeto: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Métricas detalhadas do projeto. */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["MetricasProjeto"];
        };
      };
      /** @description O projeto com o ID especificado não foi encontrado. */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Erro"];
        };
      };
    };
  };
  api_projects_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Projeto. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Projeto"];
        };
      };
    };
  };
  api_projects_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Projeto. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProjetoRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["ProjetoRequest"];
        "multipart/form-data": components["schemas"]["ProjetoRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Projeto"];
        };
      };
    };
  };
  api_projects_destroy: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Projeto. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_projects_partial_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Projeto. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedProjetoRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedProjetoRequest"];
        "multipart/form-data": components["schemas"]["PatchedProjetoRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Projeto"];
        };
      };
    };
  };
  api_projects_adicionar_membro_create: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Projeto. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["MembroProjetoRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["MembroProjetoRequest"];
        "multipart/form-data": components["schemas"]["MembroProjetoRequest"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["MembroProjeto"];
        };
      };
    };
  };
  api_projects_archive_create: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Projeto. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProjetoRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["ProjetoRequest"];
        "multipart/form-data": components["schemas"]["ProjetoRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Projeto"];
        };
      };
    };
  };
  api_projects_criar_sprint_create: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Projeto. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProjetoRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["ProjetoRequest"];
        "multipart/form-data": components["schemas"]["ProjetoRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Projeto"];
        };
      };
    };
  };
  api_projects_criar_tarefa_create: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Projeto. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProjetoRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["ProjetoRequest"];
        "multipart/form-data": components["schemas"]["ProjetoRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Projeto"];
        };
      };
    };
  };
  api_projects_criar_tarefas_multiplas_create: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Projeto. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProjetoRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["ProjetoRequest"];
        "multipart/form-data": components["schemas"]["ProjetoRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Projeto"];
        };
      };
    };
  };
  api_projects_dashboard_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Projeto. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Projeto"];
        };
      };
    };
  };
  api_projects_exportar_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Projeto. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Projeto"];
        };
      };
    };
  };
  api_projects_gantt_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Projeto. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Projeto"];
        };
      };
    };
  };
  api_projects_historico_status_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Projeto. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Projeto"];
        };
      };
    };
  };
  api_projects_kanban_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Projeto. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Projeto"];
        };
      };
    };
  };
  api_projects_listar_membros_list: {
    parameters: {
      query?: {
        arquivado?: boolean;
        /** @description Filtra projetos atrasados (data_fim < hoje e status != CONCLUIDO) */
        atrasado?: boolean;
        /** @description Filtra projetos com data de fim antes da data especificada */
        data_fim_antes_after?: string;
        /** @description Filtra projetos com data de fim antes da data especificada */
        data_fim_antes_before?: string;
        /** @description Filtra projetos com data de fim após a data especificada */
        data_fim_apos_after?: string;
        /** @description Filtra projetos com data de fim após a data especificada */
        data_fim_apos_before?: string;
        /** @description Filtra projetos com data de início antes da data especificada */
        data_inicio_antes_after?: string;
        /** @description Filtra projetos com data de início antes da data especificada */
        data_inicio_antes_before?: string;
        /** @description Filtra projetos com data de início após a data especificada */
        data_inicio_apos_after?: string;
        /** @description Filtra projetos com data de início após a data especificada */
        data_inicio_apos_before?: string;
        /** @description Filtra por descrição (case insensitive) */
        descricao?: string;
        /** @description Filtra projetos que contenham o membro especificado (ID do usuário) */
        membro?: string;
        /** @description Which field to use when ordering the results. */
        ordering?: string;
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description Filtra por prioridade (pode ser múltiplas, separadas por vírgula) */
        prioridade?: string;
        /** @description A search term. */
        search?: string;
        /** @description Filtra por status (pode ser múltiplos, separados por vírgula) */
        status?: string;
        /** @description Filtra por título (case insensitive) */
        titulo?: string;
      };
      header?: never;
      path: {
        /** @description A unique integer value identifying this Projeto. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedMembroProjetoList"];
        };
      };
    };
  };
  api_projects_membros_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Projeto. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Projeto"];
        };
      };
    };
  };
  api_projects_metrics_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Projeto. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
    };
  };
  api_projects_remover_membro_destroy: {
    parameters: {
      query: {
        /** @description ID do membro a ser removido */
        membro_id: number;
      };
      header?: never;
      path: {
        /** @description A unique integer value identifying this Projeto. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_projects_sprints_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Projeto. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Projeto"];
        };
      };
    };
  };
  api_projects_my_projects_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Projeto"];
        };
      };
    };
  };
  api_risks_historico_list: {
    parameters: {
      query?: {
        alterado_por?: number;
        /** @description A page number within the paginated result set. */
        page?: number;
        risco?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedHistoricoRiscoList"];
        };
      };
    };
  };
  api_risks_historico_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Histórico de Risco. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HistoricoRisco"];
        };
      };
    };
  };
  api_risks_riscos_list: {
    parameters: {
      query?: {
        /** @description * `BAIXO` - Baixo
         *     * `MEDIO` - Médio
         *     * `ALTO` - Alto */
        impacto?: "ALTO" | "BAIXO" | "MEDIO";
        /** @description Which field to use when ordering the results. */
        ordering?: string;
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description * `BAIXA` - Baixa
         *     * `MEDIA` - Média
         *     * `ALTA` - Alta */
        probabilidade?: "ALTA" | "BAIXA" | "MEDIA";
        projeto?: number;
        responsavel_mitigacao?: number;
        /** @description A search term. */
        search?: string;
        /** @description * `IDENTIFICADO` - Identificado
         *     * `EM_ANALISE` - Em Análise
         *     * `MITIGADO` - Mitigado
         *     * `ACEITO` - Aceito
         *     * `ELIMINADO` - Eliminado */
        status?: "ACEITO" | "ELIMINADO" | "EM_ANALISE" | "IDENTIFICADO" | "MITIGADO";
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedRiscoListList"];
        };
      };
    };
  };
  api_risks_riscos_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["RiscoRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["RiscoRequest"];
        "multipart/form-data": components["schemas"]["RiscoRequest"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Risco"];
        };
      };
    };
  };
  api_risks_riscos_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Risco. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Risco"];
        };
      };
    };
  };
  api_risks_riscos_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Risco. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["RiscoRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["RiscoRequest"];
        "multipart/form-data": components["schemas"]["RiscoRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Risco"];
        };
      };
    };
  };
  api_risks_riscos_destroy: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Risco. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_risks_riscos_partial_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Risco. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedRiscoRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedRiscoRequest"];
        "multipart/form-data": components["schemas"]["PatchedRiscoRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Risco"];
        };
      };
    };
  };
  api_risks_riscos_atualizar_status_create: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Risco. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["RiscoRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["RiscoRequest"];
        "multipart/form-data": components["schemas"]["RiscoRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Risco"];
        };
      };
    };
  };
  api_risks_riscos_historico_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Risco. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Risco"];
        };
      };
    };
  };
  api_risks_riscos_excluir_varios_destroy: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_tasks_atribuicoes_list: {
    parameters: {
      query?: {
        /** @description Which field to use when ordering the results. */
        ordering?: string;
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description Filtrar por ID da tarefa */
        tarefa?: number;
        /** @description Filtrar por ID do usuário */
        usuario?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedAtribuicaoTarefaList"];
        };
      };
    };
  };
  api_tasks_atribuicoes_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AtribuicaoTarefaRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["AtribuicaoTarefaRequest"];
        "multipart/form-data": components["schemas"]["AtribuicaoTarefaRequest"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["AtribuicaoTarefa"];
        };
      };
    };
  };
  api_tasks_atribuicoes_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Atribuição de Tarefa. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["AtribuicaoTarefa"];
        };
      };
    };
  };
  api_tasks_atribuicoes_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Atribuição de Tarefa. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AtribuicaoTarefaRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["AtribuicaoTarefaRequest"];
        "multipart/form-data": components["schemas"]["AtribuicaoTarefaRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["AtribuicaoTarefa"];
        };
      };
    };
  };
  api_tasks_atribuicoes_destroy: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Atribuição de Tarefa. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_tasks_atribuicoes_partial_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Atribuição de Tarefa. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedAtribuicaoTarefaRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedAtribuicaoTarefaRequest"];
        "multipart/form-data": components["schemas"]["PatchedAtribuicaoTarefaRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["AtribuicaoTarefa"];
        };
      };
    };
  };
  api_tasks_comentarios_list: {
    parameters: {
      query?: {
        /** @description Filtrar por ID do autor */
        autor?: number;
        /** @description Ordenar resultados (ex: -criado_em) */
        ordering?: string;
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description A search term. */
        search?: string;
        /** @description Filtrar por ID da tarefa */
        tarefa?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedComentarioTarefaList"];
        };
      };
    };
  };
  api_tasks_comentarios_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ComentarioTarefaRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["ComentarioTarefaRequest"];
        "multipart/form-data": components["schemas"]["ComentarioTarefaRequest"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComentarioTarefa"];
        };
      };
    };
  };
  api_tasks_comentarios_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Comentário. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComentarioTarefa"];
        };
      };
    };
  };
  api_tasks_comentarios_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Comentário. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ComentarioTarefaRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["ComentarioTarefaRequest"];
        "multipart/form-data": components["schemas"]["ComentarioTarefaRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComentarioTarefa"];
        };
      };
    };
  };
  api_tasks_comentarios_destroy: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Comentário. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_tasks_comentarios_partial_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Comentário. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedComentarioTarefaRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedComentarioTarefaRequest"];
        "multipart/form-data": components["schemas"]["PatchedComentarioTarefaRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComentarioTarefa"];
        };
      };
    };
  };
  api_tasks_tarefas_list: {
    parameters: {
      query?: {
        /** @description Filtrar tarefas atrasadas */
        atrasada?: boolean;
        /** @description Filtra tarefas com data de início antes da data especificada */
        data_inicio_antes_after?: string;
        /** @description Filtra tarefas com data de início antes da data especificada */
        data_inicio_antes_before?: string;
        /** @description Filtra tarefas com data de início após a data especificada */
        data_inicio_apos_after?: string;
        /** @description Filtra tarefas com data de início após a data especificada */
        data_inicio_apos_before?: string;
        /** @description Filtra tarefas com data de término antes da data especificada */
        data_termino_antes_after?: string;
        /** @description Filtra tarefas com data de término antes da data especificada */
        data_termino_antes_before?: string;
        /** @description Filtra tarefas com data de término após a data especificada */
        data_termino_apos_after?: string;
        /** @description Filtra tarefas com data de término após a data especificada */
        data_termino_apos_before?: string;
        /** @description Filtra por descrição (case insensitive) */
        descricao?: string;
        /** @description Filtrar minhas tarefas */
        minhas_tarefas?: boolean;
        /** @description Ordenar resultados (ex: -data_termino) */
        ordering?: string;
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description Filtrar por prioridade (separadas por vírgula) */
        prioridade?: string;
        /** @description Filtrar por ID do projeto */
        projeto?: number;
        /** @description Filtrar por ID do usuário responsável */
        responsavel?: number;
        /** @description A search term. */
        search?: string;
        /** @description Filtra tarefas sem responsáveis atribuídos */
        sem_responsavel?: boolean;
        /** @description Filtrar tarefas sem sprint */
        sem_sprint?: boolean;
        /** @description Filtrar por ID da sprint */
        sprint?: number;
        /** @description Filtrar por status (separados por vírgula) */
        status?: string;
        /** @description Filtra por título (case insensitive) */
        titulo?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedTarefaListList"];
        };
      };
    };
  };
  api_tasks_tarefas_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TarefaRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["TarefaRequest"];
        "multipart/form-data": components["schemas"]["TarefaRequest"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Tarefa"];
        };
      };
    };
  };
  api_tasks_tarefas_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Tarefa. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Tarefa"];
        };
      };
    };
  };
  api_tasks_tarefas_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Tarefa. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TarefaRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["TarefaRequest"];
        "multipart/form-data": components["schemas"]["TarefaRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Tarefa"];
        };
      };
    };
  };
  api_tasks_tarefas_destroy: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Tarefa. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_tasks_tarefas_partial_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Tarefa. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedTarefaRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedTarefaRequest"];
        "multipart/form-data": components["schemas"]["PatchedTarefaRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Tarefa"];
        };
      };
    };
  };
  api_tasks_tarefas_adicionar_comentario_create: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Tarefa. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": {
          /** @description Texto do comentário */
          texto: string;
        };
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComentarioTarefa"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
    };
  };
  api_tasks_tarefas_associar_sprint_create: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Tarefa. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": {
          /** @description ID da sprint a ser associada. Use 0 ou null para remover a associação. */
          sprint_id: number | null;
        };
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Tarefa"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
    };
  };
  api_tasks_tarefas_atribuir_responsavel_create: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Tarefa. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": {
          /** @description ID do usuário a ser atribuído como responsável */
          usuario_id: number;
        };
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["AtribuicaoTarefa"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
    };
  };
  api_tasks_tarefas_atualizar_status_create: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Tarefa. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": {
          /** @description Novo status da tarefa (A_FAZER, EM_ANDAMENTO, FEITO, BLOQUEADO, CANCELADO) */
          status: string;
          /** @description Comentário opcional sobre a mudança de status */
          comentario?: string;
        };
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Tarefa"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
    };
  };
  api_tasks_tarefas_historico_status_list: {
    parameters: {
      query?: {
        /** @description Filtra tarefas atrasadas (data_termino < hoje e status != FEITO) */
        atrasada?: boolean;
        /** @description Filtra tarefas com data de início antes da data especificada */
        data_inicio_antes_after?: string;
        /** @description Filtra tarefas com data de início antes da data especificada */
        data_inicio_antes_before?: string;
        /** @description Filtra tarefas com data de início após a data especificada */
        data_inicio_apos_after?: string;
        /** @description Filtra tarefas com data de início após a data especificada */
        data_inicio_apos_before?: string;
        /** @description Filtra tarefas com data de término antes da data especificada */
        data_termino_antes_after?: string;
        /** @description Filtra tarefas com data de término antes da data especificada */
        data_termino_antes_before?: string;
        /** @description Filtra tarefas com data de término após a data especificada */
        data_termino_apos_after?: string;
        /** @description Filtra tarefas com data de término após a data especificada */
        data_termino_apos_before?: string;
        /** @description Filtra por descrição (case insensitive) */
        descricao?: string;
        /** @description Filtra tarefas do usuário autenticado */
        minhas_tarefas?: boolean;
        /** @description Which field to use when ordering the results. */
        ordering?: string;
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description Filtra por prioridade (pode ser múltiplas, separadas por vírgula) */
        prioridade?: string;
        projeto?: number;
        /** @description Filtra tarefas pelo ID do usuário responsável */
        responsavel?: string;
        /** @description A search term. */
        search?: string;
        /** @description Filtra tarefas sem responsáveis atribuídos */
        sem_responsavel?: boolean;
        /** @description Filtra tarefas que não estão associadas a nenhuma sprint */
        sem_sprint?: boolean;
        sprint?: number;
        /** @description Filtra por status (pode ser múltiplos, separados por vírgula) */
        status?: string;
        /** @description Filtra por título (case insensitive) */
        titulo?: string;
      };
      header?: never;
      path: {
        /** @description A unique integer value identifying this Tarefa. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedHistoricoStatusTarefaList"];
        };
      };
    };
  };
  api_tasks_tarefas_remover_responsavel_create: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Tarefa. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": {
          /** @description ID do usuário a ser removido da tarefa */
          usuario_id: number;
        };
      };
    };
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
    };
  };
  api_teams_equipes_list: {
    parameters: {
      query?: {
        /** @description Which field to use when ordering the results. */
        ordering?: string;
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description A search term. */
        search?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedEquipeListList"];
        };
      };
    };
  };
  api_teams_equipes_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["EquipeRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["EquipeRequest"];
        "multipart/form-data": components["schemas"]["EquipeRequest"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Equipe"];
        };
      };
    };
  };
  api_teams_equipes_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Equipe. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Equipe"];
        };
      };
    };
  };
  api_teams_equipes_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Equipe. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["EquipeRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["EquipeRequest"];
        "multipart/form-data": components["schemas"]["EquipeRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Equipe"];
        };
      };
    };
  };
  api_teams_equipes_destroy: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Equipe. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_teams_equipes_partial_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Equipe. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedEquipeRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedEquipeRequest"];
        "multipart/form-data": components["schemas"]["PatchedEquipeRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Equipe"];
        };
      };
    };
  };
  api_teams_equipes_adicionar_membro_create: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Equipe. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["EquipeRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["EquipeRequest"];
        "multipart/form-data": components["schemas"]["EquipeRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Equipe"];
        };
      };
    };
  };
  api_teams_equipes_atualizar_papel_membro_create: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Equipe. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["EquipeRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["EquipeRequest"];
        "multipart/form-data": components["schemas"]["EquipeRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Equipe"];
        };
      };
    };
  };
  api_teams_equipes_membros_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Equipe. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Equipe"];
        };
      };
    };
  };
  api_teams_equipes_remover_membro_create: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Equipe. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["EquipeRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["EquipeRequest"];
        "multipart/form-data": components["schemas"]["EquipeRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Equipe"];
        };
      };
    };
  };
  api_teams_equipes_usuarios_disponiveis_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Equipe"];
        };
      };
    };
  };
  api_teams_membros_list: {
    parameters: {
      query?: {
        equipe?: number;
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description * `PO` - Product Owner
         *     * `SM` - Scrum Master
         *     * `DEV` - Desenvolvedor
         *     * `QA` - Analista de Qualidade
         *     * `DESIGN` - Designer
         *     * `ANALISTA` - Analista */
        papel?: "ANALISTA" | "DESIGN" | "DEV" | "PO" | "QA" | "SM";
        usuario?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedMembroEquipeList"];
        };
      };
    };
  };
  api_teams_membros_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["MembroEquipeRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["MembroEquipeRequest"];
        "multipart/form-data": components["schemas"]["MembroEquipeRequest"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["MembroEquipe"];
        };
      };
    };
  };
  api_teams_membros_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Membro da Equipe. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["MembroEquipe"];
        };
      };
    };
  };
  api_teams_membros_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Membro da Equipe. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["MembroEquipeRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["MembroEquipeRequest"];
        "multipart/form-data": components["schemas"]["MembroEquipeRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["MembroEquipe"];
        };
      };
    };
  };
  api_teams_membros_destroy: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Membro da Equipe. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_teams_membros_partial_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Membro da Equipe. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedMembroEquipeRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedMembroEquipeRequest"];
        "multipart/form-data": components["schemas"]["PatchedMembroEquipeRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["MembroEquipe"];
        };
      };
    };
  };
  api_teams_permissoes_list: {
    parameters: {
      query?: {
        equipe?: number;
        /** @description * `TAREFAS` - Tarefas
         *     * `SPRINTS` - Sprints
         *     * `DOCUMENTOS` - Documentos
         *     * `RISCOS` - Riscos
         *     * `CUSTOS` - Custos */
        modulo?: "CUSTOS" | "DOCUMENTOS" | "RISCOS" | "SPRINTS" | "TAREFAS";
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description * `PO` - Product Owner
         *     * `SM` - Scrum Master
         *     * `DEV` - Desenvolvedor
         *     * `QA` - Analista de Qualidade
         *     * `DESIGN` - Designer
         *     * `ANALISTA` - Analista */
        papel?: "ANALISTA" | "DESIGN" | "DEV" | "PO" | "QA" | "SM";
        /** @description * `VISUALIZAR` - Visualizar
         *     * `CRIAR` - Criar
         *     * `EDITAR` - Editar
         *     * `EXCLUIR` - Excluir */
        permissao?: "CRIAR" | "EDITAR" | "EXCLUIR" | "VISUALIZAR";
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedPermissaoEquipeList"];
        };
      };
    };
  };
  api_teams_permissoes_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PermissaoEquipeRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PermissaoEquipeRequest"];
        "multipart/form-data": components["schemas"]["PermissaoEquipeRequest"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PermissaoEquipe"];
        };
      };
    };
  };
  api_teams_permissoes_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Permissão de Equipe. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PermissaoEquipe"];
        };
      };
    };
  };
  api_teams_permissoes_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Permissão de Equipe. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PermissaoEquipeRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PermissaoEquipeRequest"];
        "multipart/form-data": components["schemas"]["PermissaoEquipeRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PermissaoEquipe"];
        };
      };
    };
  };
  api_teams_permissoes_destroy: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Permissão de Equipe. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_teams_permissoes_partial_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this Permissão de Equipe. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedPermissaoEquipeRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedPermissaoEquipeRequest"];
        "multipart/form-data": components["schemas"]["PatchedPermissaoEquipeRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PermissaoEquipe"];
        };
      };
    };
  };
  dashboard_usuario_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Dados consolidados para o dashboard do usuário. */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["DashboardUsuario"];
        };
      };
    };
  };
  api_users_access_profiles_list: {
    parameters: {
      query?: {
        /** @description Which field to use when ordering the results. */
        ordering?: string;
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description A search term. */
        search?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedAccessProfileList"];
        };
      };
    };
  };
  api_users_access_profiles_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AccessProfileRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["AccessProfileRequest"];
        "multipart/form-data": components["schemas"]["AccessProfileRequest"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["AccessProfile"];
        };
      };
    };
  };
  api_users_access_profiles_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this access profile. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["AccessProfile"];
        };
      };
    };
  };
  api_users_access_profiles_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this access profile. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AccessProfileRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["AccessProfileRequest"];
        "multipart/form-data": components["schemas"]["AccessProfileRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["AccessProfile"];
        };
      };
    };
  };
  api_users_access_profiles_destroy: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this access profile. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_users_access_profiles_partial_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this access profile. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedAccessProfileRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedAccessProfileRequest"];
        "multipart/form-data": components["schemas"]["PatchedAccessProfileRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["AccessProfile"];
        };
      };
    };
  };
  api_users_permissions_list: {
    parameters: {
      query?: {
        access_profile?: number;
        /** @description * `VIEW` - View
         *     * `CREATE` - Create
         *     * `EDIT` - Edit
         *     * `DELETE` - Delete
         *     * `APPROVE` - Approve
         *     * `ASSIGN` - Assign
         *     * `EXPORT` - Export
         *     * `IMPORT` - Import
         *     * `COMMENT` - Comment */
        action?: "APPROVE" | "ASSIGN" | "COMMENT" | "CREATE" | "DELETE" | "EDIT" | "EXPORT" | "IMPORT" | "VIEW";
        /** @description * `PROJECTS` - Projects
         *     * `TASKS` - Tasks
         *     * `TEAMS` - Teams
         *     * `RESOURCES` - Resources
         *     * `COMMUNICATIONS` - Communications
         *     * `RISKS` - Risks
         *     * `COSTS` - Costs
         *     * `DOCUMENTS` - Documents
         *     * `REPORTS` - Reports
         *     * `USERS` - Users
         *     * `SETTINGS` - Settings
         *     * `DASHBOARD` - Dashboard
         *     * `NOTIFICATIONS` - Notifications
         *     * `APPROVALS` - Approvals */
        module?: "APPROVALS" | "COMMUNICATIONS" | "COSTS" | "DASHBOARD" | "DOCUMENTS" | "NOTIFICATIONS" | "PROJECTS" | "REPORTS" | "RESOURCES" | "RISKS" | "SETTINGS" | "TASKS" | "TEAMS" | "USERS";
        /** @description Which field to use when ordering the results. */
        ordering?: string;
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description A search term. */
        search?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedPermissionList"];
        };
      };
    };
  };
  api_users_permissions_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PermissionRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PermissionRequest"];
        "multipart/form-data": components["schemas"]["PermissionRequest"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Permission"];
        };
      };
    };
  };
  api_users_permissions_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this permission. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Permission"];
        };
      };
    };
  };
  api_users_permissions_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this permission. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PermissionRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PermissionRequest"];
        "multipart/form-data": components["schemas"]["PermissionRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Permission"];
        };
      };
    };
  };
  api_users_permissions_destroy: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this permission. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_users_permissions_partial_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this permission. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedPermissionRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedPermissionRequest"];
        "multipart/form-data": components["schemas"]["PatchedPermissionRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Permission"];
        };
      };
    };
  };
  api_users_profiles_list: {
    parameters: {
      query?: {
        /** @description Which field to use when ordering the results. */
        ordering?: string;
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description A search term. */
        search?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedUserProfileList"];
        };
      };
    };
  };
  api_users_profiles_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["UserProfileRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["UserProfileRequest"];
        "multipart/form-data": components["schemas"]["UserProfileRequest"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UserProfile"];
        };
      };
    };
  };
  api_users_profiles_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UserProfile"];
        };
      };
    };
  };
  api_users_profiles_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["UserProfileRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["UserProfileRequest"];
        "multipart/form-data": components["schemas"]["UserProfileRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UserProfile"];
        };
      };
    };
  };
  api_users_profiles_destroy: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_users_profiles_partial_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedUserProfileRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedUserProfileRequest"];
        "multipart/form-data": components["schemas"]["PatchedUserProfileRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UserProfile"];
        };
      };
    };
  };
  api_users_token_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CustomTokenObtainPairRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["CustomTokenObtainPairRequest"];
        "multipart/form-data": components["schemas"]["CustomTokenObtainPairRequest"];
      };
    };
    responses: {
      /** @description No response body */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_users_token_refresh_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TokenRefreshRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["TokenRefreshRequest"];
        "multipart/form-data": components["schemas"]["TokenRefreshRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["TokenRefresh"];
        };
      };
    };
  };
  api_users_users_list: {
    parameters: {
      query?: {
        /** @description Which field to use when ordering the results. */
        ordering?: string;
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description A search term. */
        search?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedUserList"];
        };
      };
    };
  };
  api_users_users_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserCreateRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["UserCreateRequest"];
        "multipart/form-data": components["schemas"]["UserCreateRequest"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UserCreate"];
        };
      };
    };
  };
  api_users_users_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this user. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
  api_users_users_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this user. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["UserRequest"];
        "multipart/form-data": components["schemas"]["UserRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
  api_users_users_destroy: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this user. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  api_users_users_partial_update: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this user. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedUserRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedUserRequest"];
        "multipart/form-data": components["schemas"]["PatchedUserRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
  api_users_users_activate_create: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this user. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["UserRequest"];
        "multipart/form-data": components["schemas"]["UserRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
  api_users_users_deactivate_create: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this user. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["UserRequest"];
        "multipart/form-data": components["schemas"]["UserRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
  api_users_users_reset_password_create: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this user. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["UserRequest"];
        "multipart/form-data": components["schemas"]["UserRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
  api_users_users_unlock_create: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this user. */
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["UserRequest"];
        "multipart/form-data": components["schemas"]["UserRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
  api_users_users_change_password_create: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["UserRequest"];
        "multipart/form-data": components["schemas"]["UserRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
  api_users_users_me_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
  api_users_users_permissions_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
}
