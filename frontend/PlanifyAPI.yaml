openapi: 3.0.3
info:
  title: Planify API
  version: 1.0.0
  description: API para o sistema Planify - Gerenciamento de Projetos
paths:
  /api/auth/access-profiles/:
    get:
      operationId: api_auth_access_profiles_list
      description: ViewSet para gerenciamento de perfis de acesso.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAccessProfileList'
          description: ''
    post:
      operationId: api_auth_access_profiles_create
      description: ViewSet para gerenciamento de perfis de acesso.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccessProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccessProfileRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessProfile'
          description: ''
  /api/auth/access-profiles/{id}/:
    get:
      operationId: api_auth_access_profiles_retrieve
      description: ViewSet para gerenciamento de perfis de acesso.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this access profile.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessProfile'
          description: ''
    put:
      operationId: api_auth_access_profiles_update
      description: ViewSet para gerenciamento de perfis de acesso.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this access profile.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccessProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccessProfileRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessProfile'
          description: ''
    patch:
      operationId: api_auth_access_profiles_partial_update
      description: ViewSet para gerenciamento de perfis de acesso.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this access profile.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAccessProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAccessProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAccessProfileRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessProfile'
          description: ''
    delete:
      operationId: api_auth_access_profiles_destroy
      description: ViewSet para gerenciamento de perfis de acesso.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this access profile.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '204':
          description: No response body
  /api/auth/permissions/:
    get:
      operationId: api_auth_permissions_list
      description: ViewSet para gerenciamento de permissões.
      parameters:
      - in: query
        name: access_profile
        schema:
          type: integer
      - in: query
        name: action
        schema:
          type: string
          enum:
          - APPROVE
          - ASSIGN
          - COMMENT
          - CREATE
          - DELETE
          - EDIT
          - EXPORT
          - IMPORT
          - VIEW
        description: |-
          * `VIEW` - View
          * `CREATE` - Create
          * `EDIT` - Edit
          * `DELETE` - Delete
          * `APPROVE` - Approve
          * `ASSIGN` - Assign
          * `EXPORT` - Export
          * `IMPORT` - Import
          * `COMMENT` - Comment
      - in: query
        name: module
        schema:
          type: string
          enum:
          - APPROVALS
          - COMMUNICATIONS
          - COSTS
          - DASHBOARD
          - DOCUMENTS
          - NOTIFICATIONS
          - PROJECTS
          - REPORTS
          - RESOURCES
          - RISKS
          - SETTINGS
          - TASKS
          - TEAMS
          - USERS
        description: |-
          * `PROJECTS` - Projects
          * `TASKS` - Tasks
          * `TEAMS` - Teams
          * `RESOURCES` - Resources
          * `COMMUNICATIONS` - Communications
          * `RISKS` - Risks
          * `COSTS` - Costs
          * `DOCUMENTS` - Documents
          * `REPORTS` - Reports
          * `USERS` - Users
          * `SETTINGS` - Settings
          * `DASHBOARD` - Dashboard
          * `NOTIFICATIONS` - Notifications
          * `APPROVALS` - Approvals
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPermissionList'
          description: ''
    post:
      operationId: api_auth_permissions_create
      description: ViewSet para gerenciamento de permissões.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PermissionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PermissionRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
          description: ''
  /api/auth/permissions/{id}/:
    get:
      operationId: api_auth_permissions_retrieve
      description: ViewSet para gerenciamento de permissões.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this permission.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
          description: ''
    put:
      operationId: api_auth_permissions_update
      description: ViewSet para gerenciamento de permissões.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this permission.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PermissionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PermissionRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
          description: ''
    patch:
      operationId: api_auth_permissions_partial_update
      description: ViewSet para gerenciamento de permissões.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this permission.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPermissionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPermissionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPermissionRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
          description: ''
    delete:
      operationId: api_auth_permissions_destroy
      description: ViewSet para gerenciamento de permissões.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this permission.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '204':
          description: No response body
  /api/auth/profiles/:
    get:
      operationId: api_auth_profiles_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserProfileList'
          description: ''
    post:
      operationId: api_auth_profiles_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
  /api/auth/profiles/{id}/:
    get:
      operationId: api_auth_profiles_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    put:
      operationId: api_auth_profiles_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    patch:
      operationId: api_auth_profiles_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    delete:
      operationId: api_auth_profiles_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '204':
          description: No response body
  /api/auth/token/:
    post:
      operationId: api_auth_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPairRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPairRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPairRequest'
        required: true
      security:
      - Bearer: []
      responses:
        '200':
          description: No response body
  /api/auth/token/refresh/:
    post:
      operationId: api_auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      security:
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/auth/users/:
    get:
      operationId: api_auth_users_list
      description: ViewSet para gerenciamento de usuários.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: api_auth_users_create
      description: ViewSet para gerenciamento de usuários.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
  /api/auth/users/{id}/:
    get:
      operationId: api_auth_users_retrieve
      description: ViewSet para gerenciamento de usuários.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_auth_users_update
      description: ViewSet para gerenciamento de usuários.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_auth_users_partial_update
      description: ViewSet para gerenciamento de usuários.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_auth_users_destroy
      description: ViewSet para gerenciamento de usuários.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '204':
          description: No response body
  /api/auth/users/{id}/activate/:
    post:
      operationId: api_auth_users_activate_create
      description: Ativa um usuário.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/auth/users/{id}/deactivate/:
    post:
      operationId: api_auth_users_deactivate_create
      description: Desativa um usuário.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/auth/users/{id}/reset_password/:
    post:
      operationId: api_auth_users_reset_password_create_2
      description: Redefine a senha do usuário para uma senha temporária e envia por
        e-mail.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/auth/users/{id}/unlock/:
    post:
      operationId: api_auth_users_unlock_create
      description: Desbloqueia um usuário após tentativas de login malsucedidas.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/auth/users/activation/:
    post:
      operationId: api_auth_users_activation_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActivationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActivationRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
  /api/auth/users/change_password/:
    post:
      operationId: api_auth_users_change_password_create
      description: Altera a senha do usuário autenticado.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/auth/users/me/:
    get:
      operationId: api_auth_users_me_retrieve
      description: Retorna as informações do usuário autenticado.
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_auth_users_me_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_auth_users_me_partial_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_auth_users_me_destroy
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '204':
          description: No response body
  /api/auth/users/permissions/:
    get:
      operationId: api_auth_users_permissions_retrieve
      description: Retorna as permissões do usuário autenticado.
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/auth/users/resend_activation/:
    post:
      operationId: api_auth_users_resend_activation_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPassword'
          description: ''
  /api/auth/users/reset_password/:
    post:
      operationId: api_auth_users_reset_password_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPassword'
          description: ''
  /api/auth/users/reset_password_confirm/:
    post:
      operationId: api_auth_users_reset_password_confirm_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetNewPasswordRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetNewPasswordRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetNewPasswordRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetNewPassword'
          description: ''
  /api/auth/users/reset_username/:
    post:
      operationId: api_auth_users_reset_username_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/auth/users/reset_username_confirm/:
    post:
      operationId: api_auth_users_reset_username_confirm_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirmRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirmRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirmRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
  /api/auth/users/set_password/:
    post:
      operationId: api_auth_users_set_password_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPasswordRetypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPasswordRetypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPasswordRetypeRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPasswordRetype'
          description: ''
  /api/auth/users/set_username/:
    post:
      operationId: api_auth_users_set_username_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsernameRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsernameRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsernameRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
  /api/communications/configuracoes/:
    get:
      operationId: api_communications_configuracoes_list
      description: |-
        ViewSet para gerenciamento de configurações de notificações.

        Permite criar, listar, atualizar e excluir configurações de notificações do usuário.
        Cada usuário pode ter suas próprias configurações para diferentes tipos de notificações.

        Endpoints:
        - GET /configuracoes-notificacao/ - Lista configurações do usuário
        - POST /configuracoes-notificacao/ - Cria uma nova configuração
        - GET /configuracoes-notificacao/{id}/ - Obtém detalhes de uma configuração
        - PUT/PATCH /configuracoes-notificacao/{id}/ - Atualiza uma configuração
        - DELETE /configuracoes-notificacao/{id}/ - Remove uma configuração
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedConfiguracaoNotificacaoList'
          description: ''
    post:
      operationId: api_communications_configuracoes_create
      description: |-
        ViewSet para gerenciamento de configurações de notificações.

        Permite criar, listar, atualizar e excluir configurações de notificações do usuário.
        Cada usuário pode ter suas próprias configurações para diferentes tipos de notificações.

        Endpoints:
        - GET /configuracoes-notificacao/ - Lista configurações do usuário
        - POST /configuracoes-notificacao/ - Cria uma nova configuração
        - GET /configuracoes-notificacao/{id}/ - Obtém detalhes de uma configuração
        - PUT/PATCH /configuracoes-notificacao/{id}/ - Atualiza uma configuração
        - DELETE /configuracoes-notificacao/{id}/ - Remove uma configuração
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfiguracaoNotificacaoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfiguracaoNotificacaoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfiguracaoNotificacaoRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfiguracaoNotificacao'
          description: ''
  /api/communications/configuracoes/{id}/:
    get:
      operationId: api_communications_configuracoes_retrieve
      description: |-
        ViewSet para gerenciamento de configurações de notificações.

        Permite criar, listar, atualizar e excluir configurações de notificações do usuário.
        Cada usuário pode ter suas próprias configurações para diferentes tipos de notificações.

        Endpoints:
        - GET /configuracoes-notificacao/ - Lista configurações do usuário
        - POST /configuracoes-notificacao/ - Cria uma nova configuração
        - GET /configuracoes-notificacao/{id}/ - Obtém detalhes de uma configuração
        - PUT/PATCH /configuracoes-notificacao/{id}/ - Atualiza uma configuração
        - DELETE /configuracoes-notificacao/{id}/ - Remove uma configuração
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Configuração de Notificação.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfiguracaoNotificacao'
          description: ''
    put:
      operationId: api_communications_configuracoes_update
      description: |-
        ViewSet para gerenciamento de configurações de notificações.

        Permite criar, listar, atualizar e excluir configurações de notificações do usuário.
        Cada usuário pode ter suas próprias configurações para diferentes tipos de notificações.

        Endpoints:
        - GET /configuracoes-notificacao/ - Lista configurações do usuário
        - POST /configuracoes-notificacao/ - Cria uma nova configuração
        - GET /configuracoes-notificacao/{id}/ - Obtém detalhes de uma configuração
        - PUT/PATCH /configuracoes-notificacao/{id}/ - Atualiza uma configuração
        - DELETE /configuracoes-notificacao/{id}/ - Remove uma configuração
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Configuração de Notificação.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfiguracaoNotificacaoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfiguracaoNotificacaoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfiguracaoNotificacaoRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfiguracaoNotificacao'
          description: ''
    patch:
      operationId: api_communications_configuracoes_partial_update
      description: |-
        ViewSet para gerenciamento de configurações de notificações.

        Permite criar, listar, atualizar e excluir configurações de notificações do usuário.
        Cada usuário pode ter suas próprias configurações para diferentes tipos de notificações.

        Endpoints:
        - GET /configuracoes-notificacao/ - Lista configurações do usuário
        - POST /configuracoes-notificacao/ - Cria uma nova configuração
        - GET /configuracoes-notificacao/{id}/ - Obtém detalhes de uma configuração
        - PUT/PATCH /configuracoes-notificacao/{id}/ - Atualiza uma configuração
        - DELETE /configuracoes-notificacao/{id}/ - Remove uma configuração
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Configuração de Notificação.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedConfiguracaoNotificacaoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedConfiguracaoNotificacaoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedConfiguracaoNotificacaoRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfiguracaoNotificacao'
          description: ''
    delete:
      operationId: api_communications_configuracoes_destroy
      description: |-
        ViewSet para gerenciamento de configurações de notificações.

        Permite criar, listar, atualizar e excluir configurações de notificações do usuário.
        Cada usuário pode ter suas próprias configurações para diferentes tipos de notificações.

        Endpoints:
        - GET /configuracoes-notificacao/ - Lista configurações do usuário
        - POST /configuracoes-notificacao/ - Cria uma nova configuração
        - GET /configuracoes-notificacao/{id}/ - Obtém detalhes de uma configuração
        - PUT/PATCH /configuracoes-notificacao/{id}/ - Atualiza uma configuração
        - DELETE /configuracoes-notificacao/{id}/ - Remove uma configuração
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Configuração de Notificação.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '204':
          description: No response body
  /api/communications/configuracoes/minha_configuracao/:
    get:
      operationId: api_communications_configuracoes_minha_configuracao_retrieve
      description: Retorna a configuração do usuário atual ou cria uma padrão se não
        existir.
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfiguracaoNotificacao'
          description: ''
  /api/communications/mensagens/:
    get:
      operationId: api_communications_mensagens_list
      description: |-
        ViewSet para gerenciamento de mensagens de chat.

        Permite criar, listar, atualizar e excluir mensagens de chat em projetos.
        Inclui funcionalidades para marcar mensagens como lidas e filtrar mensagens não lidas.

        Endpoints:
        - GET /chat-mensagens/ - Lista todas as mensagens (com filtros)
        - POST /chat-mensagens/ - Cria uma nova mensagem
        - GET /chat-mensagens/{id}/ - Obtém detalhes de uma mensagem
        - PUT/PATCH /chat-mensagens/{id}/ - Atualiza uma mensagem
        - DELETE /chat-mensagens/{id}/ - Remove uma mensagem
        - POST /chat-mensagens/{id}/marcar_como_lida/ - Marca uma mensagem como lida
        - GET /chat-mensagens/mensagens_nao_lidas/ - Lista mensagens não lidas
      parameters:
      - in: query
        name: autor
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: projeto
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChatMensagemList'
          description: ''
    post:
      operationId: api_communications_mensagens_create
      description: |-
        ViewSet para gerenciamento de mensagens de chat.

        Permite criar, listar, atualizar e excluir mensagens de chat em projetos.
        Inclui funcionalidades para marcar mensagens como lidas e filtrar mensagens não lidas.

        Endpoints:
        - GET /chat-mensagens/ - Lista todas as mensagens (com filtros)
        - POST /chat-mensagens/ - Cria uma nova mensagem
        - GET /chat-mensagens/{id}/ - Obtém detalhes de uma mensagem
        - PUT/PATCH /chat-mensagens/{id}/ - Atualiza uma mensagem
        - DELETE /chat-mensagens/{id}/ - Remove uma mensagem
        - POST /chat-mensagens/{id}/marcar_como_lida/ - Marca uma mensagem como lida
        - GET /chat-mensagens/mensagens_nao_lidas/ - Lista mensagens não lidas
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatMensagemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatMensagemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChatMensagemRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMensagem'
          description: ''
  /api/communications/mensagens/{id}/:
    get:
      operationId: api_communications_mensagens_retrieve
      description: |-
        ViewSet para gerenciamento de mensagens de chat.

        Permite criar, listar, atualizar e excluir mensagens de chat em projetos.
        Inclui funcionalidades para marcar mensagens como lidas e filtrar mensagens não lidas.

        Endpoints:
        - GET /chat-mensagens/ - Lista todas as mensagens (com filtros)
        - POST /chat-mensagens/ - Cria uma nova mensagem
        - GET /chat-mensagens/{id}/ - Obtém detalhes de uma mensagem
        - PUT/PATCH /chat-mensagens/{id}/ - Atualiza uma mensagem
        - DELETE /chat-mensagens/{id}/ - Remove uma mensagem
        - POST /chat-mensagens/{id}/marcar_como_lida/ - Marca uma mensagem como lida
        - GET /chat-mensagens/mensagens_nao_lidas/ - Lista mensagens não lidas
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Mensagem de Chat.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMensagem'
          description: ''
    put:
      operationId: api_communications_mensagens_update
      description: |-
        ViewSet para gerenciamento de mensagens de chat.

        Permite criar, listar, atualizar e excluir mensagens de chat em projetos.
        Inclui funcionalidades para marcar mensagens como lidas e filtrar mensagens não lidas.

        Endpoints:
        - GET /chat-mensagens/ - Lista todas as mensagens (com filtros)
        - POST /chat-mensagens/ - Cria uma nova mensagem
        - GET /chat-mensagens/{id}/ - Obtém detalhes de uma mensagem
        - PUT/PATCH /chat-mensagens/{id}/ - Atualiza uma mensagem
        - DELETE /chat-mensagens/{id}/ - Remove uma mensagem
        - POST /chat-mensagens/{id}/marcar_como_lida/ - Marca uma mensagem como lida
        - GET /chat-mensagens/mensagens_nao_lidas/ - Lista mensagens não lidas
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Mensagem de Chat.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatMensagemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatMensagemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChatMensagemRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMensagem'
          description: ''
    patch:
      operationId: api_communications_mensagens_partial_update
      description: |-
        ViewSet para gerenciamento de mensagens de chat.

        Permite criar, listar, atualizar e excluir mensagens de chat em projetos.
        Inclui funcionalidades para marcar mensagens como lidas e filtrar mensagens não lidas.

        Endpoints:
        - GET /chat-mensagens/ - Lista todas as mensagens (com filtros)
        - POST /chat-mensagens/ - Cria uma nova mensagem
        - GET /chat-mensagens/{id}/ - Obtém detalhes de uma mensagem
        - PUT/PATCH /chat-mensagens/{id}/ - Atualiza uma mensagem
        - DELETE /chat-mensagens/{id}/ - Remove uma mensagem
        - POST /chat-mensagens/{id}/marcar_como_lida/ - Marca uma mensagem como lida
        - GET /chat-mensagens/mensagens_nao_lidas/ - Lista mensagens não lidas
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Mensagem de Chat.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChatMensagemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChatMensagemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChatMensagemRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMensagem'
          description: ''
    delete:
      operationId: api_communications_mensagens_destroy
      description: |-
        ViewSet para gerenciamento de mensagens de chat.

        Permite criar, listar, atualizar e excluir mensagens de chat em projetos.
        Inclui funcionalidades para marcar mensagens como lidas e filtrar mensagens não lidas.

        Endpoints:
        - GET /chat-mensagens/ - Lista todas as mensagens (com filtros)
        - POST /chat-mensagens/ - Cria uma nova mensagem
        - GET /chat-mensagens/{id}/ - Obtém detalhes de uma mensagem
        - PUT/PATCH /chat-mensagens/{id}/ - Atualiza uma mensagem
        - DELETE /chat-mensagens/{id}/ - Remove uma mensagem
        - POST /chat-mensagens/{id}/marcar_como_lida/ - Marca uma mensagem como lida
        - GET /chat-mensagens/mensagens_nao_lidas/ - Lista mensagens não lidas
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Mensagem de Chat.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '204':
          description: No response body
  /api/communications/mensagens/{id}/marcar_como_lida/:
    post:
      operationId: api_communications_mensagens_marcar_como_lida_create
      description: |-
        Marca uma mensagem como lida pelo usuário atual.

        Args:
            request: Objeto de requisição
            pk: ID da mensagem a ser marcada como lida

        Returns:
            Response: Detalhes do registro de leitura ou mensagem de status
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Mensagem de Chat.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatMensagemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatMensagemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChatMensagemRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMensagem'
          description: ''
  /api/communications/mensagens/mensagens_nao_lidas/:
    get:
      operationId: api_communications_mensagens_mensagens_nao_lidas_retrieve
      description: |-
        Retorna as mensagens não lidas pelo usuário atual.

        Suporta filtro por projeto através do parâmetro 'projeto' na query string.
        Exclui mensagens enviadas pelo próprio usuário, pois estas não precisam ser lidas.

        Args:
            request: Objeto de requisição

        Returns:
            Response: Lista de mensagens não lidas
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMensagem'
          description: ''
  /api/communications/notificacoes/:
    get:
      operationId: api_communications_notificacoes_list
      description: |-
        ViewSet para gerenciamento de notificações.

        Permite criar, listar, atualizar e excluir notificações do sistema.
        Inclui funcionalidades para marcar notificações como lidas e filtrar notificações não lidas.

        Endpoints:
        - GET /notificacoes/ - Lista notificações do usuário
        - GET /notificacoes/{id}/ - Obtém detalhes de uma notificação
        - POST /notificacoes/{id}/marcar_como_lida/ - Marca uma notificação como lida
        - POST /notificacoes/marcar_todas_como_lidas/ - Marca todas as notificações como lidas
        - GET /notificacoes/nao_lidas/ - Lista notificações não lidas
      parameters:
      - in: query
        name: lida
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: prioridade
        schema:
          type: string
          enum:
          - ALTA
          - BAIXA
          - MEDIA
        description: |-
          Nível de prioridade da notificação

          * `BAIXA` - Baixa
          * `MEDIA` - Média
          * `ALTA` - Alta
      - in: query
        name: projeto
        schema:
          type: integer
      - in: query
        name: tarefa
        schema:
          type: integer
      - in: query
        name: tipo
        schema:
          type: string
          enum:
          - DOCUMENTO
          - EQUIPE
          - PROJETO
          - RISCO
          - SISTEMA
          - TAREFA
        description: |-
          Tipo de objeto relacionado à notificação

          * `TAREFA` - Tarefa
          * `PROJETO` - Projeto
          * `EQUIPE` - Equipe
          * `RISCO` - Risco
          * `DOCUMENTO` - Documento
          * `SISTEMA` - Sistema
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificacaoList'
          description: ''
    post:
      operationId: api_communications_notificacoes_create
      description: |-
        ViewSet para gerenciamento de notificações.

        Permite criar, listar, atualizar e excluir notificações do sistema.
        Inclui funcionalidades para marcar notificações como lidas e filtrar notificações não lidas.

        Endpoints:
        - GET /notificacoes/ - Lista notificações do usuário
        - GET /notificacoes/{id}/ - Obtém detalhes de uma notificação
        - POST /notificacoes/{id}/marcar_como_lida/ - Marca uma notificação como lida
        - POST /notificacoes/marcar_todas_como_lidas/ - Marca todas as notificações como lidas
        - GET /notificacoes/nao_lidas/ - Lista notificações não lidas
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificacaoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificacaoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificacaoRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notificacao'
          description: ''
  /api/communications/notificacoes/{id}/:
    get:
      operationId: api_communications_notificacoes_retrieve
      description: |-
        ViewSet para gerenciamento de notificações.

        Permite criar, listar, atualizar e excluir notificações do sistema.
        Inclui funcionalidades para marcar notificações como lidas e filtrar notificações não lidas.

        Endpoints:
        - GET /notificacoes/ - Lista notificações do usuário
        - GET /notificacoes/{id}/ - Obtém detalhes de uma notificação
        - POST /notificacoes/{id}/marcar_como_lida/ - Marca uma notificação como lida
        - POST /notificacoes/marcar_todas_como_lidas/ - Marca todas as notificações como lidas
        - GET /notificacoes/nao_lidas/ - Lista notificações não lidas
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Notificação.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notificacao'
          description: ''
    put:
      operationId: api_communications_notificacoes_update
      description: |-
        ViewSet para gerenciamento de notificações.

        Permite criar, listar, atualizar e excluir notificações do sistema.
        Inclui funcionalidades para marcar notificações como lidas e filtrar notificações não lidas.

        Endpoints:
        - GET /notificacoes/ - Lista notificações do usuário
        - GET /notificacoes/{id}/ - Obtém detalhes de uma notificação
        - POST /notificacoes/{id}/marcar_como_lida/ - Marca uma notificação como lida
        - POST /notificacoes/marcar_todas_como_lidas/ - Marca todas as notificações como lidas
        - GET /notificacoes/nao_lidas/ - Lista notificações não lidas
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Notificação.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificacaoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificacaoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificacaoRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notificacao'
          description: ''
    patch:
      operationId: api_communications_notificacoes_partial_update
      description: |-
        ViewSet para gerenciamento de notificações.

        Permite criar, listar, atualizar e excluir notificações do sistema.
        Inclui funcionalidades para marcar notificações como lidas e filtrar notificações não lidas.

        Endpoints:
        - GET /notificacoes/ - Lista notificações do usuário
        - GET /notificacoes/{id}/ - Obtém detalhes de uma notificação
        - POST /notificacoes/{id}/marcar_como_lida/ - Marca uma notificação como lida
        - POST /notificacoes/marcar_todas_como_lidas/ - Marca todas as notificações como lidas
        - GET /notificacoes/nao_lidas/ - Lista notificações não lidas
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Notificação.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNotificacaoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNotificacaoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNotificacaoRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notificacao'
          description: ''
    delete:
      operationId: api_communications_notificacoes_destroy
      description: |-
        ViewSet para gerenciamento de notificações.

        Permite criar, listar, atualizar e excluir notificações do sistema.
        Inclui funcionalidades para marcar notificações como lidas e filtrar notificações não lidas.

        Endpoints:
        - GET /notificacoes/ - Lista notificações do usuário
        - GET /notificacoes/{id}/ - Obtém detalhes de uma notificação
        - POST /notificacoes/{id}/marcar_como_lida/ - Marca uma notificação como lida
        - POST /notificacoes/marcar_todas_como_lidas/ - Marca todas as notificações como lidas
        - GET /notificacoes/nao_lidas/ - Lista notificações não lidas
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Notificação.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '204':
          description: No response body
  /api/communications/notificacoes/{id}/marcar_como_lida/:
    post:
      operationId: api_communications_notificacoes_marcar_como_lida_create
      description: |-
        Marca uma notificação como lida.

        Define o campo 'lida' como True e registra a data/hora em 'lida_em'.

        Args:
            request: Objeto de requisição
            pk: ID da notificação a ser marcada como lida

        Returns:
            Response: Detalhes da notificação atualizada ou mensagem de status
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Notificação.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificacaoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificacaoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificacaoRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notificacao'
          description: ''
  /api/communications/notificacoes/marcar_todas_como_lidas/:
    post:
      operationId: api_communications_notificacoes_marcar_todas_como_lidas_create
      description: |-
        Marca todas as notificações não lidas do usuário como lidas.

        Atualiza em massa todas as notificações não lidas do usuário atual,
        definindo 'lida' como True e 'lida_em' como a data/hora atual.

        Args:
            request: Objeto de requisição

        Returns:
            Response: Mensagem de confirmação com o número de notificações atualizadas
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificacaoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificacaoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificacaoRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notificacao'
          description: ''
  /api/communications/notificacoes/nao_lidas/:
    get:
      operationId: api_communications_notificacoes_nao_lidas_retrieve
      description: |-
        Retorna apenas as notificações não lidas do usuário.

        Suporta filtros adicionais por tipo e prioridade através de parâmetros na query string.

        Args:
            request: Objeto de requisição

        Returns:
            Response: Lista de notificações não lidas filtradas
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notificacao'
          description: ''
  /api/costs/alertas/:
    get:
      operationId: api_costs_alertas_list
      description: ViewSet para gerenciamento de alertas de orçamento.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: projeto
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
          enum:
          - ATIVO
          - IGNORADO
          - RESOLVIDO
        description: |-
          * `ATIVO` - Ativo
          * `RESOLVIDO` - Resolvido
          * `IGNORADO` - Ignorado
      - in: query
        name: tarefa
        schema:
          type: integer
      - in: query
        name: tipo
        schema:
          type: string
          enum:
          - PROJETO
          - TAREFA
        description: |-
          * `PROJETO` - Projeto
          * `TAREFA` - Tarefa
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAlertaList'
          description: ''
    post:
      operationId: api_costs_alertas_create
      description: ViewSet para gerenciamento de alertas de orçamento.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AlertaRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AlertaRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alerta'
          description: ''
  /api/costs/alertas/{id}/:
    get:
      operationId: api_costs_alertas_retrieve
      description: ViewSet para gerenciamento de alertas de orçamento.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Alerta de Orçamento.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alerta'
          description: ''
    put:
      operationId: api_costs_alertas_update
      description: ViewSet para gerenciamento de alertas de orçamento.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Alerta de Orçamento.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AlertaRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AlertaRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alerta'
          description: ''
    patch:
      operationId: api_costs_alertas_partial_update
      description: ViewSet para gerenciamento de alertas de orçamento.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Alerta de Orçamento.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAlertaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAlertaRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAlertaRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alerta'
          description: ''
    delete:
      operationId: api_costs_alertas_destroy
      description: ViewSet para gerenciamento de alertas de orçamento.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Alerta de Orçamento.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '204':
          description: No response body
  /api/costs/alertas/{id}/ignorar/:
    post:
      operationId: api_costs_alertas_ignorar_create
      description: |-
        Marca um alerta como ignorado.
        Opcionalmente, pode incluir uma justificativa para ignorar o alerta.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Alerta de Orçamento.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AlertaRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AlertaRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alerta'
          description: ''
  /api/costs/alertas/{id}/resolver/:
    post:
      operationId: api_costs_alertas_resolver_create
      description: |-
        Marca um alerta como resolvido.
        Opcionalmente, pode incluir uma observação sobre a resolução.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Alerta de Orçamento.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AlertaRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AlertaRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alerta'
          description: ''
  /api/costs/alertas/pendentes/:
    get:
      operationId: api_costs_alertas_pendentes_retrieve
      description: |-
        Retorna apenas os alertas pendentes (status ATIVO).
        Permite filtrar por projeto, tarefa e tipo.
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alerta'
          description: ''
  /api/costs/categorias/:
    get:
      operationId: api_costs_categorias_list
      description: ViewSet para gerenciamento de categorias de custos.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCategoriaList'
          description: ''
    post:
      operationId: api_costs_categorias_create
      description: ViewSet para gerenciamento de categorias de custos.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoriaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CategoriaRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CategoriaRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Categoria'
          description: ''
  /api/costs/categorias/{id}/:
    get:
      operationId: api_costs_categorias_retrieve
      description: ViewSet para gerenciamento de categorias de custos.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Categoria.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Categoria'
          description: ''
    put:
      operationId: api_costs_categorias_update
      description: ViewSet para gerenciamento de categorias de custos.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Categoria.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoriaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CategoriaRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CategoriaRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Categoria'
          description: ''
    patch:
      operationId: api_costs_categorias_partial_update
      description: ViewSet para gerenciamento de categorias de custos.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Categoria.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategoriaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategoriaRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategoriaRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Categoria'
          description: ''
    delete:
      operationId: api_costs_categorias_destroy
      description: ViewSet para gerenciamento de categorias de custos.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Categoria.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '204':
          description: No response body
  /api/costs/custos/:
    get:
      operationId: api_costs_custos_list
      description: |-
        ViewSet para gerenciamento de custos.
        Permite criar, listar, atualizar e excluir custos.
      parameters:
      - in: query
        name: categoria
        schema:
          type: integer
      - in: query
        name: data
        schema:
          type: string
          format: date
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: projeto
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: tarefa
        schema:
          type: integer
      - in: query
        name: tipo
        schema:
          type: string
          enum:
          - FIXO
          - RECORRENTE
          - VARIAVEL
        description: |-
          * `FIXO` - Custo Fixo
          * `VARIAVEL` - Custo Variável
          * `RECORRENTE` - Custo Recorrente
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCustoListList'
          description: ''
    post:
      operationId: api_costs_custos_create
      description: |-
        ViewSet para gerenciamento de custos.
        Permite criar, listar, atualizar e excluir custos.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustoRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Custo'
          description: ''
  /api/costs/custos/{id}/:
    get:
      operationId: api_costs_custos_retrieve
      description: |-
        ViewSet para gerenciamento de custos.
        Permite criar, listar, atualizar e excluir custos.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Custo.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Custo'
          description: ''
    put:
      operationId: api_costs_custos_update
      description: |-
        ViewSet para gerenciamento de custos.
        Permite criar, listar, atualizar e excluir custos.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Custo.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustoRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Custo'
          description: ''
    patch:
      operationId: api_costs_custos_partial_update
      description: |-
        ViewSet para gerenciamento de custos.
        Permite criar, listar, atualizar e excluir custos.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Custo.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustoRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Custo'
          description: ''
    delete:
      operationId: api_costs_custos_destroy
      description: |-
        ViewSet para gerenciamento de custos.
        Permite criar, listar, atualizar e excluir custos.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Custo.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '204':
          description: No response body
  /api/costs/custos/dashboard/:
    get:
      operationId: api_costs_custos_dashboard_retrieve
      description: |-
        Endpoint para dashboard financeiro: retorna dados resumidos de custos.
        Inclui total gasto, gasto mensal, top categorias e alertas recentes.
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Custo'
          description: ''
  /api/costs/custos/relatorio_mensal/:
    get:
      operationId: api_costs_custos_relatorio_mensal_retrieve
      description: |-
        Gera um relatório de gastos mensais para análise de tendências.
        Agrupa os custos por mês e retorna série temporal.
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Custo'
          description: ''
  /api/costs/custos/relatorio_por_categoria/:
    get:
      operationId: api_costs_custos_relatorio_por_categoria_retrieve
      description: |-
        Gera um relatório de gastos por categoria.
        Utiliza anotações para calcular percentuais diretamente no banco de dados.
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Custo'
          description: ''
  /api/costs/custos/relatorio_por_projeto/:
    get:
      operationId: api_costs_custos_relatorio_por_projeto_retrieve
      description: Gera um relatório de gastos por projeto.
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Custo'
          description: ''
  /api/costs/orcamentos-projeto/:
    get:
      operationId: api_costs_orcamentos_projeto_list
      description: |-
        ViewSet para gerenciamento de orçamentos de projetos.
        Inclui anotações para calcular campos derivados diretamente no banco de dados.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: projeto
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrcamentoProjetoList'
          description: ''
    post:
      operationId: api_costs_orcamentos_projeto_create
      description: |-
        ViewSet para gerenciamento de orçamentos de projetos.
        Inclui anotações para calcular campos derivados diretamente no banco de dados.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrcamentoProjetoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrcamentoProjetoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrcamentoProjetoRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrcamentoProjeto'
          description: ''
  /api/costs/orcamentos-projeto/{id}/:
    get:
      operationId: api_costs_orcamentos_projeto_retrieve
      description: |-
        ViewSet para gerenciamento de orçamentos de projetos.
        Inclui anotações para calcular campos derivados diretamente no banco de dados.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Orçamento de Projeto.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrcamentoProjeto'
          description: ''
    put:
      operationId: api_costs_orcamentos_projeto_update
      description: |-
        ViewSet para gerenciamento de orçamentos de projetos.
        Inclui anotações para calcular campos derivados diretamente no banco de dados.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Orçamento de Projeto.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrcamentoProjetoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrcamentoProjetoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrcamentoProjetoRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrcamentoProjeto'
          description: ''
    patch:
      operationId: api_costs_orcamentos_projeto_partial_update
      description: |-
        ViewSet para gerenciamento de orçamentos de projetos.
        Inclui anotações para calcular campos derivados diretamente no banco de dados.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Orçamento de Projeto.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrcamentoProjetoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrcamentoProjetoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrcamentoProjetoRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrcamentoProjeto'
          description: ''
    delete:
      operationId: api_costs_orcamentos_projeto_destroy
      description: |-
        ViewSet para gerenciamento de orçamentos de projetos.
        Inclui anotações para calcular campos derivados diretamente no banco de dados.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Orçamento de Projeto.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '204':
          description: No response body
  /api/costs/orcamentos-projeto/{id}/ajustar_orcamento/:
    post:
      operationId: api_costs_orcamentos_projeto_ajustar_orcamento_create
      description: |-
        Permite ajustar o orçamento de um projeto com justificativa.
        Mantém histórico da alteração no campo de observações.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Orçamento de Projeto.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrcamentoProjetoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrcamentoProjetoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrcamentoProjetoRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrcamentoProjeto'
          description: ''
  /api/costs/orcamentos-projeto/projetos_sem_orcamento/:
    get:
      operationId: api_costs_orcamentos_projeto_projetos_sem_orcamento_retrieve
      description: Retorna a lista de projetos que ainda não possuem orçamento definido.
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrcamentoProjeto'
          description: ''
  /api/costs/orcamentos-tarefa/:
    get:
      operationId: api_costs_orcamentos_tarefa_list
      description: |-
        ViewSet para gerenciamento de orçamentos de tarefas.
        Inclui anotações para calcular campos derivados diretamente no banco de dados.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: tarefa
        schema:
          type: integer
      - in: query
        name: tarefa__projeto
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrcamentoTarefaList'
          description: ''
    post:
      operationId: api_costs_orcamentos_tarefa_create
      description: |-
        ViewSet para gerenciamento de orçamentos de tarefas.
        Inclui anotações para calcular campos derivados diretamente no banco de dados.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrcamentoTarefaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrcamentoTarefaRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrcamentoTarefaRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrcamentoTarefa'
          description: ''
  /api/costs/orcamentos-tarefa/{id}/:
    get:
      operationId: api_costs_orcamentos_tarefa_retrieve
      description: |-
        ViewSet para gerenciamento de orçamentos de tarefas.
        Inclui anotações para calcular campos derivados diretamente no banco de dados.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Orçamento de Tarefa.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrcamentoTarefa'
          description: ''
    put:
      operationId: api_costs_orcamentos_tarefa_update
      description: |-
        ViewSet para gerenciamento de orçamentos de tarefas.
        Inclui anotações para calcular campos derivados diretamente no banco de dados.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Orçamento de Tarefa.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrcamentoTarefaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrcamentoTarefaRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrcamentoTarefaRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrcamentoTarefa'
          description: ''
    patch:
      operationId: api_costs_orcamentos_tarefa_partial_update
      description: |-
        ViewSet para gerenciamento de orçamentos de tarefas.
        Inclui anotações para calcular campos derivados diretamente no banco de dados.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Orçamento de Tarefa.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrcamentoTarefaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrcamentoTarefaRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrcamentoTarefaRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrcamentoTarefa'
          description: ''
    delete:
      operationId: api_costs_orcamentos_tarefa_destroy
      description: |-
        ViewSet para gerenciamento de orçamentos de tarefas.
        Inclui anotações para calcular campos derivados diretamente no banco de dados.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Orçamento de Tarefa.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '204':
          description: No response body
  /api/costs/orcamentos-tarefa/{id}/ajustar_orcamento/:
    post:
      operationId: api_costs_orcamentos_tarefa_ajustar_orcamento_create
      description: |-
        Permite ajustar o orçamento de uma tarefa com justificativa.
        Mantém histórico da alteração no campo de observações.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Orçamento de Tarefa.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrcamentoTarefaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrcamentoTarefaRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrcamentoTarefaRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrcamentoTarefa'
          description: ''
  /api/costs/orcamentos-tarefa/tarefas_sem_orcamento/:
    get:
      operationId: api_costs_orcamentos_tarefa_tarefas_sem_orcamento_retrieve
      description: Retorna a lista de tarefas que ainda não possuem orçamento definido.
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrcamentoTarefa'
          description: ''
  /api/dashboard/:
    get:
      operationId: visao_geral_dashboard_retrieve
      description: Retorna uma visão geral do sistema, incluindo o número total de
        projetos, tarefas e a distribuição de tarefas por status. Requer autenticação.
      summary: Visão Geral do Dashboard
      tags:
      - Dashboard
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisaoGeralDashboard'
              examples:
                ExemploDeResposta:
                  value:
                    total_projetos: 5
                    total_tarefas: 15
                    tarefas_por_status:
                    - status: Pendente
                      count: 5
                    - status: Em Andamento
                      count: 7
                    - status: Concluída
                      count: 3
                  summary: Exemplo de dados retornados pelo dashboard.
          description: Dados consolidados do dashboard.
  /api/documents/:
    get:
      operationId: api_documents_list
      description: Retorna a lista de todos os documentos com filtros opcionais.
      summary: Listar documentos
      parameters:
      - in: query
        name: enviado_por
        schema:
          type: integer
        description: Filtrar por ID do usuário que enviou
      - in: query
        name: ordering
        schema:
          type: string
        description: 'Campo para ordenação (ex: data_upload, -titulo)'
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: projeto
        schema:
          type: integer
        description: Filtrar por projeto (ID)
      - in: query
        name: search
        schema:
          type: string
        description: Termo de busca para título, descrição ou tipo de arquivo
      - in: query
        name: tarefa
        schema:
          type: integer
        description: Filtrar por tarefa (ID)
      - in: query
        name: texto
        schema:
          type: string
        description: Buscar por texto no título ou descrição
      - in: query
        name: tipo
        schema:
          type: string
          enum:
          - ATA
          - DESIGN
          - MANUAL
          - OUTRO
          - RELATORIO
          - REQUISITO
        description: Filtrar por tipo de documento
      - in: query
        name: tipo_arquivo
        schema:
          type: string
        description: 'Filtrar por tipo MIME do arquivo (ex: application/pdf)'
      tags:
      - Documentos
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDocumentoListList'
          description: Lista de documentos recuperada com sucesso
    post:
      operationId: api_documents_create
      description: Cria um novo documento no sistema.
      summary: Criar documento
      tags:
      - Documentos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentoRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Documento'
              examples:
                ExemploDocumento:
                  value:
                    titulo: Manual do Usuário v1
                    descricao: Manual de instruções para o sistema XYZ.
                    tipo: MANUAL
                    arquivo: upload_de_arquivo.pdf
                    projeto: 1
                    tarefa: 2
                  summary: Exemplo de criação de documento
          description: Documento criado com sucesso
        '400':
          description: Dados inválidos
  /api/documents/{id}/:
    get:
      operationId: api_documents_retrieve
      description: Retorna os detalhes de um documento específico.
      summary: Obter documento
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Documento.
        required: true
      tags:
      - Documentos
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Documento'
          description: Detalhes do documento recuperados com sucesso
        '404':
          description: Documento não encontrado
    put:
      operationId: api_documents_update
      description: Atualiza todos os campos de um documento existente.
      summary: Atualizar documento
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Documento.
        required: true
      tags:
      - Documentos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentoRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Documento'
          description: Documento atualizado com sucesso
        '400':
          description: Dados inválidos
        '404':
          description: Documento não encontrado
    patch:
      operationId: api_documents_partial_update
      description: Atualiza parcialmente um documento existente.
      summary: Atualizar documento parcialmente
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Documento.
        required: true
      tags:
      - Documentos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDocumentoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDocumentoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDocumentoRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Documento'
          description: Documento atualizado parcialmente com sucesso
        '400':
          description: Dados inválidos
        '404':
          description: Documento não encontrado
    delete:
      operationId: api_documents_destroy
      description: Remove um documento do sistema.
      summary: Excluir documento
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Documento.
        required: true
      tags:
      - Documentos
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '204':
          description: Documento excluído com sucesso
        '404':
          description: Documento não encontrado
  /api/documents/{id}/adicionar_comentario/:
    post:
      operationId: api_documents_adicionar_comentario_create
      description: Adiciona um novo comentário a um documento específico.
      summary: Adicionar comentário ao documento
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Documento.
        required: true
      tags:
      - Documentos
      - Comentários
      requestBody:
        content:
          application/json:
            schema:
              example:
                texto: Este documento precisa de revisão na seção 3.
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comentario'
          description: Comentário adicionado com sucesso
        '400':
          description: 'Dados inválidos (ex: texto não fornecido)'
        '404':
          description: Documento não encontrado
  /api/documents/{id}/associar_tarefa/:
    post:
      operationId: api_documents_associar_tarefa_create
      description: 'Associa ou desassocia um documento a uma tarefa específica. Forneça
        ''tarefa_id'' para associar, ou ''tarefa_id: 0'' (ou nulo) para desassociar.'
      summary: Associar documento a uma tarefa
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Documento.
        required: true
      tags:
      - Documentos
      - Tarefas
      requestBody:
        content:
          application/json:
            schema:
              example:
                tarefa_id: 1
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Documento'
          description: Documento associado/desassociado com sucesso
        '400':
          description: 'Dados inválidos (ex: tarefa_id não fornecido)'
        '404':
          description: Documento ou Tarefa não encontrada
  /api/documents/{id}/historico/:
    get:
      operationId: api_documents_historico_retrieve_2
      description: Retorna o histórico de versões do documento.
      summary: Histórico do documento
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Documento.
        required: true
      tags:
      - Documentos
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHistoricoDocumentoList'
          description: Histórico de versões recuperado com sucesso
        '404':
          description: Documento não encontrado
  /api/documents/comentarios/:
    get:
      operationId: api_documents_comentarios_list
      description: Retorna a lista de todos os comentários associados a documentos.
      summary: Listar comentários de documentos
      parameters:
      - in: query
        name: autor
        schema:
          type: integer
        description: Filtrar por ID do autor do comentário
      - in: query
        name: documento
        schema:
          type: integer
        description: Filtrar por ID do documento ao qual o comentário pertence
      - in: query
        name: ordering
        schema:
          type: string
        description: 'Campo para ordenação (ex: criado_em, -criado_em)'
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Documentos
      - Comentários
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedComentarioList'
          description: Lista de comentários recuperada com sucesso
    post:
      operationId: api_documents_comentarios_create
      description: Cria um novo comentário para um documento. O autor é automaticamente
        definido como o usuário autenticado.
      summary: Criar um novo comentário
      tags:
      - Documentos
      - Comentários
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComentarioRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ComentarioRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ComentarioRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comentario'
              examples:
                ExemploCriacaoComentario:
                  value:
                    documento: 1
                    texto: Este documento está muito bem estruturado e cobre todos
                      os pontos necessários.
                  summary: Exemplo de criação de comentário
          description: Comentário criado com sucesso
        '400':
          description: Dados inválidos
  /api/documents/comentarios/{id}/:
    get:
      operationId: api_documents_comentarios_retrieve
      description: Retorna os detalhes de um comentário específico.
      summary: Detalhes de um comentário
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Comentário.
        required: true
      tags:
      - Documentos
      - Comentários
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comentario'
          description: Detalhes do comentário recuperados com sucesso
        '404':
          description: Comentário não encontrado
    put:
      operationId: api_documents_comentarios_update
      description: Atualiza um comentário existente. Somente o autor do comentário
        ou um administrador pode atualizá-lo.
      summary: Atualizar um comentário
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Comentário.
        required: true
      tags:
      - Documentos
      - Comentários
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComentarioRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ComentarioRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ComentarioRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comentario'
          description: Comentário atualizado com sucesso
        '400':
          description: Dados inválidos
        '403':
          description: Permissão negada para atualizar o comentário
        '404':
          description: Comentário não encontrado
    patch:
      operationId: api_documents_comentarios_partial_update
      description: Atualiza parcialmente um comentário existente. Somente o autor
        ou um administrador pode atualizá-lo.
      summary: Atualizar parcialmente um comentário
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Comentário.
        required: true
      tags:
      - Documentos
      - Comentários
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedComentarioRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedComentarioRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedComentarioRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comentario'
          description: Comentário atualizado parcialmente com sucesso
        '400':
          description: Dados inválidos
        '403':
          description: Permissão negada para atualizar o comentário
        '404':
          description: Comentário não encontrado
    delete:
      operationId: api_documents_comentarios_destroy
      description: Remove um comentário do sistema. Somente o autor ou um administrador
        pode excluí-lo.
      summary: Excluir um comentário
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Comentário.
        required: true
      tags:
      - Documentos
      - Comentários
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '204':
          description: Comentário excluído com sucesso
        '403':
          description: Permissão negada para excluir o comentário
        '404':
          description: Comentário não encontrado
  /api/documents/historico/:
    get:
      operationId: api_documents_historico_list
      description: Retorna a lista de todas as alterações registradas para os documentos.
      summary: Listar histórico de alterações de documentos
      parameters:
      - in: query
        name: alterado_por
        schema:
          type: integer
        description: Filtrar por ID do usuário que realizou a alteração
      - in: query
        name: documento
        schema:
          type: integer
        description: Filtrar por ID do documento
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Documentos
      - Histórico
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHistoricoDocumentoList'
          description: Lista de histórico de documentos recuperada com sucesso
  /api/documents/historico/{id}/:
    get:
      operationId: api_documents_historico_retrieve
      description: Retorna os detalhes de um registro específico do histórico de alterações
        de um documento.
      summary: Detalhes de um registro de histórico
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Histórico de Documento.
        required: true
      tags:
      - Documentos
      - Histórico
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoricoDocumento'
          description: Detalhes do registro de histórico recuperados com sucesso
        '404':
          description: Registro de histórico não encontrado
  /api/health/:
    get:
      operationId: verificacao_saude_simples
      description: Endpoint simples para verificar se a API está operacional. Retorna
        'ok' se estiver tudo certo.
      summary: Verificação de Saúde Simples
      tags:
      - Saúde do Sistema
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
          description: API está operacional.
  /api/health/detailed/:
    get:
      operationId: verificacao_saude_detalhada
      description: Endpoint para verificar o estado da API, incluindo versão e ambiente.
        Não requer autenticação.
      summary: Verificação de Saúde Detalhada
      tags:
      - Saúde do Sistema
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: online
                  versao:
                    type: string
                    example: '1.0'
                  ambiente:
                    type: string
                    example: desenvolvimento
                  data_hora:
                    type: string
                    format: date-time
                    example: '2024-07-15T14:30:00Z'
          description: API está operacional com detalhes.
  /api/projects/:
    get:
      operationId: api_projects_list
      description: Retorna uma lista paginada de projetos.
      summary: Listar projetos
      parameters:
      - in: query
        name: arquivado
        schema:
          type: boolean
      - in: query
        name: atrasado
        schema:
          type: boolean
        description: Filtra projetos atrasados (data_fim < hoje e status != CONCLUIDO)
      - in: query
        name: data_fim_antes_after
        schema:
          type: string
          format: date
        description: Filtra projetos com data de fim antes da data especificada
      - in: query
        name: data_fim_antes_before
        schema:
          type: string
          format: date
        description: Filtra projetos com data de fim antes da data especificada
      - in: query
        name: data_fim_apos_after
        schema:
          type: string
          format: date
        description: Filtra projetos com data de fim após a data especificada
      - in: query
        name: data_fim_apos_before
        schema:
          type: string
          format: date
        description: Filtra projetos com data de fim após a data especificada
      - in: query
        name: data_inicio_antes_after
        schema:
          type: string
          format: date
        description: Filtra projetos com data de início antes da data especificada
      - in: query
        name: data_inicio_antes_before
        schema:
          type: string
          format: date
        description: Filtra projetos com data de início antes da data especificada
      - in: query
        name: data_inicio_apos_after
        schema:
          type: string
          format: date
        description: Filtra projetos com data de início após a data especificada
      - in: query
        name: data_inicio_apos_before
        schema:
          type: string
          format: date
        description: Filtra projetos com data de início após a data especificada
      - in: query
        name: descricao
        schema:
          type: string
        description: Filtra por descrição (case insensitive)
      - in: query
        name: membro
        schema:
          type: string
        description: Filtra projetos que contenham o membro especificado (ID do usuário)
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: prioridade
        schema:
          type: string
        description: Filtra por prioridade (pode ser múltiplas, separadas por vírgula)
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
        description: Filtra por status (pode ser múltiplos, separados por vírgula)
      - in: query
        name: titulo
        schema:
          type: string
        description: Filtra por título (case insensitive)
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjetoListList'
          description: ''
    post:
      operationId: api_projects_create
      description: Cria um novo projeto.
      summary: Criar novo projeto
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjetoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjetoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjetoRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projeto'
          description: ''
  /api/projects/{id_projeto}/metrics/:
    get:
      operationId: metricas_projeto_retrieve
      description: Fornece métricas detalhadas para um projeto específico, como distribuição
        de tarefas por status, progresso, riscos ativos, custos e dias restantes.
        Acessível publicamente para fins de demonstração ou integração externa.
      summary: Métricas Detalhadas do Projeto
      parameters:
      - in: path
        name: id_projeto
        schema:
          type: integer
        description: ID numérico do projeto para o qual as métricas são solicitadas.
        required: true
      tags:
      - Projetos
      - Dashboard
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricasProjeto'
              examples:
                ExemploDeMétricas:
                  value:
                    tarefas_por_status:
                    - status: Pendente
                      count: 5
                    - status: Em Andamento
                      count: 3
                    - status: Concluída
                      count: 7
                    progresso: 46.67
                    riscos_ativos: 2
                    custos_totais: 15000.0
                    dias_restantes: 30
                  summary: Exemplo de métricas retornadas para um projeto.
          description: Métricas detalhadas do projeto.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Erro'
              examples:
                ErroProjetoNãoEncontrado:
                  value:
                    error: Projeto não encontrado
                  summary: Exemplo de erro quando o projeto não é encontrado.
          description: O projeto com o ID especificado não foi encontrado.
  /api/projects/{id}/:
    get:
      operationId: api_projects_retrieve
      description: Retorna informações detalhadas de um projeto específico.
      summary: Obter detalhes do projeto
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Projeto.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projeto'
          description: ''
    put:
      operationId: api_projects_update
      description: Atualiza todos os campos de um projeto existente.
      summary: Atualizar projeto
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Projeto.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjetoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjetoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjetoRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projeto'
          description: ''
    patch:
      operationId: api_projects_partial_update
      description: Atualiza parcialmente um projeto existente.
      summary: Atualizar projeto parcialmente
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Projeto.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProjetoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProjetoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProjetoRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projeto'
          description: ''
    delete:
      operationId: api_projects_destroy
      description: Remove um projeto existente.
      summary: Excluir projeto
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Projeto.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      - {}
      responses:
        '204':
          description: No response body
  /api/projects/{id}/adicionar_membro/:
    post:
      operationId: api_projects_adicionar_membro_create
      description: Adiciona um novo membro ao projeto com o papel especificado.
      summary: Adicionar membro ao projeto
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Projeto.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembroProjetoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MembroProjetoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MembroProjetoRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembroProjeto'
          description: ''
  /api/projects/{id}/archive/:
    post:
      operationId: api_projects_archive_create
      description: Arquiva ou desarquiva um projeto.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Projeto.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjetoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjetoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjetoRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projeto'
          description: ''
  /api/projects/{id}/criar_sprint/:
    post:
      operationId: api_projects_criar_sprint_create
      description: Criar nova sprint no projeto
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Projeto.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjetoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjetoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjetoRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projeto'
          description: ''
  /api/projects/{id}/criar_tarefa/:
    post:
      operationId: api_projects_criar_tarefa_create
      description: Criar nova tarefa no projeto
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Projeto.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjetoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjetoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjetoRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projeto'
          description: ''
  /api/projects/{id}/criar_tarefas_multiplas/:
    post:
      operationId: api_projects_criar_tarefas_multiplas_create
      description: Criar múltiplas tarefas no projeto
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Projeto.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjetoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjetoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjetoRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projeto'
          description: ''
  /api/projects/{id}/dashboard/:
    get:
      operationId: api_projects_dashboard_retrieve
      description: Dashboard do projeto
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Projeto.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projeto'
          description: ''
  /api/projects/{id}/exportar/:
    get:
      operationId: api_projects_exportar_retrieve
      description: Exportar dados do projeto
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Projeto.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projeto'
          description: ''
  /api/projects/{id}/gantt/:
    get:
      operationId: api_projects_gantt_retrieve
      description: Visualização Gantt do projeto
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Projeto.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projeto'
          description: ''
  /api/projects/{id}/historico_status/:
    get:
      operationId: api_projects_historico_status_retrieve
      description: Histórico de status do projeto
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Projeto.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projeto'
          description: ''
  /api/projects/{id}/kanban/:
    get:
      operationId: api_projects_kanban_retrieve
      description: Visualização Kanban do projeto
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Projeto.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projeto'
          description: ''
  /api/projects/{id}/listar_membros/:
    get:
      operationId: api_projects_listar_membros_list
      description: Retorna todos os membros associados ao projeto.
      summary: Listar membros do projeto
      parameters:
      - in: query
        name: arquivado
        schema:
          type: boolean
      - in: query
        name: atrasado
        schema:
          type: boolean
        description: Filtra projetos atrasados (data_fim < hoje e status != CONCLUIDO)
      - in: query
        name: data_fim_antes_after
        schema:
          type: string
          format: date
        description: Filtra projetos com data de fim antes da data especificada
      - in: query
        name: data_fim_antes_before
        schema:
          type: string
          format: date
        description: Filtra projetos com data de fim antes da data especificada
      - in: query
        name: data_fim_apos_after
        schema:
          type: string
          format: date
        description: Filtra projetos com data de fim após a data especificada
      - in: query
        name: data_fim_apos_before
        schema:
          type: string
          format: date
        description: Filtra projetos com data de fim após a data especificada
      - in: query
        name: data_inicio_antes_after
        schema:
          type: string
          format: date
        description: Filtra projetos com data de início antes da data especificada
      - in: query
        name: data_inicio_antes_before
        schema:
          type: string
          format: date
        description: Filtra projetos com data de início antes da data especificada
      - in: query
        name: data_inicio_apos_after
        schema:
          type: string
          format: date
        description: Filtra projetos com data de início após a data especificada
      - in: query
        name: data_inicio_apos_before
        schema:
          type: string
          format: date
        description: Filtra projetos com data de início após a data especificada
      - in: query
        name: descricao
        schema:
          type: string
        description: Filtra por descrição (case insensitive)
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Projeto.
        required: true
      - in: query
        name: membro
        schema:
          type: string
        description: Filtra projetos que contenham o membro especificado (ID do usuário)
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: prioridade
        schema:
          type: string
        description: Filtra por prioridade (pode ser múltiplas, separadas por vírgula)
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
        description: Filtra por status (pode ser múltiplos, separados por vírgula)
      - in: query
        name: titulo
        schema:
          type: string
        description: Filtra por título (case insensitive)
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMembroProjetoList'
          description: ''
  /api/projects/{id}/membros/:
    get:
      operationId: api_projects_membros_retrieve
      description: Lista os membros do projeto.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Projeto.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projeto'
          description: ''
  /api/projects/{id}/metrics/:
    get:
      operationId: api_projects_metrics_retrieve
      description: Retorna métricas detalhadas sobre o projeto, incluindo progresso,
        custos, prazos e qualidade.
      summary: Métricas Detalhadas do Projeto
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Projeto.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/projects/{id}/remover_membro/:
    delete:
      operationId: api_projects_remover_membro_destroy
      description: Remove um membro do projeto pelo ID.
      summary: Remover membro do projeto
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Projeto.
        required: true
      - in: query
        name: membro_id
        schema:
          type: integer
        description: ID do membro a ser removido
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      - {}
      responses:
        '204':
          description: No response body
  /api/projects/{id}/sprints/:
    get:
      operationId: api_projects_sprints_retrieve
      description: Listar sprints do projeto
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Projeto.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projeto'
          description: ''
  /api/projects/my_projects/:
    get:
      operationId: api_projects_my_projects_retrieve
      description: Retorna os projetos dos quais o usuário é membro.
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projeto'
          description: ''
  /api/risks/historico/:
    get:
      operationId: api_risks_historico_list
      description: |-
        ViewSet para visualização do histórico de riscos.
        Somente leitura.
      parameters:
      - in: query
        name: alterado_por
        schema:
          type: integer
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: risco
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHistoricoRiscoList'
          description: ''
  /api/risks/historico/{id}/:
    get:
      operationId: api_risks_historico_retrieve
      description: |-
        ViewSet para visualização do histórico de riscos.
        Somente leitura.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Histórico de Risco.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoricoRisco'
          description: ''
  /api/risks/riscos/:
    get:
      operationId: api_risks_riscos_list
      description: |-
        ViewSet para gerenciamento de riscos.
        Permite criar, listar, atualizar e excluir riscos.
      parameters:
      - in: query
        name: impacto
        schema:
          type: string
          enum:
          - ALTO
          - BAIXO
          - MEDIO
        description: |-
          * `BAIXO` - Baixo
          * `MEDIO` - Médio
          * `ALTO` - Alto
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: probabilidade
        schema:
          type: string
          enum:
          - ALTA
          - BAIXA
          - MEDIA
        description: |-
          * `BAIXA` - Baixa
          * `MEDIA` - Média
          * `ALTA` - Alta
      - in: query
        name: projeto
        schema:
          type: integer
      - in: query
        name: responsavel_mitigacao
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - ACEITO
          - ELIMINADO
          - EM_ANALISE
          - IDENTIFICADO
          - MITIGADO
        description: |-
          * `IDENTIFICADO` - Identificado
          * `EM_ANALISE` - Em Análise
          * `MITIGADO` - Mitigado
          * `ACEITO` - Aceito
          * `ELIMINADO` - Eliminado
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRiscoListList'
          description: ''
    post:
      operationId: api_risks_riscos_create
      description: |-
        ViewSet para gerenciamento de riscos.
        Permite criar, listar, atualizar e excluir riscos.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RiscoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RiscoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RiscoRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Risco'
          description: ''
  /api/risks/riscos/{id}/:
    get:
      operationId: api_risks_riscos_retrieve
      description: |-
        ViewSet para gerenciamento de riscos.
        Permite criar, listar, atualizar e excluir riscos.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Risco.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Risco'
          description: ''
    put:
      operationId: api_risks_riscos_update
      description: |-
        ViewSet para gerenciamento de riscos.
        Permite criar, listar, atualizar e excluir riscos.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Risco.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RiscoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RiscoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RiscoRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Risco'
          description: ''
    patch:
      operationId: api_risks_riscos_partial_update
      description: |-
        ViewSet para gerenciamento de riscos.
        Permite criar, listar, atualizar e excluir riscos.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Risco.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRiscoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRiscoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRiscoRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Risco'
          description: ''
    delete:
      operationId: api_risks_riscos_destroy
      description: |-
        ViewSet para gerenciamento de riscos.
        Permite criar, listar, atualizar e excluir riscos.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Risco.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '204':
          description: No response body
  /api/risks/riscos/{id}/atualizar_status/:
    post:
      operationId: api_risks_riscos_atualizar_status_create
      description: Atualiza o status de um risco.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Risco.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RiscoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RiscoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RiscoRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Risco'
          description: ''
  /api/risks/riscos/{id}/historico/:
    get:
      operationId: api_risks_riscos_historico_retrieve
      description: Retorna o histórico de alterações do risco.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Risco.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Risco'
          description: ''
  /api/risks/riscos/excluir_varios/:
    delete:
      operationId: api_risks_riscos_excluir_varios_destroy
      description: Exclui múltiplos riscos de uma vez.
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '204':
          description: No response body
  /api/tasks/atribuicoes/:
    get:
      operationId: api_tasks_atribuicoes_list
      description: Retorna uma lista de atribuições de tarefas a usuários.
      summary: Listar atribuições de tarefas
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: tarefa
        schema:
          type: integer
        description: Filtrar por ID da tarefa
      - in: query
        name: usuario
        schema:
          type: integer
        description: Filtrar por ID do usuário
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAtribuicaoTarefaList'
          description: ''
    post:
      operationId: api_tasks_atribuicoes_create
      description: Atribui uma tarefa a um usuário.
      summary: Criar atribuição de tarefa
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AtribuicaoTarefaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AtribuicaoTarefaRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AtribuicaoTarefaRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtribuicaoTarefa'
          description: ''
  /api/tasks/atribuicoes/{id}/:
    get:
      operationId: api_tasks_atribuicoes_retrieve
      description: Retorna informações detalhadas de uma atribuição específica.
      summary: Obter detalhes de atribuição
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Atribuição de Tarefa.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtribuicaoTarefa'
          description: ''
    put:
      operationId: api_tasks_atribuicoes_update
      description: |-
        ViewSet para gerenciamento de atribuições de tarefas a usuários.

        Permite criar, listar, visualizar e remover atribuições de tarefas a usuários.
        O usuário que faz a atribuição é automaticamente registrado.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Atribuição de Tarefa.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AtribuicaoTarefaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AtribuicaoTarefaRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AtribuicaoTarefaRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtribuicaoTarefa'
          description: ''
    patch:
      operationId: api_tasks_atribuicoes_partial_update
      description: |-
        ViewSet para gerenciamento de atribuições de tarefas a usuários.

        Permite criar, listar, visualizar e remover atribuições de tarefas a usuários.
        O usuário que faz a atribuição é automaticamente registrado.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Atribuição de Tarefa.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAtribuicaoTarefaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAtribuicaoTarefaRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAtribuicaoTarefaRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtribuicaoTarefa'
          description: ''
    delete:
      operationId: api_tasks_atribuicoes_destroy
      description: Remove a atribuição de uma tarefa a um usuário.
      summary: Remover atribuição
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Atribuição de Tarefa.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '204':
          description: No response body
  /api/tasks/comentarios/:
    get:
      operationId: api_tasks_comentarios_list
      description: Retorna uma lista de comentários de tarefas.
      summary: Listar comentários de tarefas
      parameters:
      - in: query
        name: autor
        schema:
          type: integer
        description: Filtrar por ID do autor
      - in: query
        name: ordering
        schema:
          type: string
        description: 'Ordenar resultados (ex: -criado_em)'
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: tarefa
        schema:
          type: integer
        description: Filtrar por ID da tarefa
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedComentarioTarefaList'
          description: ''
    post:
      operationId: api_tasks_comentarios_create
      description: Adiciona um novo comentário a uma tarefa.
      summary: Criar comentário
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComentarioTarefaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ComentarioTarefaRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ComentarioTarefaRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComentarioTarefa'
          description: ''
  /api/tasks/comentarios/{id}/:
    get:
      operationId: api_tasks_comentarios_retrieve
      description: Retorna informações detalhadas de um comentário específico.
      summary: Obter detalhes de comentário
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Comentário.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComentarioTarefa'
          description: ''
    put:
      operationId: api_tasks_comentarios_update
      description: Atualiza o texto de um comentário existente.
      summary: Atualizar comentário
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Comentário.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComentarioTarefaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ComentarioTarefaRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ComentarioTarefaRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComentarioTarefa'
          description: ''
    patch:
      operationId: api_tasks_comentarios_partial_update
      description: Atualiza parcialmente o texto de um comentário existente.
      summary: Atualizar comentário parcialmente
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Comentário.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedComentarioTarefaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedComentarioTarefaRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedComentarioTarefaRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComentarioTarefa'
          description: ''
    delete:
      operationId: api_tasks_comentarios_destroy
      description: Remove permanentemente um comentário.
      summary: Excluir comentário
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Comentário.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '204':
          description: No response body
  /api/tasks/tarefas/:
    get:
      operationId: api_tasks_tarefas_list
      description: Retorna uma lista paginada de tarefas com opções de filtragem e
        ordenação.
      summary: Listar tarefas
      parameters:
      - in: query
        name: atrasada
        schema:
          type: boolean
        description: Filtrar tarefas atrasadas
      - in: query
        name: data_inicio_antes_after
        schema:
          type: string
          format: date
        description: Filtra tarefas com data de início antes da data especificada
      - in: query
        name: data_inicio_antes_before
        schema:
          type: string
          format: date
        description: Filtra tarefas com data de início antes da data especificada
      - in: query
        name: data_inicio_apos_after
        schema:
          type: string
          format: date
        description: Filtra tarefas com data de início após a data especificada
      - in: query
        name: data_inicio_apos_before
        schema:
          type: string
          format: date
        description: Filtra tarefas com data de início após a data especificada
      - in: query
        name: data_termino_antes_after
        schema:
          type: string
          format: date
        description: Filtra tarefas com data de término antes da data especificada
      - in: query
        name: data_termino_antes_before
        schema:
          type: string
          format: date
        description: Filtra tarefas com data de término antes da data especificada
      - in: query
        name: data_termino_apos_after
        schema:
          type: string
          format: date
        description: Filtra tarefas com data de término após a data especificada
      - in: query
        name: data_termino_apos_before
        schema:
          type: string
          format: date
        description: Filtra tarefas com data de término após a data especificada
      - in: query
        name: descricao
        schema:
          type: string
        description: Filtra por descrição (case insensitive)
      - in: query
        name: minhas_tarefas
        schema:
          type: boolean
        description: Filtrar minhas tarefas
      - in: query
        name: ordering
        schema:
          type: string
        description: 'Ordenar resultados (ex: -data_termino)'
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: prioridade
        schema:
          type: string
        description: Filtrar por prioridade (separadas por vírgula)
      - in: query
        name: projeto
        schema:
          type: integer
        description: Filtrar por ID do projeto
      - in: query
        name: responsavel
        schema:
          type: integer
        description: Filtrar por ID do usuário responsável
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: sem_responsavel
        schema:
          type: boolean
        description: Filtra tarefas sem responsáveis atribuídos
      - in: query
        name: sem_sprint
        schema:
          type: boolean
        description: Filtrar tarefas sem sprint
      - in: query
        name: sprint
        schema:
          type: integer
        description: Filtrar por ID da sprint
      - in: query
        name: status
        schema:
          type: string
        description: Filtrar por status (separados por vírgula)
      - in: query
        name: titulo
        schema:
          type: string
        description: Filtra por título (case insensitive)
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTarefaListList'
          description: ''
    post:
      operationId: api_tasks_tarefas_create
      description: Cria uma nova tarefa com os dados fornecidos.
      summary: Criar tarefa
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TarefaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TarefaRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TarefaRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tarefa'
          description: ''
  /api/tasks/tarefas/{id}/:
    get:
      operationId: api_tasks_tarefas_retrieve
      description: Retorna informações detalhadas de uma tarefa específica.
      summary: Obter detalhes da tarefa
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Tarefa.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tarefa'
          description: ''
    put:
      operationId: api_tasks_tarefas_update
      description: Atualiza todos os campos de uma tarefa existente.
      summary: Atualizar tarefa
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Tarefa.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TarefaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TarefaRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TarefaRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tarefa'
          description: ''
    patch:
      operationId: api_tasks_tarefas_partial_update
      description: Atualiza parcialmente os campos de uma tarefa existente.
      summary: Atualizar tarefa parcialmente
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Tarefa.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTarefaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTarefaRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTarefaRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tarefa'
          description: ''
    delete:
      operationId: api_tasks_tarefas_destroy
      description: Remove permanentemente uma tarefa.
      summary: Excluir tarefa
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Tarefa.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '204':
          description: No response body
  /api/tasks/tarefas/{id}/adicionar_comentario/:
    post:
      operationId: api_tasks_tarefas_adicionar_comentario_create
      description: Adiciona um novo comentário à tarefa.
      summary: Adicionar comentário à tarefa
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Tarefa.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                texto:
                  type: string
                  description: Texto do comentário
              required:
              - texto
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComentarioTarefa'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/tasks/tarefas/{id}/associar_sprint/:
    post:
      operationId: api_tasks_tarefas_associar_sprint_create
      description: Associa a tarefa a uma sprint ou remove a associação existente.
      summary: Associar tarefa a uma sprint
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Tarefa.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sprint_id:
                  type:
                  - integer
                  - 'null'
                  description: ID da sprint a ser associada. Use 0 ou null para remover
                    a associação.
              required:
              - sprint_id
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tarefa'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/tasks/tarefas/{id}/atribuir_responsavel/:
    post:
      operationId: api_tasks_tarefas_atribuir_responsavel_create
      description: Atribui um usuário como responsável pela tarefa.
      summary: Atribuir responsável à tarefa
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Tarefa.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                usuario_id:
                  type: integer
                  description: ID do usuário a ser atribuído como responsável
              required:
              - usuario_id
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtribuicaoTarefa'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/tasks/tarefas/{id}/atualizar_status/:
    post:
      operationId: api_tasks_tarefas_atualizar_status_create
      description: Atualiza o status de uma tarefa e registra a alteração no histórico.
      summary: Atualizar status da tarefa
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Tarefa.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: Novo status da tarefa (A_FAZER, EM_ANDAMENTO, FEITO,
                    BLOQUEADO, CANCELADO)
                comentario:
                  type: string
                  description: Comentário opcional sobre a mudança de status
              required:
              - status
            examples:
              ExemploDeAtualizaçãoParaEmAndamento:
                value:
                  status: EM_ANDAMENTO
                  comentario: Iniciando o desenvolvimento
                summary: Exemplo de atualização para Em Andamento
              ExemploDeAtualizaçãoParaConcluído:
                value:
                  status: FEITO
                  comentario: Tarefa finalizada conforme requisitos
                summary: Exemplo de atualização para Concluído
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tarefa'
              examples:
                ExemploDeAtualizaçãoParaEmAndamento:
                  value:
                    status: EM_ANDAMENTO
                    comentario: Iniciando o desenvolvimento
                  summary: Exemplo de atualização para Em Andamento
                ExemploDeAtualizaçãoParaConcluído:
                  value:
                    status: FEITO
                    comentario: Tarefa finalizada conforme requisitos
                  summary: Exemplo de atualização para Concluído
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/tasks/tarefas/{id}/historico_status/:
    get:
      operationId: api_tasks_tarefas_historico_status_list
      description: Retorna o histórico de alterações de status da tarefa.
      summary: Obter histórico de status da tarefa
      parameters:
      - in: query
        name: atrasada
        schema:
          type: boolean
        description: Filtra tarefas atrasadas (data_termino < hoje e status != FEITO)
      - in: query
        name: data_inicio_antes_after
        schema:
          type: string
          format: date
        description: Filtra tarefas com data de início antes da data especificada
      - in: query
        name: data_inicio_antes_before
        schema:
          type: string
          format: date
        description: Filtra tarefas com data de início antes da data especificada
      - in: query
        name: data_inicio_apos_after
        schema:
          type: string
          format: date
        description: Filtra tarefas com data de início após a data especificada
      - in: query
        name: data_inicio_apos_before
        schema:
          type: string
          format: date
        description: Filtra tarefas com data de início após a data especificada
      - in: query
        name: data_termino_antes_after
        schema:
          type: string
          format: date
        description: Filtra tarefas com data de término antes da data especificada
      - in: query
        name: data_termino_antes_before
        schema:
          type: string
          format: date
        description: Filtra tarefas com data de término antes da data especificada
      - in: query
        name: data_termino_apos_after
        schema:
          type: string
          format: date
        description: Filtra tarefas com data de término após a data especificada
      - in: query
        name: data_termino_apos_before
        schema:
          type: string
          format: date
        description: Filtra tarefas com data de término após a data especificada
      - in: query
        name: descricao
        schema:
          type: string
        description: Filtra por descrição (case insensitive)
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Tarefa.
        required: true
      - in: query
        name: minhas_tarefas
        schema:
          type: boolean
        description: Filtra tarefas do usuário autenticado
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: prioridade
        schema:
          type: string
        description: Filtra por prioridade (pode ser múltiplas, separadas por vírgula)
      - in: query
        name: projeto
        schema:
          type: integer
      - in: query
        name: responsavel
        schema:
          type: string
        description: Filtra tarefas pelo ID do usuário responsável
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: sem_responsavel
        schema:
          type: boolean
        description: Filtra tarefas sem responsáveis atribuídos
      - in: query
        name: sem_sprint
        schema:
          type: boolean
        description: Filtra tarefas que não estão associadas a nenhuma sprint
      - in: query
        name: sprint
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
        description: Filtra por status (pode ser múltiplos, separados por vírgula)
      - in: query
        name: titulo
        schema:
          type: string
        description: Filtra por título (case insensitive)
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHistoricoStatusTarefaList'
          description: ''
  /api/tasks/tarefas/{id}/remover_responsavel/:
    post:
      operationId: api_tasks_tarefas_remover_responsavel_create
      description: Remove um usuário como responsável pela tarefa.
      summary: Remover responsável da tarefa
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Tarefa.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                usuario_id:
                  type: integer
                  description: ID do usuário a ser removido da tarefa
              required:
              - usuario_id
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/teams/equipes/:
    get:
      operationId: api_teams_equipes_list
      description: |-
        ViewSet para gerenciamento de equipes.
        Permite criar, listar, atualizar e excluir equipes.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEquipeListList'
          description: ''
    post:
      operationId: api_teams_equipes_create
      description: |-
        ViewSet para gerenciamento de equipes.
        Permite criar, listar, atualizar e excluir equipes.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EquipeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EquipeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EquipeRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equipe'
          description: ''
  /api/teams/equipes/{id}/:
    get:
      operationId: api_teams_equipes_retrieve
      description: |-
        ViewSet para gerenciamento de equipes.
        Permite criar, listar, atualizar e excluir equipes.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Equipe.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equipe'
          description: ''
    put:
      operationId: api_teams_equipes_update
      description: |-
        ViewSet para gerenciamento de equipes.
        Permite criar, listar, atualizar e excluir equipes.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Equipe.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EquipeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EquipeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EquipeRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equipe'
          description: ''
    patch:
      operationId: api_teams_equipes_partial_update
      description: |-
        ViewSet para gerenciamento de equipes.
        Permite criar, listar, atualizar e excluir equipes.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Equipe.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEquipeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEquipeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEquipeRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equipe'
          description: ''
    delete:
      operationId: api_teams_equipes_destroy
      description: |-
        ViewSet para gerenciamento de equipes.
        Permite criar, listar, atualizar e excluir equipes.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Equipe.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '204':
          description: No response body
  /api/teams/equipes/{id}/adicionar_membro/:
    post:
      operationId: api_teams_equipes_adicionar_membro_create
      description: Adiciona um membro à equipe.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Equipe.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EquipeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EquipeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EquipeRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equipe'
          description: ''
  /api/teams/equipes/{id}/atualizar_papel_membro/:
    post:
      operationId: api_teams_equipes_atualizar_papel_membro_create
      description: Atualiza o papel de um membro da equipe.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Equipe.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EquipeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EquipeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EquipeRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equipe'
          description: ''
  /api/teams/equipes/{id}/membros/:
    get:
      operationId: api_teams_equipes_membros_retrieve
      description: Retorna a lista de membros da equipe.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Equipe.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equipe'
          description: ''
  /api/teams/equipes/{id}/remover_membro/:
    post:
      operationId: api_teams_equipes_remover_membro_create
      description: Remove um membro da equipe.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Equipe.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EquipeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EquipeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EquipeRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equipe'
          description: ''
  /api/teams/equipes/usuarios_disponiveis/:
    get:
      operationId: api_teams_equipes_usuarios_disponiveis_retrieve
      description: Retorna a lista de usuários disponíveis para adicionar a uma equipe.
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equipe'
          description: ''
  /api/teams/membros/:
    get:
      operationId: api_teams_membros_list
      description: ViewSet para gerenciamento de membros de equipe.
      parameters:
      - in: query
        name: equipe
        schema:
          type: integer
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: papel
        schema:
          type: string
          enum:
          - ANALISTA
          - DESIGN
          - DEV
          - PO
          - QA
          - SM
        description: |-
          * `PO` - Product Owner
          * `SM` - Scrum Master
          * `DEV` - Desenvolvedor
          * `QA` - Analista de Qualidade
          * `DESIGN` - Designer
          * `ANALISTA` - Analista
      - in: query
        name: usuario
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMembroEquipeList'
          description: ''
    post:
      operationId: api_teams_membros_create
      description: ViewSet para gerenciamento de membros de equipe.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembroEquipeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MembroEquipeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MembroEquipeRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembroEquipe'
          description: ''
  /api/teams/membros/{id}/:
    get:
      operationId: api_teams_membros_retrieve
      description: ViewSet para gerenciamento de membros de equipe.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Membro da Equipe.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembroEquipe'
          description: ''
    put:
      operationId: api_teams_membros_update
      description: ViewSet para gerenciamento de membros de equipe.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Membro da Equipe.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembroEquipeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MembroEquipeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MembroEquipeRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembroEquipe'
          description: ''
    patch:
      operationId: api_teams_membros_partial_update
      description: ViewSet para gerenciamento de membros de equipe.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Membro da Equipe.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMembroEquipeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMembroEquipeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMembroEquipeRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembroEquipe'
          description: ''
    delete:
      operationId: api_teams_membros_destroy
      description: ViewSet para gerenciamento de membros de equipe.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Membro da Equipe.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '204':
          description: No response body
  /api/teams/permissoes/:
    get:
      operationId: api_teams_permissoes_list
      description: ViewSet para gerenciamento de permissões de equipe.
      parameters:
      - in: query
        name: equipe
        schema:
          type: integer
      - in: query
        name: modulo
        schema:
          type: string
          enum:
          - CUSTOS
          - DOCUMENTOS
          - RISCOS
          - SPRINTS
          - TAREFAS
        description: |-
          * `TAREFAS` - Tarefas
          * `SPRINTS` - Sprints
          * `DOCUMENTOS` - Documentos
          * `RISCOS` - Riscos
          * `CUSTOS` - Custos
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: papel
        schema:
          type: string
          enum:
          - ANALISTA
          - DESIGN
          - DEV
          - PO
          - QA
          - SM
        description: |-
          * `PO` - Product Owner
          * `SM` - Scrum Master
          * `DEV` - Desenvolvedor
          * `QA` - Analista de Qualidade
          * `DESIGN` - Designer
          * `ANALISTA` - Analista
      - in: query
        name: permissao
        schema:
          type: string
          enum:
          - CRIAR
          - EDITAR
          - EXCLUIR
          - VISUALIZAR
        description: |-
          * `VISUALIZAR` - Visualizar
          * `CRIAR` - Criar
          * `EDITAR` - Editar
          * `EXCLUIR` - Excluir
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPermissaoEquipeList'
          description: ''
    post:
      operationId: api_teams_permissoes_create
      description: ViewSet para gerenciamento de permissões de equipe.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissaoEquipeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PermissaoEquipeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PermissaoEquipeRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissaoEquipe'
          description: ''
  /api/teams/permissoes/{id}/:
    get:
      operationId: api_teams_permissoes_retrieve
      description: ViewSet para gerenciamento de permissões de equipe.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Permissão de Equipe.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissaoEquipe'
          description: ''
    put:
      operationId: api_teams_permissoes_update
      description: ViewSet para gerenciamento de permissões de equipe.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Permissão de Equipe.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissaoEquipeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PermissaoEquipeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PermissaoEquipeRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissaoEquipe'
          description: ''
    patch:
      operationId: api_teams_permissoes_partial_update
      description: ViewSet para gerenciamento de permissões de equipe.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Permissão de Equipe.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPermissaoEquipeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPermissaoEquipeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPermissaoEquipeRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissaoEquipe'
          description: ''
    delete:
      operationId: api_teams_permissoes_destroy
      description: ViewSet para gerenciamento de permissões de equipe.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Permissão de Equipe.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '204':
          description: No response body
  /api/user/dashboard/:
    get:
      operationId: dashboard_usuario_retrieve
      description: Retorna dados personalizados para o dashboard do usuário autenticado,
        incluindo projetos gerenciados, suas tarefas por status, tarefas atrasadas
        e próximas tarefas. Requer autenticação.
      summary: Dashboard Pessoal do Usuário
      tags:
      - Dashboard
      - Usuários
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardUsuario'
              examples:
                ExemploDeDashboardDoUsuário:
                  value:
                    projetos_gerenciados: 2
                    tarefas_por_status:
                    - status: Pendente
                      count: 3
                    - status: Em Andamento
                      count: 2
                    - status: Concluída
                      count: 5
                    tarefas_atrasadas: 1
                    proximas_tarefas:
                    - titulo: Implementar login
                      data_inicio: '2023-05-15T10:00:00Z'
                      projeto__titulo: Sistema de Gestão
                    - titulo: Revisar documentação API
                      data_inicio: '2023-05-16T09:00:00Z'
                      projeto__titulo: Plataforma XPTO
                  summary: Exemplo de dados retornados para o dashboard pessoal.
          description: Dados consolidados para o dashboard do usuário.
  /api/users/access-profiles/:
    get:
      operationId: api_users_access_profiles_list
      description: ViewSet para gerenciamento de perfis de acesso.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAccessProfileList'
          description: ''
    post:
      operationId: api_users_access_profiles_create
      description: ViewSet para gerenciamento de perfis de acesso.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccessProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccessProfileRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessProfile'
          description: ''
  /api/users/access-profiles/{id}/:
    get:
      operationId: api_users_access_profiles_retrieve
      description: ViewSet para gerenciamento de perfis de acesso.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this access profile.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessProfile'
          description: ''
    put:
      operationId: api_users_access_profiles_update
      description: ViewSet para gerenciamento de perfis de acesso.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this access profile.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccessProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccessProfileRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessProfile'
          description: ''
    patch:
      operationId: api_users_access_profiles_partial_update
      description: ViewSet para gerenciamento de perfis de acesso.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this access profile.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAccessProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAccessProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAccessProfileRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessProfile'
          description: ''
    delete:
      operationId: api_users_access_profiles_destroy
      description: ViewSet para gerenciamento de perfis de acesso.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this access profile.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '204':
          description: No response body
  /api/users/permissions/:
    get:
      operationId: api_users_permissions_list
      description: ViewSet para gerenciamento de permissões.
      parameters:
      - in: query
        name: access_profile
        schema:
          type: integer
      - in: query
        name: action
        schema:
          type: string
          enum:
          - APPROVE
          - ASSIGN
          - COMMENT
          - CREATE
          - DELETE
          - EDIT
          - EXPORT
          - IMPORT
          - VIEW
        description: |-
          * `VIEW` - View
          * `CREATE` - Create
          * `EDIT` - Edit
          * `DELETE` - Delete
          * `APPROVE` - Approve
          * `ASSIGN` - Assign
          * `EXPORT` - Export
          * `IMPORT` - Import
          * `COMMENT` - Comment
      - in: query
        name: module
        schema:
          type: string
          enum:
          - APPROVALS
          - COMMUNICATIONS
          - COSTS
          - DASHBOARD
          - DOCUMENTS
          - NOTIFICATIONS
          - PROJECTS
          - REPORTS
          - RESOURCES
          - RISKS
          - SETTINGS
          - TASKS
          - TEAMS
          - USERS
        description: |-
          * `PROJECTS` - Projects
          * `TASKS` - Tasks
          * `TEAMS` - Teams
          * `RESOURCES` - Resources
          * `COMMUNICATIONS` - Communications
          * `RISKS` - Risks
          * `COSTS` - Costs
          * `DOCUMENTS` - Documents
          * `REPORTS` - Reports
          * `USERS` - Users
          * `SETTINGS` - Settings
          * `DASHBOARD` - Dashboard
          * `NOTIFICATIONS` - Notifications
          * `APPROVALS` - Approvals
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPermissionList'
          description: ''
    post:
      operationId: api_users_permissions_create
      description: ViewSet para gerenciamento de permissões.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PermissionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PermissionRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
          description: ''
  /api/users/permissions/{id}/:
    get:
      operationId: api_users_permissions_retrieve
      description: ViewSet para gerenciamento de permissões.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this permission.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
          description: ''
    put:
      operationId: api_users_permissions_update
      description: ViewSet para gerenciamento de permissões.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this permission.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PermissionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PermissionRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
          description: ''
    patch:
      operationId: api_users_permissions_partial_update
      description: ViewSet para gerenciamento de permissões.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this permission.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPermissionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPermissionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPermissionRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
          description: ''
    delete:
      operationId: api_users_permissions_destroy
      description: ViewSet para gerenciamento de permissões.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this permission.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '204':
          description: No response body
  /api/users/profiles/:
    get:
      operationId: api_users_profiles_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserProfileList'
          description: ''
    post:
      operationId: api_users_profiles_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
  /api/users/profiles/{id}/:
    get:
      operationId: api_users_profiles_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    put:
      operationId: api_users_profiles_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    patch:
      operationId: api_users_profiles_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    delete:
      operationId: api_users_profiles_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '204':
          description: No response body
  /api/users/token/:
    post:
      operationId: api_users_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPairRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPairRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPairRequest'
        required: true
      security:
      - Bearer: []
      responses:
        '200':
          description: No response body
  /api/users/token/refresh/:
    post:
      operationId: api_users_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      security:
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/users/users/:
    get:
      operationId: api_users_users_list
      description: ViewSet para gerenciamento de usuários.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: api_users_users_create
      description: ViewSet para gerenciamento de usuários.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
  /api/users/users/{id}/:
    get:
      operationId: api_users_users_retrieve
      description: ViewSet para gerenciamento de usuários.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_users_users_update
      description: ViewSet para gerenciamento de usuários.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_users_users_partial_update
      description: ViewSet para gerenciamento de usuários.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_users_users_destroy
      description: ViewSet para gerenciamento de usuários.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '204':
          description: No response body
  /api/users/users/{id}/activate/:
    post:
      operationId: api_users_users_activate_create
      description: Ativa um usuário.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/users/{id}/deactivate/:
    post:
      operationId: api_users_users_deactivate_create
      description: Desativa um usuário.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/users/{id}/reset_password/:
    post:
      operationId: api_users_users_reset_password_create
      description: Redefine a senha do usuário para uma senha temporária e envia por
        e-mail.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/users/{id}/unlock/:
    post:
      operationId: api_users_users_unlock_create
      description: Desbloqueia um usuário após tentativas de login malsucedidas.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/users/change_password/:
    post:
      operationId: api_users_users_change_password_create
      description: Altera a senha do usuário autenticado.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/users/me/:
    get:
      operationId: api_users_users_me_retrieve
      description: Retorna as informações do usuário autenticado.
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/users/permissions/:
    get:
      operationId: api_users_users_permissions_retrieve
      description: Retorna as permissões do usuário autenticado.
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    AccessProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
      - permissions
      - updated_at
    AccessProfileRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          nullable: true
      required:
      - name
    ActionEnum:
      enum:
      - VIEW
      - CREATE
      - EDIT
      - DELETE
      - APPROVE
      - ASSIGN
      - EXPORT
      - IMPORT
      - COMMENT
      type: string
      description: |-
        * `VIEW` - View
        * `CREATE` - Create
        * `EDIT` - Edit
        * `DELETE` - Delete
        * `APPROVE` - Approve
        * `ASSIGN` - Assign
        * `EXPORT` - Export
        * `IMPORT` - Import
        * `COMMENT` - Comment
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - token
      - uid
    ActivationRequest:
      type: object
      properties:
        uid:
          type: string
          minLength: 1
        token:
          type: string
          minLength: 1
      required:
      - token
      - uid
    Alerta:
      type: object
      description: |-
        Serializer para o modelo Alerta.

        Inclui todos os campos do modelo Alerta.
        Adiciona campos de leitura para exibir o valor textual dos campos de escolha
        ('tipo', 'status') e nomes relacionados (projeto, tarefa, resolvedor).
      properties:
        id:
          type: integer
          readOnly: true
        tipo:
          $ref: '#/components/schemas/AlertaTipoEnum'
        tipo_display:
          type: string
          readOnly: true
        projeto:
          type: integer
        projeto_nome:
          type: string
          readOnly: true
        tarefa:
          type: integer
          nullable: true
        tarefa_titulo:
          type: string
          readOnly: true
        percentual:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        mensagem:
          type: string
        status:
          $ref: '#/components/schemas/AlertaStatusEnum'
        status_display:
          type: string
          readOnly: true
        data_criacao:
          type: string
          format: date-time
          readOnly: true
        data_resolucao:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        resolvido_por:
          type: integer
          nullable: true
        resolvido_por_nome:
          type: string
          readOnly: true
      required:
      - data_criacao
      - data_resolucao
      - id
      - mensagem
      - percentual
      - projeto
      - projeto_nome
      - resolvido_por_nome
      - status_display
      - tarefa_titulo
      - tipo
      - tipo_display
    AlertaRequest:
      type: object
      description: |-
        Serializer para o modelo Alerta.

        Inclui todos os campos do modelo Alerta.
        Adiciona campos de leitura para exibir o valor textual dos campos de escolha
        ('tipo', 'status') e nomes relacionados (projeto, tarefa, resolvedor).
      properties:
        tipo:
          $ref: '#/components/schemas/AlertaTipoEnum'
        projeto:
          type: integer
        tarefa:
          type: integer
          nullable: true
        percentual:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        mensagem:
          type: string
          minLength: 1
        status:
          $ref: '#/components/schemas/AlertaStatusEnum'
        resolvido_por:
          type: integer
          nullable: true
      required:
      - mensagem
      - percentual
      - projeto
      - tipo
    AlertaStatusEnum:
      enum:
      - ATIVO
      - RESOLVIDO
      - IGNORADO
      type: string
      description: |-
        * `ATIVO` - Ativo
        * `RESOLVIDO` - Resolvido
        * `IGNORADO` - Ignorado
    AlertaTipoEnum:
      enum:
      - PROJETO
      - TAREFA
      type: string
      description: |-
        * `PROJETO` - Projeto
        * `TAREFA` - Tarefa
    AtribuicaoTarefa:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        tarefa:
          type: integer
        usuario:
          type: integer
        usuario_nome:
          type: string
          readOnly: true
        atribuido_em:
          type: string
          format: date-time
          readOnly: true
        atribuido_por:
          type: integer
          nullable: true
        atribuido_por_nome:
          type: string
          readOnly: true
      required:
      - atribuido_em
      - atribuido_por_nome
      - id
      - tarefa
      - usuario
      - usuario_nome
    AtribuicaoTarefaRequest:
      type: object
      properties:
        tarefa:
          type: integer
        usuario:
          type: integer
        atribuido_por:
          type: integer
          nullable: true
      required:
      - tarefa
      - usuario
    Categoria:
      type: object
      description: |-
        Serializer para o modelo Categoria.

        Utilizado para serializar/desserializar dados da categoria.
        Inclui todos os campos do modelo.
      properties:
        id:
          type: integer
          readOnly: true
        nome:
          type: string
          maxLength: 100
        descricao:
          type: string
          nullable: true
      required:
      - id
      - nome
    CategoriaRequest:
      type: object
      description: |-
        Serializer para o modelo Categoria.

        Utilizado para serializar/desserializar dados da categoria.
        Inclui todos os campos do modelo.
      properties:
        nome:
          type: string
          minLength: 1
          maxLength: 100
        descricao:
          type: string
          nullable: true
      required:
      - nome
    ChatMensagem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        projeto:
          type: integer
          description: Projeto ao qual a mensagem pertence
        projeto_nome:
          type: string
          readOnly: true
        autor:
          type: integer
          readOnly: true
          description: Usuário que enviou a mensagem
        autor_nome:
          type: string
          readOnly: true
        autor_username:
          type: string
          readOnly: true
        texto:
          type: string
          description: Conteúdo da mensagem
        anexo:
          type: string
          format: uri
          nullable: true
          description: Arquivo opcional anexado à mensagem
        enviado_em:
          type: string
          format: date-time
          readOnly: true
          description: Data e hora em que a mensagem foi enviada
        editado:
          type: boolean
          readOnly: true
          description: Indica se a mensagem foi editada após o envio inicial
        leituras:
          type: array
          items:
            $ref: '#/components/schemas/ChatMensagemLeitura'
          readOnly: true
      required:
      - autor
      - autor_nome
      - autor_username
      - editado
      - enviado_em
      - id
      - leituras
      - projeto
      - projeto_nome
      - texto
    ChatMensagemLeitura:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        mensagem:
          type: integer
          description: Mensagem que foi lida
        usuario:
          type: integer
          description: Usuário que leu a mensagem
        usuario_nome:
          type: string
          readOnly: true
        lido_em:
          type: string
          format: date-time
          readOnly: true
          description: Data e hora em que a mensagem foi lida
      required:
      - id
      - lido_em
      - mensagem
      - usuario
      - usuario_nome
    ChatMensagemLeituraRequest:
      type: object
      properties:
        mensagem:
          type: integer
          description: Mensagem que foi lida
        usuario:
          type: integer
          description: Usuário que leu a mensagem
      required:
      - mensagem
      - usuario
    ChatMensagemRequest:
      type: object
      properties:
        projeto:
          type: integer
          description: Projeto ao qual a mensagem pertence
        texto:
          type: string
          minLength: 1
          description: Conteúdo da mensagem
        anexo:
          type: string
          format: binary
          nullable: true
          description: Arquivo opcional anexado à mensagem
      required:
      - projeto
      - texto
    Comentario:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        documento:
          type: integer
        autor:
          type: integer
        autor_nome:
          type: string
          readOnly: true
        texto:
          type: string
        criado_em:
          type: string
          format: date-time
          readOnly: true
      required:
      - autor
      - autor_nome
      - criado_em
      - documento
      - id
      - texto
    ComentarioRequest:
      type: object
      properties:
        documento:
          type: integer
        autor:
          type: integer
        texto:
          type: string
          minLength: 1
      required:
      - autor
      - documento
      - texto
    ComentarioTarefa:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        tarefa:
          type: integer
        autor:
          type: integer
        autor_nome:
          type: string
          readOnly: true
        texto:
          type: string
        criado_em:
          type: string
          format: date-time
          readOnly: true
      required:
      - autor
      - autor_nome
      - criado_em
      - id
      - tarefa
      - texto
    ComentarioTarefaRequest:
      type: object
      properties:
        tarefa:
          type: integer
        autor:
          type: integer
        texto:
          type: string
          minLength: 1
      required:
      - autor
      - tarefa
      - texto
    ConfiguracaoNotificacao:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        usuario:
          type: integer
          description: Usuário ao qual estas configurações pertencem
        usuario_nome:
          type: string
          readOnly: true
        tarefa_atribuida:
          allOf:
          - $ref: '#/components/schemas/TarefaAtribuidaEnum'
          description: |-
            Canal de notificação quando uma tarefa é atribuída ao usuário

            * `EMAIL` - E-mail
            * `SISTEMA` - Sistema
            * `AMBOS` - Ambos
            * `NENHUM` - Nenhum
        tarefa_comentario:
          allOf:
          - $ref: '#/components/schemas/TarefaComentarioEnum'
          description: |-
            Canal de notificação quando há um novo comentário em uma tarefa do usuário

            * `EMAIL` - E-mail
            * `SISTEMA` - Sistema
            * `AMBOS` - Ambos
            * `NENHUM` - Nenhum
        tarefa_prazo:
          allOf:
          - $ref: '#/components/schemas/TarefaPrazoEnum'
          description: |-
            Canal de notificação para lembretes de prazo de tarefas

            * `EMAIL` - E-mail
            * `SISTEMA` - Sistema
            * `AMBOS` - Ambos
            * `NENHUM` - Nenhum
        projeto_status:
          allOf:
          - $ref: '#/components/schemas/ProjetoStatusEnum'
          description: |-
            Canal de notificação quando o status de um projeto é alterado

            * `EMAIL` - E-mail
            * `SISTEMA` - Sistema
            * `AMBOS` - Ambos
            * `NENHUM` - Nenhum
        equipe_alteracao:
          allOf:
          - $ref: '#/components/schemas/EquipeAlteracaoEnum'
          description: |-
            Canal de notificação quando há alterações na equipe de um projeto

            * `EMAIL` - E-mail
            * `SISTEMA` - Sistema
            * `AMBOS` - Ambos
            * `NENHUM` - Nenhum
        documento_novo:
          allOf:
          - $ref: '#/components/schemas/DocumentoNovoEnum'
          description: |-
            Canal de notificação quando um novo documento é adicionado

            * `EMAIL` - E-mail
            * `SISTEMA` - Sistema
            * `AMBOS` - Ambos
            * `NENHUM` - Nenhum
        risco_novo:
          allOf:
          - $ref: '#/components/schemas/RiscoNovoEnum'
          description: |-
            Canal de notificação quando um novo risco é registrado

            * `EMAIL` - E-mail
            * `SISTEMA` - Sistema
            * `AMBOS` - Ambos
            * `NENHUM` - Nenhum
        mensagem_chat:
          allOf:
          - $ref: '#/components/schemas/MensagemChatEnum'
          description: |-
            Canal de notificação para novas mensagens de chat

            * `EMAIL` - E-mail
            * `SISTEMA` - Sistema
            * `AMBOS` - Ambos
            * `NENHUM` - Nenhum
      required:
      - id
      - usuario
      - usuario_nome
    ConfiguracaoNotificacaoRequest:
      type: object
      properties:
        usuario:
          type: integer
          description: Usuário ao qual estas configurações pertencem
        tarefa_atribuida:
          allOf:
          - $ref: '#/components/schemas/TarefaAtribuidaEnum'
          description: |-
            Canal de notificação quando uma tarefa é atribuída ao usuário

            * `EMAIL` - E-mail
            * `SISTEMA` - Sistema
            * `AMBOS` - Ambos
            * `NENHUM` - Nenhum
        tarefa_comentario:
          allOf:
          - $ref: '#/components/schemas/TarefaComentarioEnum'
          description: |-
            Canal de notificação quando há um novo comentário em uma tarefa do usuário

            * `EMAIL` - E-mail
            * `SISTEMA` - Sistema
            * `AMBOS` - Ambos
            * `NENHUM` - Nenhum
        tarefa_prazo:
          allOf:
          - $ref: '#/components/schemas/TarefaPrazoEnum'
          description: |-
            Canal de notificação para lembretes de prazo de tarefas

            * `EMAIL` - E-mail
            * `SISTEMA` - Sistema
            * `AMBOS` - Ambos
            * `NENHUM` - Nenhum
        projeto_status:
          allOf:
          - $ref: '#/components/schemas/ProjetoStatusEnum'
          description: |-
            Canal de notificação quando o status de um projeto é alterado

            * `EMAIL` - E-mail
            * `SISTEMA` - Sistema
            * `AMBOS` - Ambos
            * `NENHUM` - Nenhum
        equipe_alteracao:
          allOf:
          - $ref: '#/components/schemas/EquipeAlteracaoEnum'
          description: |-
            Canal de notificação quando há alterações na equipe de um projeto

            * `EMAIL` - E-mail
            * `SISTEMA` - Sistema
            * `AMBOS` - Ambos
            * `NENHUM` - Nenhum
        documento_novo:
          allOf:
          - $ref: '#/components/schemas/DocumentoNovoEnum'
          description: |-
            Canal de notificação quando um novo documento é adicionado

            * `EMAIL` - E-mail
            * `SISTEMA` - Sistema
            * `AMBOS` - Ambos
            * `NENHUM` - Nenhum
        risco_novo:
          allOf:
          - $ref: '#/components/schemas/RiscoNovoEnum'
          description: |-
            Canal de notificação quando um novo risco é registrado

            * `EMAIL` - E-mail
            * `SISTEMA` - Sistema
            * `AMBOS` - Ambos
            * `NENHUM` - Nenhum
        mensagem_chat:
          allOf:
          - $ref: '#/components/schemas/MensagemChatEnum'
          description: |-
            Canal de notificação para novas mensagens de chat

            * `EMAIL` - E-mail
            * `SISTEMA` - Sistema
            * `AMBOS` - Ambos
            * `NENHUM` - Nenhum
      required:
      - usuario
    ContadorTarefaStatus:
      type: object
      description: Serializador para contagem de tarefas por status.
      properties:
        status:
          type: string
          description: 'Status da tarefa (ex: Pendente, Em Andamento, Concluída)'
        count:
          type: integer
          description: Quantidade de tarefas com este status
      required:
      - count
      - status
    Custo:
      type: object
      description: |-
        Serializer detalhado para o modelo Custo.

        Inclui todos os campos do modelo Custo e adiciona campos de leitura
        para exibir nomes relacionados de outros modelos (usuário, projeto, tarefa, categoria)
        e o valor textual dos campos de escolha ('tipo').
      properties:
        id:
          type: integer
          readOnly: true
        projeto:
          type: integer
        projeto_nome:
          type: string
          readOnly: true
        tarefa:
          type: integer
          nullable: true
        tarefa_titulo:
          type: string
          readOnly: true
        categoria:
          type: integer
          nullable: true
        categoria_nome:
          type: string
          readOnly: true
        descricao:
          type: string
          maxLength: 200
        valor:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        tipo:
          $ref: '#/components/schemas/CustoTipoEnum'
        tipo_display:
          type: string
          readOnly: true
        data:
          type: string
          format: date
        comprovante:
          type: string
          format: uri
          nullable: true
        observacoes:
          type: string
          nullable: true
        criado_por:
          type: integer
          nullable: true
        criado_por_nome:
          type: string
          readOnly: true
        criado_em:
          type: string
          format: date-time
          readOnly: true
        atualizado_em:
          type: string
          format: date-time
          readOnly: true
      required:
      - atualizado_em
      - categoria_nome
      - criado_em
      - criado_por_nome
      - data
      - descricao
      - id
      - projeto
      - projeto_nome
      - tarefa_titulo
      - tipo_display
      - valor
    CustoList:
      type: object
      description: |-
        Serializer simplificado para listagem de custos.

        Projetado para exibir uma visão concisa dos custos, ideal para listas
        ou tabelas onde nem todos os detalhes do Custo são necessários.
        Inclui campos de leitura para nomes relacionados e o valor 'display' do tipo.
      properties:
        id:
          type: integer
          readOnly: true
        projeto:
          type: integer
        projeto_nome:
          type: string
          readOnly: true
        tarefa:
          type: integer
          nullable: true
        tarefa_titulo:
          type: string
          readOnly: true
        categoria_nome:
          type: string
          readOnly: true
        descricao:
          type: string
          maxLength: 200
        valor:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        tipo_display:
          type: string
          readOnly: true
        data:
          type: string
          format: date
      required:
      - categoria_nome
      - data
      - descricao
      - id
      - projeto
      - projeto_nome
      - tarefa_titulo
      - tipo_display
      - valor
    CustoRequest:
      type: object
      description: |-
        Serializer detalhado para o modelo Custo.

        Inclui todos os campos do modelo Custo e adiciona campos de leitura
        para exibir nomes relacionados de outros modelos (usuário, projeto, tarefa, categoria)
        e o valor textual dos campos de escolha ('tipo').
      properties:
        projeto:
          type: integer
        tarefa:
          type: integer
          nullable: true
        categoria:
          type: integer
          nullable: true
        descricao:
          type: string
          minLength: 1
          maxLength: 200
        valor:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        tipo:
          $ref: '#/components/schemas/CustoTipoEnum'
        data:
          type: string
          format: date
        comprovante:
          type: string
          format: binary
          nullable: true
        observacoes:
          type: string
          nullable: true
        criado_por:
          type: integer
          nullable: true
      required:
      - data
      - descricao
      - projeto
      - valor
    CustoTipoEnum:
      enum:
      - FIXO
      - VARIAVEL
      - RECORRENTE
      type: string
      description: |-
        * `FIXO` - Custo Fixo
        * `VARIAVEL` - Custo Variável
        * `RECORRENTE` - Custo Recorrente
    CustomTokenObtainPairRequest:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - password
      - username
    DashboardUsuario:
      type: object
      description: Serializador para dashboard pessoal do usuário.
      properties:
        projetos_gerenciados:
          type: integer
          description: Número de projetos onde o usuário é o gerente
        tarefas_por_status:
          type: array
          items:
            $ref: '#/components/schemas/ContadorTarefaStatus'
          description: Contagem das tarefas do usuário, agrupadas por status
        tarefas_atrasadas:
          type: integer
          description: Número de tarefas atribuídas ao usuário que estão atrasadas
        proximas_tarefas:
          type: array
          items:
            $ref: '#/components/schemas/ProximaTarefa'
          description: Lista das próximas tarefas agendadas para o usuário
      required:
      - projetos_gerenciados
      - proximas_tarefas
      - tarefas_atrasadas
      - tarefas_por_status
    Documento:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        projeto:
          type: integer
        projeto_nome:
          type: string
          readOnly: true
        tarefa:
          type: integer
          nullable: true
        tarefa_titulo:
          type: string
          readOnly: true
        titulo:
          type: string
          maxLength: 200
        descricao:
          type: string
          nullable: true
        tipo:
          $ref: '#/components/schemas/Tipo0e9Enum'
        tipo_display:
          type: string
          readOnly: true
        arquivo:
          type: string
          format: uri
        tamanho_arquivo:
          type: integer
          readOnly: true
          description: Tamanho em bytes
        tipo_arquivo:
          type: string
          readOnly: true
          description: Tipo MIME do arquivo
        versao:
          type: string
          maxLength: 20
        enviado_por:
          type: integer
          nullable: true
        enviado_por_nome:
          type: string
          readOnly: true
        data_upload:
          type: string
          format: date-time
          readOnly: true
        atualizado_em:
          type: string
          format: date-time
          readOnly: true
        comentarios:
          type: array
          items:
            $ref: '#/components/schemas/Comentario'
          readOnly: true
        historico:
          type: array
          items:
            $ref: '#/components/schemas/HistoricoDocumento'
          readOnly: true
      required:
      - arquivo
      - atualizado_em
      - comentarios
      - data_upload
      - enviado_por_nome
      - historico
      - id
      - projeto
      - projeto_nome
      - tamanho_arquivo
      - tarefa_titulo
      - tipo_arquivo
      - tipo_display
      - titulo
    DocumentoList:
      type: object
      description: Serializer simplificado para listagem de documentos
      properties:
        id:
          type: integer
          readOnly: true
        projeto:
          type: integer
        projeto_nome:
          type: string
          readOnly: true
        tarefa:
          type: integer
          nullable: true
        tarefa_titulo:
          type: string
          readOnly: true
        titulo:
          type: string
          maxLength: 200
        tipo:
          $ref: '#/components/schemas/Tipo0e9Enum'
        tipo_display:
          type: string
          readOnly: true
        versao:
          type: string
          maxLength: 20
        enviado_por_nome:
          type: string
          readOnly: true
        data_upload:
          type: string
          format: date-time
          readOnly: true
        tamanho_arquivo:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Tamanho em bytes
        tipo_arquivo:
          type: string
          description: Tipo MIME do arquivo
          maxLength: 50
      required:
      - data_upload
      - enviado_por_nome
      - id
      - projeto
      - projeto_nome
      - tamanho_arquivo
      - tarefa_titulo
      - tipo_arquivo
      - tipo_display
      - titulo
    DocumentoNovoEnum:
      enum:
      - EMAIL
      - SISTEMA
      - AMBOS
      - NENHUM
      type: string
      description: |-
        * `EMAIL` - E-mail
        * `SISTEMA` - Sistema
        * `AMBOS` - Ambos
        * `NENHUM` - Nenhum
    DocumentoRequest:
      type: object
      properties:
        projeto:
          type: integer
        tarefa:
          type: integer
          nullable: true
        titulo:
          type: string
          minLength: 1
          maxLength: 200
        descricao:
          type: string
          nullable: true
        tipo:
          $ref: '#/components/schemas/Tipo0e9Enum'
        arquivo:
          type: string
          format: binary
        versao:
          type: string
          minLength: 1
          maxLength: 20
        enviado_por:
          type: integer
          nullable: true
      required:
      - arquivo
      - projeto
      - titulo
    Equipe:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nome:
          type: string
          maxLength: 100
        descricao:
          type: string
          nullable: true
        criado_por:
          type: integer
          nullable: true
        criado_por_nome:
          type: string
          readOnly: true
          description: Nome completo do usuário que criou a equipe.
        criado_em:
          type: string
          format: date-time
          readOnly: true
        atualizado_em:
          type: string
          format: date-time
          readOnly: true
        membros:
          type: array
          items:
            $ref: '#/components/schemas/MembroEquipe'
          readOnly: true
          description: Lista de membros desta equipe.
        permissoes:
          type: array
          items:
            $ref: '#/components/schemas/PermissaoEquipe'
          readOnly: true
          description: Lista de permissões associadas a esta equipe.
        total_membros:
          type: integer
          readOnly: true
          description: Número total de membros nesta equipe.
      required:
      - atualizado_em
      - criado_em
      - criado_por_nome
      - id
      - membros
      - nome
      - permissoes
      - total_membros
    EquipeAlteracaoEnum:
      enum:
      - EMAIL
      - SISTEMA
      - AMBOS
      - NENHUM
      type: string
      description: |-
        * `EMAIL` - E-mail
        * `SISTEMA` - Sistema
        * `AMBOS` - Ambos
        * `NENHUM` - Nenhum
    EquipeList:
      type: object
      description: Serializer simplificado para listagem de equipes
      properties:
        id:
          type: integer
          readOnly: true
        nome:
          type: string
          maxLength: 100
        criado_por_nome:
          type: string
          readOnly: true
          description: Nome completo do criador da equipe.
        criado_em:
          type: string
          format: date-time
          readOnly: true
        total_membros:
          type: integer
          readOnly: true
          description: Número total de membros nesta equipe.
      required:
      - criado_em
      - criado_por_nome
      - id
      - nome
      - total_membros
    EquipeRequest:
      type: object
      properties:
        nome:
          type: string
          minLength: 1
          maxLength: 100
        descricao:
          type: string
          nullable: true
        criado_por:
          type: integer
          nullable: true
      required:
      - nome
    Erro:
      type: object
      description: Serializador padrão para respostas de erro.
      properties:
        error:
          type: string
          description: Mensagem descrevendo o erro ocorrido
      required:
      - error
    HistoricoDocumento:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        documento:
          type: integer
        versao_anterior:
          type: string
          maxLength: 20
        arquivo_anterior:
          type: string
          format: uri
        tamanho_arquivo:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Tamanho em bytes
        alterado_por:
          type: integer
          nullable: true
        alterado_por_nome:
          type: string
          readOnly: true
        data_alteracao:
          type: string
          format: date-time
          readOnly: true
        observacao:
          type: string
          nullable: true
      required:
      - alterado_por_nome
      - arquivo_anterior
      - data_alteracao
      - documento
      - id
      - tamanho_arquivo
      - versao_anterior
    HistoricoDocumentoRequest:
      type: object
      properties:
        documento:
          type: integer
        versao_anterior:
          type: string
          minLength: 1
          maxLength: 20
        arquivo_anterior:
          type: string
          format: binary
        tamanho_arquivo:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Tamanho em bytes
        alterado_por:
          type: integer
          nullable: true
        observacao:
          type: string
          nullable: true
      required:
      - arquivo_anterior
      - documento
      - tamanho_arquivo
      - versao_anterior
    HistoricoRisco:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        risco:
          type: integer
        status_anterior:
          $ref: '#/components/schemas/NovoStatusA52Enum'
        status_anterior_display:
          type: string
          readOnly: true
        novo_status:
          $ref: '#/components/schemas/NovoStatusA52Enum'
        novo_status_display:
          type: string
          readOnly: true
        probabilidade_anterior:
          $ref: '#/components/schemas/ProbabilidadeAnteriorEnum'
        probabilidade_anterior_display:
          type: string
          readOnly: true
        nova_probabilidade:
          $ref: '#/components/schemas/NovaProbabilidadeEnum'
        nova_probabilidade_display:
          type: string
          readOnly: true
        impacto_anterior:
          $ref: '#/components/schemas/ImpactoEnum'
        impacto_anterior_display:
          type: string
          readOnly: true
        novo_impacto:
          $ref: '#/components/schemas/ImpactoEnum'
        novo_impacto_display:
          type: string
          readOnly: true
        alterado_por:
          type: integer
          nullable: true
        alterado_por_nome:
          type: string
          readOnly: true
        alterado_em:
          type: string
          format: date-time
          readOnly: true
        observacao:
          type: string
          nullable: true
      required:
      - alterado_em
      - alterado_por_nome
      - id
      - impacto_anterior
      - impacto_anterior_display
      - nova_probabilidade
      - nova_probabilidade_display
      - novo_impacto
      - novo_impacto_display
      - novo_status
      - novo_status_display
      - probabilidade_anterior
      - probabilidade_anterior_display
      - risco
      - status_anterior
      - status_anterior_display
    HistoricoRiscoRequest:
      type: object
      properties:
        risco:
          type: integer
        status_anterior:
          $ref: '#/components/schemas/NovoStatusA52Enum'
        novo_status:
          $ref: '#/components/schemas/NovoStatusA52Enum'
        probabilidade_anterior:
          $ref: '#/components/schemas/ProbabilidadeAnteriorEnum'
        nova_probabilidade:
          $ref: '#/components/schemas/NovaProbabilidadeEnum'
        impacto_anterior:
          $ref: '#/components/schemas/ImpactoEnum'
        novo_impacto:
          $ref: '#/components/schemas/ImpactoEnum'
        alterado_por:
          type: integer
          nullable: true
        observacao:
          type: string
          nullable: true
      required:
      - impacto_anterior
      - nova_probabilidade
      - novo_impacto
      - novo_status
      - probabilidade_anterior
      - risco
      - status_anterior
    HistoricoStatusTarefa:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        tarefa:
          type: integer
        status_anterior:
          $ref: '#/components/schemas/NovoStatus607Enum'
        status_anterior_display:
          type: string
          readOnly: true
        novo_status:
          $ref: '#/components/schemas/NovoStatus607Enum'
        novo_status_display:
          type: string
          readOnly: true
        alterado_por:
          type: integer
          nullable: true
        alterado_por_nome:
          type: string
          readOnly: true
        alterado_em:
          type: string
          format: date-time
          readOnly: true
      required:
      - alterado_em
      - alterado_por_nome
      - id
      - novo_status
      - novo_status_display
      - status_anterior
      - status_anterior_display
      - tarefa
    ImpactoEnum:
      enum:
      - BAIXO
      - MEDIO
      - ALTO
      type: string
      description: |-
        * `BAIXO` - Baixo
        * `MEDIO` - Médio
        * `ALTO` - Alto
    MembroEquipe:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        equipe:
          type: integer
        usuario:
          type: integer
        usuario_nome:
          type: string
          readOnly: true
        usuario_email:
          type: string
          readOnly: true
        papel:
          $ref: '#/components/schemas/PapelF38Enum'
        papel_display:
          type: string
          readOnly: true
        adicionado_em:
          type: string
          format: date-time
          readOnly: true
        adicionado_por:
          type: integer
          nullable: true
        adicionado_por_nome:
          type: string
          readOnly: true
      required:
      - adicionado_em
      - adicionado_por_nome
      - equipe
      - id
      - papel
      - papel_display
      - usuario
      - usuario_email
      - usuario_nome
    MembroEquipeRequest:
      type: object
      properties:
        equipe:
          type: integer
        usuario:
          type: integer
        papel:
          $ref: '#/components/schemas/PapelF38Enum'
        adicionado_por:
          type: integer
          nullable: true
      required:
      - equipe
      - papel
      - usuario
    MembroProjeto:
      type: object
      description: |-
        Serializer para membros de projeto.

        Inclui informações básicas do usuário e seu papel no projeto.
      properties:
        id:
          type: integer
          readOnly: true
        usuario_id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
        full_name:
          type: string
          readOnly: true
        papel:
          $ref: '#/components/schemas/MembroProjetoPapelEnum'
        papel_display:
          type: string
          readOnly: true
          description: Nome do papel para exibição
      required:
      - full_name
      - id
      - papel
      - papel_display
      - username
      - usuario_id
    MembroProjetoPapelEnum:
      enum:
      - GERENTE
      - DESENVOLVEDOR
      - TESTADOR
      - ANALISTA
      - DESIGNER
      type: string
      description: |-
        * `GERENTE` - Gerente de Projeto
        * `DESENVOLVEDOR` - Desenvolvedor
        * `TESTADOR` - Testador
        * `ANALISTA` - Analista
        * `DESIGNER` - Designer
    MembroProjetoRequest:
      type: object
      description: |-
        Serializer para membros de projeto.

        Inclui informações básicas do usuário e seu papel no projeto.
      properties:
        usuario:
          type: integer
          writeOnly: true
        papel:
          $ref: '#/components/schemas/MembroProjetoPapelEnum'
      required:
      - papel
      - usuario
    MensagemChatEnum:
      enum:
      - EMAIL
      - SISTEMA
      - AMBOS
      - NENHUM
      type: string
      description: |-
        * `EMAIL` - E-mail
        * `SISTEMA` - Sistema
        * `AMBOS` - Ambos
        * `NENHUM` - Nenhum
    MetricasProjeto:
      type: object
      description: Serializador para métricas detalhadas de um projeto específico.
      properties:
        tarefas_por_status:
          type: array
          items:
            $ref: '#/components/schemas/ContadorTarefaStatus'
          description: Contagem de tarefas do projeto, agrupadas por status
        progresso:
          type: number
          format: double
          description: Percentual de conclusão do projeto (0-100)
        riscos_ativos:
          type: integer
          description: Número de riscos atualmente ativos para o projeto
        custos_totais:
          type: number
          format: double
          description: Soma dos custos registrados para o projeto
        dias_restantes:
          type: integer
          description: Número de dias restantes até a data final planejada do projeto
      required:
      - custos_totais
      - dias_restantes
      - progresso
      - riscos_ativos
      - tarefas_por_status
    ModuleEnum:
      enum:
      - PROJECTS
      - TASKS
      - TEAMS
      - RESOURCES
      - COMMUNICATIONS
      - RISKS
      - COSTS
      - DOCUMENTS
      - REPORTS
      - USERS
      - SETTINGS
      - DASHBOARD
      - NOTIFICATIONS
      - APPROVALS
      type: string
      description: |-
        * `PROJECTS` - Projects
        * `TASKS` - Tasks
        * `TEAMS` - Teams
        * `RESOURCES` - Resources
        * `COMMUNICATIONS` - Communications
        * `RISKS` - Risks
        * `COSTS` - Costs
        * `DOCUMENTS` - Documents
        * `REPORTS` - Reports
        * `USERS` - Users
        * `SETTINGS` - Settings
        * `DASHBOARD` - Dashboard
        * `NOTIFICATIONS` - Notifications
        * `APPROVALS` - Approvals
    ModuloEnum:
      enum:
      - TAREFAS
      - SPRINTS
      - DOCUMENTOS
      - RISCOS
      - CUSTOS
      type: string
      description: |-
        * `TAREFAS` - Tarefas
        * `SPRINTS` - Sprints
        * `DOCUMENTOS` - Documentos
        * `RISCOS` - Riscos
        * `CUSTOS` - Custos
    Notificacao:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        usuario:
          type: integer
          description: Usuário que receberá a notificação
        tipo:
          allOf:
          - $ref: '#/components/schemas/NotificacaoTipoEnum'
          description: |-
            Tipo de objeto relacionado à notificação

            * `TAREFA` - Tarefa
            * `PROJETO` - Projeto
            * `EQUIPE` - Equipe
            * `RISCO` - Risco
            * `DOCUMENTO` - Documento
            * `SISTEMA` - Sistema
        tipo_display:
          type: string
          readOnly: true
        titulo:
          type: string
          description: Título breve da notificação
          maxLength: 200
        mensagem:
          type: string
          description: Conteúdo detalhado da notificação
        lida:
          type: boolean
          description: Indica se a notificação foi lida pelo usuário
        prioridade:
          allOf:
          - $ref: '#/components/schemas/PrioridadeEnum'
          description: |-
            Nível de prioridade da notificação

            * `BAIXA` - Baixa
            * `MEDIA` - Média
            * `ALTA` - Alta
        prioridade_display:
          type: string
          readOnly: true
        criada_em:
          type: string
          format: date-time
          readOnly: true
          description: Data e hora em que a notificação foi criada
        lida_em:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          description: Data e hora em que a notificação foi lida (se aplicável)
        projeto:
          type: integer
          nullable: true
          description: Projeto relacionado à notificação (se aplicável)
        projeto_nome:
          type: string
          readOnly: true
        tarefa:
          type: integer
          nullable: true
          description: Tarefa relacionada à notificação (se aplicável)
        tarefa_titulo:
          type: string
          readOnly: true
        url:
          type: string
          nullable: true
          description: URL para redirecionamento quando a notificação for clicada
          maxLength: 255
      required:
      - criada_em
      - id
      - lida_em
      - mensagem
      - prioridade_display
      - projeto_nome
      - tarefa_titulo
      - tipo
      - tipo_display
      - titulo
      - usuario
    NotificacaoRequest:
      type: object
      properties:
        usuario:
          type: integer
          description: Usuário que receberá a notificação
        tipo:
          allOf:
          - $ref: '#/components/schemas/NotificacaoTipoEnum'
          description: |-
            Tipo de objeto relacionado à notificação

            * `TAREFA` - Tarefa
            * `PROJETO` - Projeto
            * `EQUIPE` - Equipe
            * `RISCO` - Risco
            * `DOCUMENTO` - Documento
            * `SISTEMA` - Sistema
        titulo:
          type: string
          minLength: 1
          description: Título breve da notificação
          maxLength: 200
        mensagem:
          type: string
          minLength: 1
          description: Conteúdo detalhado da notificação
        lida:
          type: boolean
          description: Indica se a notificação foi lida pelo usuário
        prioridade:
          allOf:
          - $ref: '#/components/schemas/PrioridadeEnum'
          description: |-
            Nível de prioridade da notificação

            * `BAIXA` - Baixa
            * `MEDIA` - Média
            * `ALTA` - Alta
        projeto:
          type: integer
          nullable: true
          description: Projeto relacionado à notificação (se aplicável)
        tarefa:
          type: integer
          nullable: true
          description: Tarefa relacionada à notificação (se aplicável)
        url:
          type: string
          nullable: true
          description: URL para redirecionamento quando a notificação for clicada
          maxLength: 255
      required:
      - mensagem
      - tipo
      - titulo
      - usuario
    NotificacaoTipoEnum:
      enum:
      - TAREFA
      - PROJETO
      - EQUIPE
      - RISCO
      - DOCUMENTO
      - SISTEMA
      type: string
      description: |-
        * `TAREFA` - Tarefa
        * `PROJETO` - Projeto
        * `EQUIPE` - Equipe
        * `RISCO` - Risco
        * `DOCUMENTO` - Documento
        * `SISTEMA` - Sistema
    NovaProbabilidadeEnum:
      enum:
      - BAIXA
      - MEDIA
      - ALTA
      type: string
      description: |-
        * `BAIXA` - Baixa
        * `MEDIA` - Média
        * `ALTA` - Alta
    NovoStatus607Enum:
      enum:
      - A_FAZER
      - EM_ANDAMENTO
      - FEITO
      type: string
      description: |-
        * `A_FAZER` - A Fazer
        * `EM_ANDAMENTO` - Em Andamento
        * `FEITO` - Feito
    NovoStatusA52Enum:
      enum:
      - IDENTIFICADO
      - EM_ANALISE
      - MITIGADO
      - ACEITO
      - ELIMINADO
      type: string
      description: |-
        * `IDENTIFICADO` - Identificado
        * `EM_ANALISE` - Em Análise
        * `MITIGADO` - Mitigado
        * `ACEITO` - Aceito
        * `ELIMINADO` - Eliminado
    OrcamentoProjeto:
      type: object
      description: |-
        Serializer para o modelo OrcamentoProjeto.

        Inclui campos para o orçamento total e informações de aprovação.
        Adiciona campos de leitura para nomes relacionados (aprovador, projeto)
        e campos calculados (valor utilizado, valor restante, percentual utilizado).
      properties:
        id:
          type: integer
          readOnly: true
        projeto:
          type: integer
        projeto_nome:
          type: string
          readOnly: true
        valor_total:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        data_aprovacao:
          type: string
          format: date
          readOnly: true
        aprovado_por:
          type: integer
          nullable: true
        aprovado_por_nome:
          type: string
          readOnly: true
        observacoes:
          type: string
          nullable: true
        valor_utilizado:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
        valor_restante:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
        percentual_utilizado:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          readOnly: true
      required:
      - aprovado_por_nome
      - data_aprovacao
      - id
      - percentual_utilizado
      - projeto
      - projeto_nome
      - valor_restante
      - valor_total
      - valor_utilizado
    OrcamentoProjetoRequest:
      type: object
      description: |-
        Serializer para o modelo OrcamentoProjeto.

        Inclui campos para o orçamento total e informações de aprovação.
        Adiciona campos de leitura para nomes relacionados (aprovador, projeto)
        e campos calculados (valor utilizado, valor restante, percentual utilizado).
      properties:
        projeto:
          type: integer
        valor_total:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        aprovado_por:
          type: integer
          nullable: true
        observacoes:
          type: string
          nullable: true
      required:
      - projeto
      - valor_total
    OrcamentoTarefa:
      type: object
      description: |-
        Serializer para o modelo OrcamentoTarefa.

        Inclui campos para o orçamento de uma tarefa específica e informações de aprovação.
        Adiciona campos de leitura para nomes relacionados (aprovador, tarefa, projeto da tarefa)
        e campos calculados (valor utilizado, valor restante, percentual utilizado).
      properties:
        id:
          type: integer
          readOnly: true
        tarefa:
          type: integer
        tarefa_titulo:
          type: string
          readOnly: true
        projeto_nome:
          type: string
          readOnly: true
        valor:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        data_aprovacao:
          type: string
          format: date
          readOnly: true
        aprovado_por:
          type: integer
          nullable: true
        aprovado_por_nome:
          type: string
          readOnly: true
        observacoes:
          type: string
          nullable: true
        valor_utilizado:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
        valor_restante:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
        percentual_utilizado:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          readOnly: true
      required:
      - aprovado_por_nome
      - data_aprovacao
      - id
      - percentual_utilizado
      - projeto_nome
      - tarefa
      - tarefa_titulo
      - valor
      - valor_restante
      - valor_utilizado
    OrcamentoTarefaRequest:
      type: object
      description: |-
        Serializer para o modelo OrcamentoTarefa.

        Inclui campos para o orçamento de uma tarefa específica e informações de aprovação.
        Adiciona campos de leitura para nomes relacionados (aprovador, tarefa, projeto da tarefa)
        e campos calculados (valor utilizado, valor restante, percentual utilizado).
      properties:
        tarefa:
          type: integer
        valor:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        aprovado_por:
          type: integer
          nullable: true
        observacoes:
          type: string
          nullable: true
      required:
      - tarefa
      - valor
    PaginatedAccessProfileList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AccessProfile'
    PaginatedAlertaList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Alerta'
    PaginatedAtribuicaoTarefaList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AtribuicaoTarefa'
    PaginatedCategoriaList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Categoria'
    PaginatedChatMensagemList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ChatMensagem'
    PaginatedComentarioList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Comentario'
    PaginatedComentarioTarefaList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ComentarioTarefa'
    PaginatedConfiguracaoNotificacaoList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ConfiguracaoNotificacao'
    PaginatedCustoListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CustoList'
    PaginatedDocumentoListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DocumentoList'
    PaginatedEquipeListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/EquipeList'
    PaginatedHistoricoDocumentoList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/HistoricoDocumento'
    PaginatedHistoricoRiscoList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/HistoricoRisco'
    PaginatedHistoricoStatusTarefaList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/HistoricoStatusTarefa'
    PaginatedMembroEquipeList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/MembroEquipe'
    PaginatedMembroProjetoList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/MembroProjeto'
    PaginatedNotificacaoList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Notificacao'
    PaginatedOrcamentoProjetoList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrcamentoProjeto'
    PaginatedOrcamentoTarefaList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrcamentoTarefa'
    PaginatedPermissaoEquipeList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PermissaoEquipe'
    PaginatedPermissionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
    PaginatedProjetoListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProjetoList'
    PaginatedRiscoListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/RiscoList'
    PaginatedTarefaListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TarefaList'
    PaginatedUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PaginatedUserProfileList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserProfile'
    PapelF38Enum:
      enum:
      - PO
      - SM
      - DEV
      - QA
      - DESIGN
      - ANALISTA
      type: string
      description: |-
        * `PO` - Product Owner
        * `SM` - Scrum Master
        * `DEV` - Desenvolvedor
        * `QA` - Analista de Qualidade
        * `DESIGN` - Designer
        * `ANALISTA` - Analista
    PatchedAccessProfileRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          nullable: true
    PatchedAlertaRequest:
      type: object
      description: |-
        Serializer para o modelo Alerta.

        Inclui todos os campos do modelo Alerta.
        Adiciona campos de leitura para exibir o valor textual dos campos de escolha
        ('tipo', 'status') e nomes relacionados (projeto, tarefa, resolvedor).
      properties:
        tipo:
          $ref: '#/components/schemas/AlertaTipoEnum'
        projeto:
          type: integer
        tarefa:
          type: integer
          nullable: true
        percentual:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        mensagem:
          type: string
          minLength: 1
        status:
          $ref: '#/components/schemas/AlertaStatusEnum'
        resolvido_por:
          type: integer
          nullable: true
    PatchedAtribuicaoTarefaRequest:
      type: object
      properties:
        tarefa:
          type: integer
        usuario:
          type: integer
        atribuido_por:
          type: integer
          nullable: true
    PatchedCategoriaRequest:
      type: object
      description: |-
        Serializer para o modelo Categoria.

        Utilizado para serializar/desserializar dados da categoria.
        Inclui todos os campos do modelo.
      properties:
        nome:
          type: string
          minLength: 1
          maxLength: 100
        descricao:
          type: string
          nullable: true
    PatchedChatMensagemRequest:
      type: object
      properties:
        projeto:
          type: integer
          description: Projeto ao qual a mensagem pertence
        texto:
          type: string
          minLength: 1
          description: Conteúdo da mensagem
        anexo:
          type: string
          format: binary
          nullable: true
          description: Arquivo opcional anexado à mensagem
    PatchedComentarioRequest:
      type: object
      properties:
        documento:
          type: integer
        autor:
          type: integer
        texto:
          type: string
          minLength: 1
    PatchedComentarioTarefaRequest:
      type: object
      properties:
        tarefa:
          type: integer
        autor:
          type: integer
        texto:
          type: string
          minLength: 1
    PatchedConfiguracaoNotificacaoRequest:
      type: object
      properties:
        usuario:
          type: integer
          description: Usuário ao qual estas configurações pertencem
        tarefa_atribuida:
          allOf:
          - $ref: '#/components/schemas/TarefaAtribuidaEnum'
          description: |-
            Canal de notificação quando uma tarefa é atribuída ao usuário

            * `EMAIL` - E-mail
            * `SISTEMA` - Sistema
            * `AMBOS` - Ambos
            * `NENHUM` - Nenhum
        tarefa_comentario:
          allOf:
          - $ref: '#/components/schemas/TarefaComentarioEnum'
          description: |-
            Canal de notificação quando há um novo comentário em uma tarefa do usuário

            * `EMAIL` - E-mail
            * `SISTEMA` - Sistema
            * `AMBOS` - Ambos
            * `NENHUM` - Nenhum
        tarefa_prazo:
          allOf:
          - $ref: '#/components/schemas/TarefaPrazoEnum'
          description: |-
            Canal de notificação para lembretes de prazo de tarefas

            * `EMAIL` - E-mail
            * `SISTEMA` - Sistema
            * `AMBOS` - Ambos
            * `NENHUM` - Nenhum
        projeto_status:
          allOf:
          - $ref: '#/components/schemas/ProjetoStatusEnum'
          description: |-
            Canal de notificação quando o status de um projeto é alterado

            * `EMAIL` - E-mail
            * `SISTEMA` - Sistema
            * `AMBOS` - Ambos
            * `NENHUM` - Nenhum
        equipe_alteracao:
          allOf:
          - $ref: '#/components/schemas/EquipeAlteracaoEnum'
          description: |-
            Canal de notificação quando há alterações na equipe de um projeto

            * `EMAIL` - E-mail
            * `SISTEMA` - Sistema
            * `AMBOS` - Ambos
            * `NENHUM` - Nenhum
        documento_novo:
          allOf:
          - $ref: '#/components/schemas/DocumentoNovoEnum'
          description: |-
            Canal de notificação quando um novo documento é adicionado

            * `EMAIL` - E-mail
            * `SISTEMA` - Sistema
            * `AMBOS` - Ambos
            * `NENHUM` - Nenhum
        risco_novo:
          allOf:
          - $ref: '#/components/schemas/RiscoNovoEnum'
          description: |-
            Canal de notificação quando um novo risco é registrado

            * `EMAIL` - E-mail
            * `SISTEMA` - Sistema
            * `AMBOS` - Ambos
            * `NENHUM` - Nenhum
        mensagem_chat:
          allOf:
          - $ref: '#/components/schemas/MensagemChatEnum'
          description: |-
            Canal de notificação para novas mensagens de chat

            * `EMAIL` - E-mail
            * `SISTEMA` - Sistema
            * `AMBOS` - Ambos
            * `NENHUM` - Nenhum
    PatchedCustoRequest:
      type: object
      description: |-
        Serializer detalhado para o modelo Custo.

        Inclui todos os campos do modelo Custo e adiciona campos de leitura
        para exibir nomes relacionados de outros modelos (usuário, projeto, tarefa, categoria)
        e o valor textual dos campos de escolha ('tipo').
      properties:
        projeto:
          type: integer
        tarefa:
          type: integer
          nullable: true
        categoria:
          type: integer
          nullable: true
        descricao:
          type: string
          minLength: 1
          maxLength: 200
        valor:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        tipo:
          $ref: '#/components/schemas/CustoTipoEnum'
        data:
          type: string
          format: date
        comprovante:
          type: string
          format: binary
          nullable: true
        observacoes:
          type: string
          nullable: true
        criado_por:
          type: integer
          nullable: true
    PatchedDocumentoRequest:
      type: object
      properties:
        projeto:
          type: integer
        tarefa:
          type: integer
          nullable: true
        titulo:
          type: string
          minLength: 1
          maxLength: 200
        descricao:
          type: string
          nullable: true
        tipo:
          $ref: '#/components/schemas/Tipo0e9Enum'
        arquivo:
          type: string
          format: binary
        versao:
          type: string
          minLength: 1
          maxLength: 20
        enviado_por:
          type: integer
          nullable: true
    PatchedEquipeRequest:
      type: object
      properties:
        nome:
          type: string
          minLength: 1
          maxLength: 100
        descricao:
          type: string
          nullable: true
        criado_por:
          type: integer
          nullable: true
    PatchedMembroEquipeRequest:
      type: object
      properties:
        equipe:
          type: integer
        usuario:
          type: integer
        papel:
          $ref: '#/components/schemas/PapelF38Enum'
        adicionado_por:
          type: integer
          nullable: true
    PatchedNotificacaoRequest:
      type: object
      properties:
        usuario:
          type: integer
          description: Usuário que receberá a notificação
        tipo:
          allOf:
          - $ref: '#/components/schemas/NotificacaoTipoEnum'
          description: |-
            Tipo de objeto relacionado à notificação

            * `TAREFA` - Tarefa
            * `PROJETO` - Projeto
            * `EQUIPE` - Equipe
            * `RISCO` - Risco
            * `DOCUMENTO` - Documento
            * `SISTEMA` - Sistema
        titulo:
          type: string
          minLength: 1
          description: Título breve da notificação
          maxLength: 200
        mensagem:
          type: string
          minLength: 1
          description: Conteúdo detalhado da notificação
        lida:
          type: boolean
          description: Indica se a notificação foi lida pelo usuário
        prioridade:
          allOf:
          - $ref: '#/components/schemas/PrioridadeEnum'
          description: |-
            Nível de prioridade da notificação

            * `BAIXA` - Baixa
            * `MEDIA` - Média
            * `ALTA` - Alta
        projeto:
          type: integer
          nullable: true
          description: Projeto relacionado à notificação (se aplicável)
        tarefa:
          type: integer
          nullable: true
          description: Tarefa relacionada à notificação (se aplicável)
        url:
          type: string
          nullable: true
          description: URL para redirecionamento quando a notificação for clicada
          maxLength: 255
    PatchedOrcamentoProjetoRequest:
      type: object
      description: |-
        Serializer para o modelo OrcamentoProjeto.

        Inclui campos para o orçamento total e informações de aprovação.
        Adiciona campos de leitura para nomes relacionados (aprovador, projeto)
        e campos calculados (valor utilizado, valor restante, percentual utilizado).
      properties:
        projeto:
          type: integer
        valor_total:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        aprovado_por:
          type: integer
          nullable: true
        observacoes:
          type: string
          nullable: true
    PatchedOrcamentoTarefaRequest:
      type: object
      description: |-
        Serializer para o modelo OrcamentoTarefa.

        Inclui campos para o orçamento de uma tarefa específica e informações de aprovação.
        Adiciona campos de leitura para nomes relacionados (aprovador, tarefa, projeto da tarefa)
        e campos calculados (valor utilizado, valor restante, percentual utilizado).
      properties:
        tarefa:
          type: integer
        valor:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        aprovado_por:
          type: integer
          nullable: true
        observacoes:
          type: string
          nullable: true
    PatchedPermissaoEquipeRequest:
      type: object
      properties:
        papel:
          $ref: '#/components/schemas/PapelF38Enum'
        equipe:
          type: integer
        modulo:
          $ref: '#/components/schemas/ModuloEnum'
        permissao:
          $ref: '#/components/schemas/PermissaoEnum'
    PatchedPermissionRequest:
      type: object
      properties:
        module:
          $ref: '#/components/schemas/ModuleEnum'
        action:
          $ref: '#/components/schemas/ActionEnum'
    PatchedProjetoRequest:
      type: object
      description: |-
        Serializer completo para projetos.

        Inclui informações detalhadas do projeto, membros, estatísticas de sprints e tarefas.
      properties:
        titulo:
          type: string
          minLength: 1
          maxLength: 100
        descricao:
          type: string
          minLength: 1
        data_inicio:
          type: string
          format: date
        data_fim:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/Status18dEnum'
        prioridade:
          $ref: '#/components/schemas/PrioridadeEnum'
        arquivado:
          type: boolean
    PatchedRiscoRequest:
      type: object
      properties:
        projeto:
          type: integer
        descricao:
          type: string
          minLength: 1
        probabilidade:
          $ref: '#/components/schemas/ProbabilidadeEnum'
        impacto:
          $ref: '#/components/schemas/ImpactoEnum'
        status:
          $ref: '#/components/schemas/NovoStatusA52Enum'
        responsavel_mitigacao:
          type: integer
          nullable: true
        plano_mitigacao:
          type: string
          nullable: true
        plano_contingencia:
          type: string
          nullable: true
        criado_por:
          type: integer
          nullable: true
    PatchedTarefaRequest:
      type: object
      properties:
        titulo:
          type: string
          minLength: 1
          maxLength: 200
        descricao:
          type: string
          minLength: 1
        projeto:
          type: integer
        sprint:
          type: integer
          nullable: true
        data_inicio:
          type: string
          format: date
        data_termino:
          type: string
          format: date
        prioridade:
          $ref: '#/components/schemas/PrioridadeEnum'
        status:
          $ref: '#/components/schemas/NovoStatus607Enum'
    PatchedUserProfileRequest:
      type: object
      properties:
        phone:
          type: string
          nullable: true
          maxLength: 20
        profile_picture:
          type: string
          format: binary
          nullable: true
        theme_preference:
          $ref: '#/components/schemas/ThemePreferenceEnum'
        email_notifications:
          type: boolean
        system_notifications:
          type: boolean
    PatchedUserRequest:
      type: object
      description: Serializer para operações de usuário (leitura, atualização).
      properties:
        username:
          type: string
          minLength: 1
          maxLength: 30
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        full_name:
          type: string
          minLength: 1
          maxLength: 100
        role:
          $ref: '#/components/schemas/RoleEnum'
        profile:
          $ref: '#/components/schemas/UserProfileRequest'
        is_active:
          type: boolean
        password:
          type: string
          writeOnly: true
          minLength: 1
    PermissaoEnum:
      enum:
      - VISUALIZAR
      - CRIAR
      - EDITAR
      - EXCLUIR
      type: string
      description: |-
        * `VISUALIZAR` - Visualizar
        * `CRIAR` - Criar
        * `EDITAR` - Editar
        * `EXCLUIR` - Excluir
    PermissaoEquipe:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        papel:
          $ref: '#/components/schemas/PapelF38Enum'
        papel_display:
          type: string
          readOnly: true
        equipe:
          type: integer
        modulo:
          $ref: '#/components/schemas/ModuloEnum'
        modulo_display:
          type: string
          readOnly: true
        permissao:
          $ref: '#/components/schemas/PermissaoEnum'
        permissao_display:
          type: string
          readOnly: true
      required:
      - equipe
      - id
      - modulo
      - modulo_display
      - papel
      - papel_display
      - permissao
      - permissao_display
    PermissaoEquipeRequest:
      type: object
      properties:
        papel:
          $ref: '#/components/schemas/PapelF38Enum'
        equipe:
          type: integer
        modulo:
          $ref: '#/components/schemas/ModuloEnum'
        permissao:
          $ref: '#/components/schemas/PermissaoEnum'
      required:
      - equipe
      - modulo
      - papel
      - permissao
    Permission:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        module:
          $ref: '#/components/schemas/ModuleEnum'
        module_display:
          type: string
          readOnly: true
        action:
          $ref: '#/components/schemas/ActionEnum'
        action_display:
          type: string
          readOnly: true
      required:
      - action
      - action_display
      - id
      - module
      - module_display
    PermissionRequest:
      type: object
      properties:
        module:
          $ref: '#/components/schemas/ModuleEnum'
        action:
          $ref: '#/components/schemas/ActionEnum'
      required:
      - action
      - module
    PrioridadeEnum:
      enum:
      - BAIXA
      - MEDIA
      - ALTA
      type: string
      description: |-
        * `BAIXA` - Baixa
        * `MEDIA` - Média
        * `ALTA` - Alta
    ProbabilidadeAnteriorEnum:
      enum:
      - BAIXA
      - MEDIA
      - ALTA
      type: string
      description: |-
        * `BAIXA` - Baixa
        * `MEDIA` - Média
        * `ALTA` - Alta
    ProbabilidadeEnum:
      enum:
      - BAIXA
      - MEDIA
      - ALTA
      type: string
      description: |-
        * `BAIXA` - Baixa
        * `MEDIA` - Média
        * `ALTA` - Alta
    Projeto:
      type: object
      description: |-
        Serializer completo para projetos.

        Inclui informações detalhadas do projeto, membros, estatísticas de sprints e tarefas.
      properties:
        id:
          type: integer
          readOnly: true
        titulo:
          type: string
          maxLength: 100
        descricao:
          type: string
        data_inicio:
          type: string
          format: date
        data_fim:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/Status18dEnum'
        status_display:
          type: string
          readOnly: true
          description: Nome do status para exibição
        prioridade:
          $ref: '#/components/schemas/PrioridadeEnum'
        prioridade_display:
          type: string
          readOnly: true
          description: Nome da prioridade para exibição
        criado_por:
          type: integer
          readOnly: true
          nullable: true
        criador_username:
          type: string
          readOnly: true
          description: Nome de usuário do criador
        criador_nome:
          type: string
          readOnly: true
          description: Nome completo do criador
        criado_em:
          type: string
          format: date-time
          readOnly: true
        atualizado_em:
          type: string
          format: date-time
          readOnly: true
        arquivado:
          type: boolean
        membros:
          type: array
          items:
            $ref: '#/components/schemas/MembroProjeto'
          readOnly: true
          description: Lista de membros associados ao projeto
        sprints_count:
          type: integer
          description: Número total de sprints neste projeto
          readOnly: true
        tasks_count:
          type: integer
          description: Número total de tarefas neste projeto
          readOnly: true
        progresso:
          type: integer
          description: Progresso do projeto em percentual (0-100)
          readOnly: true
        dias_restantes:
          type: integer
          description: Dias restantes até a data de fim
          readOnly: true
        atrasado:
          type: boolean
          description: Indica se o projeto está atrasado
          readOnly: true
      required:
      - atrasado
      - atualizado_em
      - criado_em
      - criado_por
      - criador_nome
      - criador_username
      - data_fim
      - data_inicio
      - descricao
      - dias_restantes
      - id
      - membros
      - prioridade_display
      - progresso
      - sprints_count
      - status_display
      - tasks_count
      - titulo
    ProjetoList:
      type: object
      description: |-
        Serializer otimizado para listagem de projetos.

        Inclui informações resumidas e estatísticas básicas para listagem eficiente.
      properties:
        id:
          type: integer
          readOnly: true
        titulo:
          type: string
          maxLength: 100
        descricao:
          type: string
        data_inicio:
          type: string
          format: date
        data_fim:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/Status18dEnum'
        status_display:
          type: string
          readOnly: true
          description: Nome do status para exibição
        prioridade:
          $ref: '#/components/schemas/PrioridadeEnum'
        prioridade_display:
          type: string
          readOnly: true
          description: Nome da prioridade para exibição
        criado_em:
          type: string
          format: date-time
          readOnly: true
        atualizado_em:
          type: string
          format: date-time
          readOnly: true
        arquivado:
          type: boolean
        membros_count:
          type: integer
          description: Número total de membros neste projeto
          readOnly: true
        tasks_count:
          type: integer
          description: Número total de tarefas neste projeto
          readOnly: true
        progresso:
          type: integer
          description: Progresso do projeto em percentual (0-100)
          readOnly: true
        criador_username:
          type: string
          readOnly: true
          description: Nome de usuário do criador
        atrasado:
          type: boolean
          description: Indica se o projeto está atrasado
          readOnly: true
      required:
      - atrasado
      - atualizado_em
      - criado_em
      - criador_username
      - data_fim
      - data_inicio
      - descricao
      - id
      - membros_count
      - prioridade_display
      - progresso
      - status_display
      - tasks_count
      - titulo
    ProjetoRequest:
      type: object
      description: |-
        Serializer completo para projetos.

        Inclui informações detalhadas do projeto, membros, estatísticas de sprints e tarefas.
      properties:
        titulo:
          type: string
          minLength: 1
          maxLength: 100
        descricao:
          type: string
          minLength: 1
        data_inicio:
          type: string
          format: date
        data_fim:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/Status18dEnum'
        prioridade:
          $ref: '#/components/schemas/PrioridadeEnum'
        arquivado:
          type: boolean
      required:
      - data_fim
      - data_inicio
      - descricao
      - titulo
    ProjetoStatusEnum:
      enum:
      - EMAIL
      - SISTEMA
      - AMBOS
      - NENHUM
      type: string
      description: |-
        * `EMAIL` - E-mail
        * `SISTEMA` - Sistema
        * `AMBOS` - Ambos
        * `NENHUM` - Nenhum
    ProximaTarefa:
      type: object
      description: Serializador para detalhes de próximas tarefas agendadas.
      properties:
        titulo:
          type: string
          description: Título da tarefa
        data_inicio:
          type: string
          format: date-time
          description: Data e hora de início planejadas para a tarefa
        projeto__titulo:
          type: string
          description: Título do projeto ao qual esta tarefa pertence
      required:
      - data_inicio
      - projeto__titulo
      - titulo
    ResetPassword:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    ResetPasswordRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
      required:
      - email
    Risco:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        projeto:
          type: integer
        projeto_nome:
          type: string
          readOnly: true
        descricao:
          type: string
        probabilidade:
          $ref: '#/components/schemas/ProbabilidadeEnum'
        probabilidade_display:
          type: string
          readOnly: true
        impacto:
          $ref: '#/components/schemas/ImpactoEnum'
        impacto_display:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/NovoStatusA52Enum'
        status_display:
          type: string
          readOnly: true
        responsavel_mitigacao:
          type: integer
          nullable: true
        responsavel_mitigacao_nome:
          type: string
          readOnly: true
        plano_mitigacao:
          type: string
          nullable: true
        plano_contingencia:
          type: string
          nullable: true
        data_identificacao:
          type: string
          format: date
          readOnly: true
        criado_por:
          type: integer
          nullable: true
        criado_por_nome:
          type: string
          readOnly: true
        atualizado_em:
          type: string
          format: date-time
          readOnly: true
        nivel_risco:
          type: string
          readOnly: true
        historico:
          type: array
          items:
            $ref: '#/components/schemas/HistoricoRisco'
          readOnly: true
      required:
      - atualizado_em
      - criado_por_nome
      - data_identificacao
      - descricao
      - historico
      - id
      - impacto
      - impacto_display
      - nivel_risco
      - probabilidade
      - probabilidade_display
      - projeto
      - projeto_nome
      - responsavel_mitigacao_nome
      - status_display
    RiscoList:
      type: object
      description: Serializer simplificado para listagem de riscos
      properties:
        id:
          type: integer
          readOnly: true
        projeto:
          type: integer
        projeto_nome:
          type: string
          readOnly: true
        descricao:
          type: string
        probabilidade:
          $ref: '#/components/schemas/ProbabilidadeEnum'
        probabilidade_display:
          type: string
          readOnly: true
        impacto:
          $ref: '#/components/schemas/ImpactoEnum'
        impacto_display:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/NovoStatusA52Enum'
        status_display:
          type: string
          readOnly: true
        responsavel_mitigacao:
          type: integer
          nullable: true
        responsavel_mitigacao_nome:
          type: string
          readOnly: true
        data_identificacao:
          type: string
          format: date
          readOnly: true
        nivel_risco:
          type: string
          readOnly: true
      required:
      - data_identificacao
      - descricao
      - id
      - impacto
      - impacto_display
      - nivel_risco
      - probabilidade
      - probabilidade_display
      - projeto
      - projeto_nome
      - responsavel_mitigacao_nome
      - status_display
    RiscoNovoEnum:
      enum:
      - EMAIL
      - SISTEMA
      - AMBOS
      - NENHUM
      type: string
      description: |-
        * `EMAIL` - E-mail
        * `SISTEMA` - Sistema
        * `AMBOS` - Ambos
        * `NENHUM` - Nenhum
    RiscoRequest:
      type: object
      properties:
        projeto:
          type: integer
        descricao:
          type: string
          minLength: 1
        probabilidade:
          $ref: '#/components/schemas/ProbabilidadeEnum'
        impacto:
          $ref: '#/components/schemas/ImpactoEnum'
        status:
          $ref: '#/components/schemas/NovoStatusA52Enum'
        responsavel_mitigacao:
          type: integer
          nullable: true
        plano_mitigacao:
          type: string
          nullable: true
        plano_contingencia:
          type: string
          nullable: true
        criado_por:
          type: integer
          nullable: true
      required:
      - descricao
      - impacto
      - probabilidade
      - projeto
    RoleEnum:
      enum:
      - ADMIN
      - PROJECT_MANAGER
      - TEAM_LEADER
      - TEAM_MEMBER
      - STAKEHOLDER
      - AUDITOR
      type: string
      description: |-
        * `ADMIN` - Administrator
        * `PROJECT_MANAGER` - Project Manager
        * `TEAM_LEADER` - Team Leader
        * `TEAM_MEMBER` - Team Member
        * `STAKEHOLDER` - Stakeholder/Client
        * `AUDITOR` - Auditor
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    SendEmailResetRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
      required:
      - email
    SetNewPassword:
      type: object
      properties:
        password:
          type: string
        token:
          type: string
      required:
      - password
      - token
    SetNewPasswordRequest:
      type: object
      properties:
        password:
          type: string
          minLength: 1
        token:
          type: string
          minLength: 1
      required:
      - password
      - token
    SetPasswordRetype:
      type: object
      properties:
        new_password:
          type: string
        re_new_password:
          type: string
        current_password:
          type: string
      required:
      - current_password
      - new_password
      - re_new_password
    SetPasswordRetypeRequest:
      type: object
      properties:
        new_password:
          type: string
          minLength: 1
        re_new_password:
          type: string
          minLength: 1
        current_password:
          type: string
          minLength: 1
      required:
      - current_password
      - new_password
      - re_new_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_username:
          type: string
          title: Username
          maxLength: 30
      required:
      - current_password
      - new_username
    SetUsernameRequest:
      type: object
      properties:
        current_password:
          type: string
          minLength: 1
        new_username:
          type: string
          minLength: 1
          title: Username
          maxLength: 30
      required:
      - current_password
      - new_username
    Status18dEnum:
      enum:
      - PLANEJADO
      - EM_ANDAMENTO
      - PAUSADO
      - CONCLUIDO
      - CANCELADO
      type: string
      description: |-
        * `PLANEJADO` - Planejado
        * `EM_ANDAMENTO` - Em Andamento
        * `PAUSADO` - Pausado
        * `CONCLUIDO` - Concluído
        * `CANCELADO` - Cancelado
    Tarefa:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        titulo:
          type: string
          maxLength: 200
        descricao:
          type: string
        projeto:
          type: integer
        sprint:
          type: integer
          nullable: true
        data_inicio:
          type: string
          format: date
        data_termino:
          type: string
          format: date
        prioridade:
          $ref: '#/components/schemas/PrioridadeEnum'
        status:
          $ref: '#/components/schemas/NovoStatus607Enum'
        criado_por:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        criado_em:
          type: string
          format: date-time
          readOnly: true
        atualizado_em:
          type: string
          format: date-time
          readOnly: true
        atribuicoes:
          type: array
          items:
            $ref: '#/components/schemas/AtribuicaoTarefa'
          readOnly: true
          description: Lista de usuários atribuídos a esta tarefa.
      required:
      - atribuicoes
      - atualizado_em
      - criado_em
      - criado_por
      - data_inicio
      - data_termino
      - descricao
      - id
      - projeto
      - titulo
    TarefaAtribuidaEnum:
      enum:
      - EMAIL
      - SISTEMA
      - AMBOS
      - NENHUM
      type: string
      description: |-
        * `EMAIL` - E-mail
        * `SISTEMA` - Sistema
        * `AMBOS` - Ambos
        * `NENHUM` - Nenhum
    TarefaComentarioEnum:
      enum:
      - EMAIL
      - SISTEMA
      - AMBOS
      - NENHUM
      type: string
      description: |-
        * `EMAIL` - E-mail
        * `SISTEMA` - Sistema
        * `AMBOS` - Ambos
        * `NENHUM` - Nenhum
    TarefaList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        titulo:
          type: string
          maxLength: 200
        projeto:
          type: integer
        sprint:
          type: integer
          nullable: true
        status:
          $ref: '#/components/schemas/NovoStatus607Enum'
        prioridade:
          $ref: '#/components/schemas/PrioridadeEnum'
        data_termino:
          type: string
          format: date
        criado_por:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        atribuicoes:
          type: array
          items:
            $ref: '#/components/schemas/AtribuicaoTarefa'
          readOnly: true
          description: Lista de usuários atribuídos a esta tarefa.
      required:
      - atribuicoes
      - criado_por
      - data_termino
      - id
      - projeto
      - titulo
    TarefaPrazoEnum:
      enum:
      - EMAIL
      - SISTEMA
      - AMBOS
      - NENHUM
      type: string
      description: |-
        * `EMAIL` - E-mail
        * `SISTEMA` - Sistema
        * `AMBOS` - Ambos
        * `NENHUM` - Nenhum
    TarefaRequest:
      type: object
      properties:
        titulo:
          type: string
          minLength: 1
          maxLength: 200
        descricao:
          type: string
          minLength: 1
        projeto:
          type: integer
        sprint:
          type: integer
          nullable: true
        data_inicio:
          type: string
          format: date
        data_termino:
          type: string
          format: date
        prioridade:
          $ref: '#/components/schemas/PrioridadeEnum'
        status:
          $ref: '#/components/schemas/NovoStatus607Enum'
      required:
      - data_inicio
      - data_termino
      - descricao
      - projeto
      - titulo
    ThemePreferenceEnum:
      enum:
      - LIGHT
      - DARK
      - SYSTEM
      type: string
      description: |-
        * `LIGHT` - Light
        * `DARK` - Dark
        * `SYSTEM` - System
    Tipo0e9Enum:
      enum:
      - REQUISITO
      - DESIGN
      - MANUAL
      - RELATORIO
      - ATA
      - OUTRO
      type: string
      description: |-
        * `REQUISITO` - Requisito
        * `DESIGN` - Design
        * `MANUAL` - Manual
        * `RELATORIO` - Relatório
        * `ATA` - Ata de Reunião
        * `OUTRO` - Outro
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          minLength: 1
      required:
      - refresh
    User:
      type: object
      description: Serializer para operações de usuário (leitura, atualização).
      properties:
        username:
          type: string
          maxLength: 30
        email:
          type: string
          format: email
          maxLength: 254
        full_name:
          type: string
          maxLength: 100
        role:
          $ref: '#/components/schemas/RoleEnum'
        profile:
          $ref: '#/components/schemas/UserProfile'
        id:
          type: integer
          readOnly: true
        is_active:
          type: boolean
        date_joined:
          type: string
          format: date-time
          readOnly: true
        access_profiles:
          type: array
          items:
            $ref: '#/components/schemas/UserAccessProfile'
          readOnly: true
      required:
      - access_profiles
      - date_joined
      - email
      - full_name
      - id
      - username
    UserAccessProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        access_profile:
          allOf:
          - $ref: '#/components/schemas/AccessProfile'
          readOnly: true
      required:
      - access_profile
      - id
    UserAccessProfileRequest:
      type: object
      properties:
        access_profile_id:
          type: integer
          writeOnly: true
      required:
      - access_profile_id
    UserCreate:
      type: object
      description: Serializer para criação de usuários com validação de senha.
      properties:
        username:
          type: string
          maxLength: 30
        email:
          type: string
          format: email
          maxLength: 254
        full_name:
          type: string
          maxLength: 100
        role:
          $ref: '#/components/schemas/RoleEnum'
        profile:
          $ref: '#/components/schemas/UserProfile'
      required:
      - email
      - full_name
      - username
    UserCreateRequest:
      type: object
      description: Serializer para criação de usuários com validação de senha.
      properties:
        username:
          type: string
          minLength: 1
          maxLength: 30
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        full_name:
          type: string
          minLength: 1
          maxLength: 100
        role:
          $ref: '#/components/schemas/RoleEnum'
        profile:
          $ref: '#/components/schemas/UserProfileRequest'
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - email
      - full_name
      - password
      - username
    UserProfile:
      type: object
      properties:
        phone:
          type: string
          nullable: true
          maxLength: 20
        profile_picture:
          type: string
          format: uri
          nullable: true
        theme_preference:
          $ref: '#/components/schemas/ThemePreferenceEnum'
        email_notifications:
          type: boolean
        system_notifications:
          type: boolean
    UserProfileRequest:
      type: object
      properties:
        phone:
          type: string
          nullable: true
          maxLength: 20
        profile_picture:
          type: string
          format: binary
          nullable: true
        theme_preference:
          $ref: '#/components/schemas/ThemePreferenceEnum'
        email_notifications:
          type: boolean
        system_notifications:
          type: boolean
    UserRequest:
      type: object
      description: Serializer para operações de usuário (leitura, atualização).
      properties:
        username:
          type: string
          minLength: 1
          maxLength: 30
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        full_name:
          type: string
          minLength: 1
          maxLength: 100
        role:
          $ref: '#/components/schemas/RoleEnum'
        profile:
          $ref: '#/components/schemas/UserProfileRequest'
        is_active:
          type: boolean
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - email
      - full_name
      - username
    UsernameResetConfirm:
      type: object
      properties:
        new_username:
          type: string
          title: Username
          maxLength: 30
      required:
      - new_username
    UsernameResetConfirmRequest:
      type: object
      properties:
        new_username:
          type: string
          minLength: 1
          title: Username
          maxLength: 30
      required:
      - new_username
    VisaoGeralDashboard:
      type: object
      description: Serializador para visão geral do dashboard do sistema.
      properties:
        total_projetos:
          type: integer
          description: Número total de projetos no sistema
        total_tarefas:
          type: integer
          description: Número total de tarefas no sistema
        tarefas_por_status:
          type: array
          items:
            $ref: '#/components/schemas/ContadorTarefaStatus'
          description: Lista detalhada da contagem de tarefas por cada status
      required:
      - tarefas_por_status
      - total_projetos
      - total_tarefas
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
